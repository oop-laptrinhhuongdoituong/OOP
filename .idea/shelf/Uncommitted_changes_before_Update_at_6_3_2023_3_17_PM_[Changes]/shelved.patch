Index: src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\n\r\nimport com.example.baitaplonoop.sql.DBConnect;\r\nimport com.example.baitaplonoop.util.IsMouseOnLabel;\r\nimport com.example.baitaplonoop.util.TableQuestionsOfGui62;\r\nimport de.jensd.fx.glyphs.fontawesome.FontAwesomeIcon;\r\nimport de.jensd.fx.glyphs.fontawesome.FontAwesomeIconView;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.paint.Paint;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Pair;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.sql.SQLException;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.quizChosen;\r\n\r\npublic class GUI62Controller implements Initializable {\r\n    DBConnect db=new DBConnect();\r\n    @FXML\r\n    private ToggleButton selectMultipleItems;\r\n    @FXML\r\n    private Button deleteMultipleItems;\r\n    @FXML\r\n    private Label addLabel;\r\n    @FXML\r\n    private AnchorPane gui62;\r\n    @FXML\r\n    private ListView<Label> listModeAdd;\r\n    private ObservableList<Label> addMode = FXCollections.observableArrayList();\r\n    private ObservableList<TableQuestionsOfGui62> chosenQuestions = FXCollections.observableArrayList();\r\n    @FXML\r\n    private TableView<TableQuestionsOfGui62> tableQuestions;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, Label> DeleteIcon;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, CheckBox> MultiQuestionsChoice;\r\n    @FXML\r\n    private Label numberQuestionInTable;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, Text> Order;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, Label> PlusIcon;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, TextField> QuestionMark;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, String> QuestionText;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, Label> Setting;\r\n    @FXML\r\n    private Label totalOfMark;\r\n    @FXML\r\n    private Label quizNameLink;\r\n    @FXML\r\n    private Label quizName;\r\n    @FXML\r\n    private Button save;\r\n\r\n    private void addQuestionMode() {\r\n        listModeAdd.setVisible(false);\r\n        Label label1 = new Label(\"a new question\");\r\n        Label label2 = new Label(\"from question bank\");\r\n        Label label3 = new Label(\"random a question\");\r\n        addMode.addAll(label1, label2, label3);\r\n        listModeAdd.getItems().addAll(addMode);\r\n    }\r\n    private void numberQuestionAndMarkInTable(){\r\n        String a=\"Question: \"+Integer.toString(chosenQuestions.size())+\"| This quiz is open\";\r\n        numberQuestionInTable.setText(a);\r\n        String b=\"Total of mark: \"+Integer.toString(chosenQuestions.size())+\".00\";\r\n        totalOfMark.setText(b);\r\n    }\r\n    public void setChosenQuestions(ObservableList<Pair<String, String>> randomQuestion) {\r\n        tableQuestions.setVisible(false);\r\n        int stt = 0;\r\n        for (Pair<String, String> a : randomQuestion) {\r\n            stt++;\r\n            TableQuestionsOfGui62 tableQuestionsOfGui62;\r\n\r\n            //Tạo checkbox\r\n            CheckBox multiQuestionsChoice = new CheckBox();\r\n            //Tạo oder\r\n            Text order = new Text();\r\n            order.setText(Integer.toString(stt));\r\n            //Tạo questionText\r\n            String questionText = a.getValue();\r\n            //Tạo questionID\r\n            String questionID = a.getKey();\r\n            //tạo biểu tượng setting\r\n            Label setting = new Label();\r\n            FontAwesomeIconView iconView = new FontAwesomeIconView(FontAwesomeIcon.GEAR);\r\n            iconView.setSize(\"22px\");\r\n            iconView.setFill(Paint.valueOf(\"#000000\"));\r\n            setting.setGraphic(iconView);\r\n            //Tạo biểu tượng plusIcon\r\n            Label plushIcon = new Label();\r\n            FontAwesomeIconView iconView1 = new FontAwesomeIconView(FontAwesomeIcon.SEARCH_PLUS);\r\n            iconView1.setSize(\"22px\");\r\n            iconView1.setFill(Paint.valueOf(\"#000000\"));\r\n            plushIcon.setGraphic(iconView1);\r\n            //tạo biểu tượng deleteIcon\r\n            Label deleteIcon = new Label();\r\n            FontAwesomeIconView iconView2 = new FontAwesomeIconView(FontAwesomeIcon.TRASH);\r\n            iconView2.setSize(\"22px\");\r\n            iconView2.setFill(Paint.valueOf(\"#000000\"));\r\n            deleteIcon.setGraphic(iconView2);\r\n            deleteIcon.setOnMouseClicked(mouseEvent -> {\r\n            });\r\n            //tạo textField questionMark\r\n            TextField questionMark = new TextField(\"1.00\");\r\n            questionMark.setDisable(true);\r\n            tableQuestionsOfGui62 = new TableQuestionsOfGui62(multiQuestionsChoice, order, setting, questionText, questionID, plushIcon, deleteIcon, questionMark);\r\n            chosenQuestions.add(tableQuestionsOfGui62);\r\n        }\r\n        deleteEvent();\r\n        numberQuestionAndMarkInTable();\r\n        tableQuestions.setVisible(true);\r\n    }\r\n\r\n    private void addQuestionIntoTable() {\r\n        tableQuestions.setVisible(false);\r\n        tableQuestions.setTableMenuButtonVisible(false);\r\n        tableQuestions.setStyle(\"-fx-table-cell-border-color: transparent;\");\r\n        MultiQuestionsChoice.setVisible(false);\r\n        MultiQuestionsChoice.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, CheckBox>(\"multiQuestionsChoice\"));\r\n        Order.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, Text>(\"order\"));\r\n        Setting.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, Label>(\"setting\"));\r\n        QuestionText.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, String>(\"questionText\"));\r\n        PlusIcon.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, Label>(\"plusIcon\"));\r\n        DeleteIcon.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, Label>(\"deleteIcon\"));\r\n        QuestionMark.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, TextField>(\"questionMark\"));\r\n        numberQuestionAndMarkInTable();\r\n        tableQuestions.setItems(chosenQuestions);\r\n    }\r\n    private void deleteEvent(){\r\n        for(TableQuestionsOfGui62 a: chosenQuestions){\r\n            a.getDeleteIcon().setOnMouseClicked(mouseEvent -> {\r\n                    chosenQuestions.remove(a);\r\n                    int i=0;\r\n                    for(TableQuestionsOfGui62 b :chosenQuestions){\r\n                        i++;\r\n                        b.getOrder().setText(Integer.toString(i));\r\n                    }\r\n                    numberQuestionAndMarkInTable();\r\n            });\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        quizNameLink.setText(\"/\" + quizChosen + \"/ Edit quiz\");\r\n        quizName.setText(\"Editing quiz: \" + quizChosen);\r\n        deleteMultipleItems.setVisible(false);\r\n        tableQuestions.setVisible(false);\r\n        addQuestionIntoTable();\r\n        addQuestionMode();\r\n        addLabel.setOnMouseClicked(mouseEvent -> {\r\n            if (!listModeAdd.isVisible()) listModeAdd.setVisible(true);\r\n            else listModeAdd.setVisible(false);\r\n        });\r\n        gui62.setOnMouseClicked(mouseEvent -> {\r\n            if (listModeAdd.isVisible() && IsMouseOnLabel.isMouseOnLabel(addLabel, mouseEvent) == false)\r\n                listModeAdd.setVisible(false);\r\n        });\r\n        listModeAdd.setOnMouseClicked(mouseEvent -> {\r\n            Label label = listModeAdd.getSelectionModel().getSelectedItem();\r\n            if (label.getText() == \"random a question\") {\r\n                label.setOnMouseClicked(mouseEvent1 -> {\r\n                    Stage stage = (Stage) ((Node) mouseEvent1.getSource()).getScene().getWindow();\r\n                    FXMLLoader loader = new FXMLLoader();\r\n                    loader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/GUI65.fxml\"));\r\n                    try {\r\n                        Parent GUI65 = loader.load();\r\n                        Scene scene = new Scene(GUI65);\r\n                        stage.setScene(scene);\r\n                    } catch (IOException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n                });\r\n            }\r\n            if(label.getText()==\"from question bank\"){\r\n                label.setOnMouseClicked(mouseEvent1 -> {\r\n                    Stage stage = (Stage) ((Node) mouseEvent1.getSource()).getScene().getWindow();\r\n                    FXMLLoader loader = new FXMLLoader();\r\n                    loader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/GUI63.fxml\"));\r\n                    try {\r\n                        Parent GUI63 = loader.load();\r\n                        Scene scene = new Scene(GUI63);\r\n                        stage.setScene(scene);\r\n                    } catch (IOException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    selectMultipleItems.setOnAction(event -> {\r\n        if(selectMultipleItems.isSelected()){\r\n            MultiQuestionsChoice.setVisible(true);\r\n            deleteMultipleItems.setVisible(true);\r\n        }\r\n        else {\r\n            MultiQuestionsChoice.setVisible(false);\r\n            deleteMultipleItems.setVisible(false);\r\n        }\r\n    });\r\n    deleteMultipleItems.setOnAction(event -> {\r\n        for(int i=0;i<chosenQuestions.size();i++){\r\n            if(chosenQuestions.get(i).getMultiQuestionsChoice().isSelected()){\r\n                deleteMultipleItems.setVisible(true);\r\n                chosenQuestions.remove(chosenQuestions.get(i));\r\n                i--;\r\n            }\r\n        }\r\n        int i=0;\r\n        for(TableQuestionsOfGui62 b :chosenQuestions){\r\n            i++;\r\n            b.getOrder().setText(Integer.toString(i));\r\n        }\r\n        numberQuestionAndMarkInTable();\r\n    });\r\n    save.setOnAction(event -> {\r\n      for(int i=0;i<chosenQuestions.size();i++){\r\n          String[] addQuestionInQuiz={chosenQuestions.get(i).getQuestionID(),quizChosen,null};\r\n          try {\r\n              int row = db.InsertQuestionInQuiz(addQuestionInQuiz);\r\n          } catch (SQLException e) {\r\n              throw new RuntimeException(e);\r\n          }\r\n      }\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        FXMLLoader loader = new FXMLLoader();\r\n        loader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/GUI61.fxml\"));\r\n        try {\r\n            Parent gui61 = loader.load();\r\n            Scene scene = new Scene(gui61);\r\n            stage.setScene(scene);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java b/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java
--- a/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java	(revision 17a5e6c9ca3c0d58ab513e00afda87fbb9502c3a)
+++ b/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java	(date 1685777568205)
@@ -21,16 +21,16 @@
 import javafx.scene.text.Text;
 import javafx.stage.Stage;
 import javafx.util.Pair;
-
 import java.io.IOException;
 import java.net.URL;
+import java.sql.ResultSet;
 import java.sql.SQLException;
+import java.util.Objects;
 import java.util.ResourceBundle;
-
 import static com.example.baitaplonoop.controller.GUI11Controller.quizChosen;
-
 public class GUI62Controller implements Initializable {
-    DBConnect db=new DBConnect();
+    @FXML
+    private CheckBox shuffle;
     @FXML
     private ToggleButton selectMultipleItems;
     @FXML
@@ -41,8 +41,8 @@
     private AnchorPane gui62;
     @FXML
     private ListView<Label> listModeAdd;
-    private ObservableList<Label> addMode = FXCollections.observableArrayList();
-    private ObservableList<TableQuestionsOfGui62> chosenQuestions = FXCollections.observableArrayList();
+    private final ObservableList<Label> addMode = FXCollections.observableArrayList();
+    private final ObservableList<TableQuestionsOfGui62> chosenQuestions = FXCollections.observableArrayList();
     @FXML
     private TableView<TableQuestionsOfGui62> tableQuestions;
 
@@ -86,9 +86,9 @@
         listModeAdd.getItems().addAll(addMode);
     }
     private void numberQuestionAndMarkInTable(){
-        String a="Question: "+Integer.toString(chosenQuestions.size())+"| This quiz is open";
+        String a="Question: "+ chosenQuestions.size() +"| This quiz is open";
         numberQuestionInTable.setText(a);
-        String b="Total of mark: "+Integer.toString(chosenQuestions.size())+".00";
+        String b="Total of mark: "+ chosenQuestions.size() +".00";
         totalOfMark.setText(b);
     }
     public void setChosenQuestions(ObservableList<Pair<String, String>> randomQuestion) {
@@ -143,30 +143,37 @@
         tableQuestions.setTableMenuButtonVisible(false);
         tableQuestions.setStyle("-fx-table-cell-border-color: transparent;");
         MultiQuestionsChoice.setVisible(false);
-        MultiQuestionsChoice.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, CheckBox>("multiQuestionsChoice"));
-        Order.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, Text>("order"));
-        Setting.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, Label>("setting"));
-        QuestionText.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, String>("questionText"));
-        PlusIcon.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, Label>("plusIcon"));
-        DeleteIcon.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, Label>("deleteIcon"));
-        QuestionMark.setCellValueFactory(new PropertyValueFactory<TableQuestionsOfGui62, TextField>("questionMark"));
+        MultiQuestionsChoice.setCellValueFactory(new PropertyValueFactory<>("multiQuestionsChoice"));
+        Order.setCellValueFactory(new PropertyValueFactory<>("order"));
+        Setting.setCellValueFactory(new PropertyValueFactory<>("setting"));
+        QuestionText.setCellValueFactory(new PropertyValueFactory<>("questionText"));
+        PlusIcon.setCellValueFactory(new PropertyValueFactory<>("plusIcon"));
+        DeleteIcon.setCellValueFactory(new PropertyValueFactory<>("deleteIcon"));
+        QuestionMark.setCellValueFactory(new PropertyValueFactory<>("questionMark"));
         numberQuestionAndMarkInTable();
         tableQuestions.setItems(chosenQuestions);
     }
     private void deleteEvent(){
         for(TableQuestionsOfGui62 a: chosenQuestions){
             a.getDeleteIcon().setOnMouseClicked(mouseEvent -> {
-                    chosenQuestions.remove(a);
-                    int i=0;
-                    for(TableQuestionsOfGui62 b :chosenQuestions){
-                        i++;
-                        b.getOrder().setText(Integer.toString(i));
-                    }
-                    numberQuestionAndMarkInTable();
+                chosenQuestions.remove(a);
+                int i=0;
+                for(TableQuestionsOfGui62 b :chosenQuestions){
+                    i++;
+                    b.getOrder().setText(Integer.toString(i));
+                }
+                numberQuestionAndMarkInTable();
             });
         }
     }
-
+    private void setStatementShuffle(String quizName) throws SQLException {
+        DBConnect db=new DBConnect();
+        ResultSet rs=db.getData("select shuffle from dbo.Quiz where quizName = N'"+quizName+"'");
+        while (rs.next()){
+            boolean shuffleStatement=rs.getBoolean("shuffle");
+            shuffle.setSelected(shuffleStatement);
+        }
+    }
     @Override
     public void initialize(URL url, ResourceBundle resourceBundle) {
         quizNameLink.setText("/" + quizChosen + "/ Edit quiz");
@@ -175,17 +182,20 @@
         tableQuestions.setVisible(false);
         addQuestionIntoTable();
         addQuestionMode();
-        addLabel.setOnMouseClicked(mouseEvent -> {
-            if (!listModeAdd.isVisible()) listModeAdd.setVisible(true);
-            else listModeAdd.setVisible(false);
-        });
+        try {
+            setStatementShuffle(quizChosen);
+        } catch (SQLException e) {
+            throw new RuntimeException(e);
+        }
+        addLabel.setOnMouseClicked(mouseEvent -> listModeAdd.setVisible(!listModeAdd.isVisible()));
         gui62.setOnMouseClicked(mouseEvent -> {
-            if (listModeAdd.isVisible() && IsMouseOnLabel.isMouseOnLabel(addLabel, mouseEvent) == false)
+            if (listModeAdd.isVisible() && IsMouseOnLabel.isMouseOnLabel(addLabel, mouseEvent))
                 listModeAdd.setVisible(false);
         });
+
         listModeAdd.setOnMouseClicked(mouseEvent -> {
             Label label = listModeAdd.getSelectionModel().getSelectedItem();
-            if (label.getText() == "random a question") {
+            if (Objects.equals(label.getText(), "random a question")) {
                 label.setOnMouseClicked(mouseEvent1 -> {
                     Stage stage = (Stage) ((Node) mouseEvent1.getSource()).getScene().getWindow();
                     FXMLLoader loader = new FXMLLoader();
@@ -199,7 +209,7 @@
                     }
                 });
             }
-            if(label.getText()=="from question bank"){
+            if(Objects.equals(label.getText(), "from question bank")){
                 label.setOnMouseClicked(mouseEvent1 -> {
                     Stage stage = (Stage) ((Node) mouseEvent1.getSource()).getScene().getWindow();
                     FXMLLoader loader = new FXMLLoader();
@@ -214,50 +224,56 @@
                 });
             }
         });
-    selectMultipleItems.setOnAction(event -> {
-        if(selectMultipleItems.isSelected()){
-            MultiQuestionsChoice.setVisible(true);
-            deleteMultipleItems.setVisible(true);
-        }
-        else {
-            MultiQuestionsChoice.setVisible(false);
-            deleteMultipleItems.setVisible(false);
-        }
-    });
-    deleteMultipleItems.setOnAction(event -> {
-        for(int i=0;i<chosenQuestions.size();i++){
-            if(chosenQuestions.get(i).getMultiQuestionsChoice().isSelected()){
-                deleteMultipleItems.setVisible(true);
-                chosenQuestions.remove(chosenQuestions.get(i));
-                i--;
-            }
-        }
-        int i=0;
-        for(TableQuestionsOfGui62 b :chosenQuestions){
-            i++;
-            b.getOrder().setText(Integer.toString(i));
-        }
-        numberQuestionAndMarkInTable();
-    });
-    save.setOnAction(event -> {
-      for(int i=0;i<chosenQuestions.size();i++){
-          String[] addQuestionInQuiz={chosenQuestions.get(i).getQuestionID(),quizChosen,null};
-          try {
-              int row = db.InsertQuestionInQuiz(addQuestionInQuiz);
-          } catch (SQLException e) {
-              throw new RuntimeException(e);
-          }
-      }
-        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
-        FXMLLoader loader = new FXMLLoader();
-        loader.setLocation(getClass().getResource("/com/example/baitaplonoop/GUI61.fxml"));
-        try {
-            Parent gui61 = loader.load();
-            Scene scene = new Scene(gui61);
-            stage.setScene(scene);
-        } catch (IOException e) {
-            throw new RuntimeException(e);
-        }
-    });
+        selectMultipleItems.setOnAction(event -> {
+            if(selectMultipleItems.isSelected()){
+                MultiQuestionsChoice.setVisible(true);
+                deleteMultipleItems.setVisible(true);
+            }
+            else {
+                MultiQuestionsChoice.setVisible(false);
+                deleteMultipleItems.setVisible(false);
+            }
+        });
+        deleteMultipleItems.setOnAction(event -> {
+            for(int i=0;i<chosenQuestions.size();i++){
+                if(chosenQuestions.get(i).getMultiQuestionsChoice().isSelected()){
+                    deleteMultipleItems.setVisible(true);
+                    chosenQuestions.remove(chosenQuestions.get(i));
+                    i--;
+                }
+            }
+            int i=0;
+            for(TableQuestionsOfGui62 b :chosenQuestions){
+                i++;
+                b.getOrder().setText(Integer.toString(i));
+            }
+            numberQuestionAndMarkInTable();
+        });
+        save.setOnAction(event -> {
+            DBConnect db=new DBConnect();
+            try {
+                db.updateQuiz(shuffle.isSelected(),quizChosen);
+            } catch (SQLException e) {
+                throw new RuntimeException(e);
+            }
+            for (TableQuestionsOfGui62 chosenQuestion : chosenQuestions) {
+                String[] addQuestionInQuiz = {chosenQuestion.getQuestionID(), quizChosen, null};
+                try {
+                    int row = db.InsertQuestionInQuiz(addQuestionInQuiz);
+                } catch (SQLException e) {
+                    throw new RuntimeException(e);
+                }
+            }
+            Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
+            FXMLLoader loader = new FXMLLoader();
+            loader.setLocation(getClass().getResource("/com/example/baitaplonoop/GUI61.fxml"));
+            try {
+                Parent gui61 = loader.load();
+                Scene scene = new Scene(gui61);
+                stage.setScene(scene);
+            } catch (IOException e) {
+                throw new RuntimeException(e);
+            }
+        });
     }
-}
+}
\ No newline at end of file
Index: src/main/java/com/example/baitaplonoop/controller/GUI65Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\nimport com.example.baitaplonoop.sql.DBConnect;\r\nimport com.example.baitaplonoop.util.*;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Pair;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.Collections;\r\nimport java.util.Random;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class GUI65Controller implements Initializable {\r\n    @FXML\r\n    private ToggleButton add;\r\n    final int numberQuestionsInAPage = 9;\r\n    @FXML\r\n    private CheckBox gui6_5CheckBox;\r\n    @FXML\r\n    private AnchorPane gui6_5;\r\n    @FXML\r\n    private Label Default;\r\n    @FXML\r\n    private Pagination pagination;\r\n    @FXML\r\n    private TreeView<String> category;\r\n    @FXML\r\n    private ComboBox<String> numberOfQuestions;\r\n    private ListView<String> questionsListView = new ListView<>();\r\n    private ObservableList<String> numberOfComboBox = FXCollections.observableArrayList();\r\n    private ObservableList<String> questionsList = FXCollections.observableArrayList();\r\n    private ObservableList<Pair<String, String>> questionRandom = FXCollections.observableArrayList();\r\n    private ObservableList<Pair<String, String>> subQuestionRandom = FXCollections.observableArrayList();\r\n    DBConnect db = new DBConnect();\r\n\r\n    private void showQuestion() {\r\n        category.setOnKeyPressed(keyEvent -> {\r\n\r\n            if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                questionsList.clear();\r\n                numberOfComboBox.clear();\r\n                numberOfQuestions.getSelectionModel().clearSelection();\r\n                questionsListView.setItems(questionsList);\r\n                TreeItem<String> item = category.getSelectionModel().getSelectedItem();\r\n                category.setVisible(false);\r\n                Default.setText(FindCategoryInfo.findCategoryName(item.getValue()));\r\n                int page = 0;\r\n                if (gui6_5CheckBox.isSelected()) {\r\n                    insertQuestionInto.insertQuestionIntoQuestionListWithSubcategory(item, questionsList, questionRandom);\r\n                    if (Integer.parseInt(FindCategoryInfo.findNumberQuestionOfCategoryAndSubCategories(item)) % numberQuestionsInAPage == 0)\r\n                        page = Integer.parseInt(FindCategoryInfo.findNumberQuestionOfCategoryAndSubCategories(item)) / numberQuestionsInAPage;\r\n                    else\r\n                        page = Integer.parseInt(FindCategoryInfo.findNumberQuestionOfCategoryAndSubCategories(item)) / numberQuestionsInAPage + 1;\r\n                    for (int i = 1; i <= Integer.parseInt(FindCategoryInfo.findNumberQuestionOfCategoryAndSubCategories(item)); i++) {\r\n                        numberOfComboBox.add(Integer.toString(i));\r\n                    }\r\n                } else {\r\n                    insertQuestionInto.insertQuestionIntoQuestionListWithoutSubcategory(item, questionsList, questionRandom);\r\n                    if (Integer.parseInt(FindCategoryInfo.findNumberQuestionsOfACategory(item)) % numberQuestionsInAPage == 0)\r\n                        page = Integer.parseInt(FindCategoryInfo.findNumberQuestionsOfACategory(item)) / numberQuestionsInAPage;\r\n                    else\r\n                        page = Integer.parseInt(FindCategoryInfo.findNumberQuestionsOfACategory(item)) / numberQuestionsInAPage + 1;\r\n                    for (int i = 1; i <= Integer.parseInt(FindCategoryInfo.findNumberQuestionsOfACategory(item)); i++) {\r\n                        numberOfComboBox.add(Integer.toString(i));\r\n                    }\r\n                }\r\n\r\n                pagination.setPageCount(page);\r\n                pagination.setPageFactory(pageIndex -> {\r\n                    int fromIndex = pageIndex * numberQuestionsInAPage;\r\n                    int toIndex = Math.min(fromIndex + numberQuestionsInAPage, questionsList.size());\r\n                    questionsListView.setItems(FXCollections.observableArrayList(questionsList.subList(fromIndex, toIndex)));\r\n                    return questionsListView;\r\n                });\r\n                pagination.setVisible(true);\r\n                numberOfQuestions.setItems(numberOfComboBox);\r\n                questionsListView.setVisible(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void randomQuestionFromCategory() {\r\n        String numberofQuestions = numberOfQuestions.getValue();\r\n        Random random=new Random();\r\n        while (subQuestionRandom.size()<Integer.parseInt(numberofQuestions)){\r\n            int randomIndex=random.nextInt(questionRandom.size());\r\n            if(!subQuestionRandom.contains(questionRandom.get(randomIndex))){\r\n                subQuestionRandom.add(questionRandom.get(randomIndex));\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resourceBundle) {\r\n        pagination.setVisible(false);\r\n        category.setVisible(false);\r\n        Default.setText(\"Default\");\r\n        Default.setOnMouseClicked(mouseEvent -> {\r\n\r\n\r\n            TreeItem<String> root = new TreeItem<>(\"For IT\");\r\n            try {\r\n                insertCategoryIntoTreeView.insertCategory(\"select * from dbo.Category where parentID is NULL\", root);\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            category.setRoot(root);\r\n            category.toFront();\r\n            category.setVisible(true);\r\n        });\r\n        gui6_5CheckBox.setSelected(false);\r\n        showQuestion();\r\n        gui6_5CheckBox.setOnAction(event -> {\r\n            showQuestion();\r\n        });\r\n        add.setOnAction(event -> {\r\n            if (numberOfQuestions.getValue() != null) {\r\n                Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n                FXMLLoader loader = new FXMLLoader();\r\n                loader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/GUI62.fxml\"));\r\n                try {\r\n                    Parent gui62 = loader.load();\r\n                    Scene scene = new Scene(gui62);\r\n                    GUI62Controller gui62Controller=loader.getController();\r\n                    randomQuestionFromCategory();\r\n                    gui62Controller.setChosenQuestions(subQuestionRandom);\r\n                    stage.setScene(scene);\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n        });\r\n        gui6_5.setOnMouseClicked(mouseEvent -> {\r\n            if (category.isVisible() && IsMouseOnLabel.isMouseOnLabel(Default, mouseEvent) == false)\r\n                category.setVisible(false);\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/GUI65Controller.java b/src/main/java/com/example/baitaplonoop/controller/GUI65Controller.java
--- a/src/main/java/com/example/baitaplonoop/controller/GUI65Controller.java	(revision 17a5e6c9ca3c0d58ab513e00afda87fbb9502c3a)
+++ b/src/main/java/com/example/baitaplonoop/controller/GUI65Controller.java	(date 1685779662311)
@@ -1,6 +1,5 @@
 package com.example.baitaplonoop.controller;
 
-import com.example.baitaplonoop.sql.DBConnect;
 import com.example.baitaplonoop.util.*;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
@@ -15,10 +14,8 @@
 import javafx.scene.layout.AnchorPane;
 import javafx.stage.Stage;
 import javafx.util.Pair;
-
 import java.io.IOException;
 import java.net.URL;
-import java.util.Collections;
 import java.util.Random;
 import java.util.ResourceBundle;
 
@@ -38,12 +35,11 @@
     private TreeView<String> category;
     @FXML
     private ComboBox<String> numberOfQuestions;
-    private ListView<String> questionsListView = new ListView<>();
-    private ObservableList<String> numberOfComboBox = FXCollections.observableArrayList();
-    private ObservableList<String> questionsList = FXCollections.observableArrayList();
-    private ObservableList<Pair<String, String>> questionRandom = FXCollections.observableArrayList();
-    private ObservableList<Pair<String, String>> subQuestionRandom = FXCollections.observableArrayList();
-    DBConnect db = new DBConnect();
+    private final ListView<String> questionsListView = new ListView<>();
+    private final ObservableList<String> numberOfComboBox = FXCollections.observableArrayList();
+    private final ObservableList<String> questionsList = FXCollections.observableArrayList();
+    private final ObservableList<Pair<String, String>> questionRandom = FXCollections.observableArrayList();
+    private final ObservableList<Pair<String, String>> subQuestionRandom = FXCollections.observableArrayList();
 
     private void showQuestion() {
         category.setOnKeyPressed(keyEvent -> {
@@ -56,7 +52,7 @@
                 TreeItem<String> item = category.getSelectionModel().getSelectedItem();
                 category.setVisible(false);
                 Default.setText(FindCategoryInfo.findCategoryName(item.getValue()));
-                int page = 0;
+                int page;
                 if (gui6_5CheckBox.isSelected()) {
                     insertQuestionInto.insertQuestionIntoQuestionListWithSubcategory(item, questionsList, questionRandom);
                     if (Integer.parseInt(FindCategoryInfo.findNumberQuestionOfCategoryAndSubCategories(item)) % numberQuestionsInAPage == 0)
@@ -122,9 +118,7 @@
         });
         gui6_5CheckBox.setSelected(false);
         showQuestion();
-        gui6_5CheckBox.setOnAction(event -> {
-            showQuestion();
-        });
+        gui6_5CheckBox.setOnAction(event -> showQuestion());
         add.setOnAction(event -> {
             if (numberOfQuestions.getValue() != null) {
                 Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
@@ -143,7 +137,7 @@
             }
         });
         gui6_5.setOnMouseClicked(mouseEvent -> {
-            if (category.isVisible() && IsMouseOnLabel.isMouseOnLabel(Default, mouseEvent) == false)
+            if (category.isVisible() && IsMouseOnLabel.isMouseOnLabel(Default, mouseEvent))
                 category.setVisible(false);
         });
     }
Index: src/main/java/com/example/baitaplonoop/util/ChangeScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.util;\r\n\r\nimport com.example.baitaplonoop.Main;\r\nimport com.example.baitaplonoop.controller.GUI11Controller;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class ChangeScene {\r\n    public static void changeSceneUsingMouseEvent(Initializable controller, String path, MouseEvent event){\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent = null;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent);\r\n        stage.setScene(scene);\r\n    }\r\n    public static void changeSceneUsingActionEvent(Initializable controller, String path, ActionEvent event){\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent = null;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent);\r\n        stage.setScene(scene);\r\n    }\r\n    public static void  mainSceneGUI21(Initializable controller, ActionEvent event, String path){\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent = null;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        Tab tab = gui11Controller.categoryTab_tp;\r\n        gui11Controller.tabPane.getSelectionModel().select(tab);\r\n        stage.setScene(scene);\r\n    }\r\n\r\n    public static void switchScene(String fxmlFile) {\r\n        Stage stage = new Stage();\r\n        FXMLLoader fxmlLoader = new FXMLLoader(ChangeScene.class.getResource(fxmlFile));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(\"Failed to load FXML file\", e);\r\n        }\r\n        Scene scene = new Scene(parent);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/util/ChangeScene.java b/src/main/java/com/example/baitaplonoop/util/ChangeScene.java
--- a/src/main/java/com/example/baitaplonoop/util/ChangeScene.java	(revision 17a5e6c9ca3c0d58ab513e00afda87fbb9502c3a)
+++ b/src/main/java/com/example/baitaplonoop/util/ChangeScene.java	(date 1685777926979)
@@ -8,6 +8,7 @@
 import javafx.scene.Node;
 import javafx.scene.Parent;
 import javafx.scene.Scene;
+import javafx.scene.control.Tab;
 import javafx.scene.input.MouseEvent;
 import javafx.scene.layout.AnchorPane;
 import javafx.stage.Stage;
Index: src/main/java/com/example/baitaplonoop/sql/DBConnect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.sql;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\nimport com.example.baitaplonoop.model.Choice;\r\npublic class DBConnect {\r\n    public Connection con;\r\n    public DBConnect() {\r\n        try {\r\n            Class.forName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\r\n            String url = \"jdbc:sqlserver://DAT\\\\MSSQLSERVER01:1433;databaseName=Exam_Management2;\"\r\n                    + \"encrypt=true;trustServerCertificate=true;sslProtocol=TLSv1.2\";\r\n            String username = \"sa\";\r\n            String password = \"123\";\r\n            con = DriverManager.getConnection(url, username, password);\r\n        } catch (ClassNotFoundException | SQLException ex) {\r\n            Logger.getLogger(DBConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n    public ResultSet getData(String stringSQL) {\r\n        ResultSet rs = null;\r\n        try {\r\n            Statement state = con.createStatement();\r\n            rs = state.executeQuery(stringSQL);\r\n        } catch (SQLException ex) {\r\n            Logger.getLogger(DBConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n        return rs;\r\n    }\r\n    public int InsertQuestion(String[] stringSQL) {\r\n        int rowInserted;\r\n        String sql = \"INSERT INTO Question(categoryID, questionID, questionText, questionMark, questionMedia) values(?,?,?,?,?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setString(2, stringSQL[1]);\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n//    public int InsertQuestion(String[] stringSQL) {\r\n//        int rowInserted = 0;\r\n//        String sql = \"INSERT INTO Question(categoryID, questionID, questionText) values(?,?,?)\";\r\n//        PreparedStatement statement;\r\n//        try {\r\n//            statement = con.prepareStatement(sql);\r\n//            statement.setString(1, stringSQL[0]);\r\n//            statement.setString(2, stringSQL[1]);\r\n//            statement.setString(3, stringSQL[2]);\r\n//            rowInserted = statement.executeUpdate();\r\n//        } catch (SQLException e) {\r\n//            throw new RuntimeException(e);\r\n//        }\r\n//        return rowInserted;\r\n//    }\r\n    public int InsertChoice(String[] stringSQL) {\r\n        int rowInserted = 0;\r\n        String sql = \"INSERT INTO Choice(choiceText, choiceGrade, choiceID, questionID, isSelected, choiceMedia) values(?,?,?,?,?,?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setFloat(2, Float.parseFloat(stringSQL[1]));\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            statement.setString(5, stringSQL[4]);\r\n            statement.setString(6, stringSQL[5]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n    public int InsertQuestionInQuiz(String[] stringSQL) throws SQLException {\r\n        int rowInserted = 0;\r\n        String sql = \"insert into QuestionInQuiz(questionID,quizName,yourMark) values(?,?,?)\";\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, stringSQL[0]);\r\n        statement.setString(2, stringSQL[1]);\r\n        statement.setString(3, stringSQL[2]);\r\n        rowInserted = statement.executeUpdate();\r\n        return rowInserted;\r\n    }\r\n    public String FindCategoryID(String categoryName) throws SQLException {\r\n        String categoryID = null;\r\n        String sql = \"SELECT categoryID FROM Category WHERE categoryName = N'\" + categoryName + \"'\";\r\n        ResultSet result = getData(sql);\r\n        if (result.next()) {\r\n            categoryID = result.getString(\"categoryID\");\r\n        }\r\n        return categoryID;\r\n    }\r\n    public int InsertCategory(String[] stringSQL) {\r\n        int rowInserted = 0;\r\n        String sql = \"INSERT INTO Category(parentID, categoryName, categoryID, categoryinfo) values (?, ?, ?, ?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setString(2, stringSQL[1]);\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n    public int AddNewQuiz(String[] stringSQL) {\r\n        int rowInserted = 0;\r\n        String sql = \"INSERT INTO Quiz(quizName, Descript, openTime, closeTime, timeLimit) values (?, ?, ?, ?, ?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setString(2, stringSQL[1]);\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            statement.setString(5, stringSQL[4]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n    public String[] FindQuestionInfo(String questionID) {\r\n        String[] questionInfo = null;\r\n        String sql = \"SELECT questionText,questionMedia FROM Question WHERE questionID = ?\";\r\n        try (\r\n                PreparedStatement statement = con.prepareStatement(sql);\r\n        ) {\r\n            statement.setString(1, questionID);\r\n            ResultSet rs = statement.executeQuery();\r\n            if (rs.next()) {\r\n                String questionText = rs.getNString(\"questionText\");\r\n                String questionMedia = rs.getString(\"questionMedia\");\r\n                questionInfo = new String[]{questionText, questionMedia};\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return questionInfo;\r\n    }\r\n    public String[] FindChoiceInfo(String choiceID) {\r\n        String[] choiceInfo = null;\r\n        String sql = \"SELECT choiceText, choiceGrade, choiceMedia FROM choice WHERE choiceID = ?\";\r\n        try (\r\n                PreparedStatement statement = con.prepareStatement(sql);\r\n        ) {\r\n            statement.setString(1, choiceID);\r\n            ResultSet rs = statement.executeQuery();\r\n            if (rs.next()) {\r\n                String choiceText = rs.getNString(\"choiceText\");\r\n                Float choiceGrade = rs.getFloat(\"choiceGrade\");\r\n                String choiceMedia = rs.getString(\"choiceMedia\");\r\n                choiceInfo = new String[]{choiceText, String.valueOf(choiceGrade), choiceMedia};\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return choiceInfo;\r\n    }\r\n    public int UpdateQuestion(String[] questionInfo) throws SQLException {\r\n        int rowInserted = 0;\r\n        String sql = \"MERGE Question AS target USING (VALUES (?,?,?,?,?)) \" +\r\n                \"AS source (categoryID, questionID, questionText, questionMark, questionMedia)  \" +\r\n                \"ON target.questionID = source.questionID  \" +\r\n                \"WHEN MATCHED THEN  UPDATE SET questionText = source.questionText,  \" +\r\n                \"categoryID = source.categoryID, questionMedia = source.questionMedia, questionMark = source.questionMark \" +\r\n                \"WHEN NOT MATCHED THEN  INSERT (questionID, questionText, categoryID, questionMark, questionMedia)  \" +\r\n                \"VALUES (source.questionID, source.questionText, source.categoryID,source.questionMark, source.questionMedia);\";\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, questionInfo[0]);\r\n        statement.setString(2, questionInfo[1]);\r\n        statement.setString(3, questionInfo[2]);\r\n        statement.setFloat(4, Float.parseFloat(questionInfo[3]));\r\n        statement.setString(5, questionInfo[4]);\r\n        rowInserted = statement.executeUpdate();\r\n        return rowInserted;\r\n    }\r\n    public int UpdateChoice(String[] choiceInfo) throws SQLException {\r\n        int rowInserted = 0;\r\n        String sql = \"MERGE Choice AS target USING (VALUES (?,?,?,?,?)) AS source (choiceText, choiceGrade, choiceID, questionID, choiceMedia)  ON target.choiceID = source.choiceID  WHEN MATCHED THEN  UPDATE SET choiceText = source.choiceText,  choiceGrade = source.choiceGrade, choiceID = source.choiceID,questionID = source.questionID, choiceMedia = source.choiceMedia  WHEN NOT MATCHED THEN  INSERT (choiceText, choiceGrade, choiceID, questionID, choiceMedia)  VALUES (source.choiceText, source.choiceGrade, source.choiceID, source.questionID, source.choiceMedia);\";\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, choiceInfo[0]);\r\n        statement.setFloat(2, Float.parseFloat(choiceInfo[1]));\r\n        statement.setString(3, choiceInfo[2]);\r\n        statement.setString(4, choiceInfo[3]);\r\n        statement.setString(5,  choiceInfo[4]);\r\n        rowInserted = statement.executeUpdate();\r\n        return rowInserted;\r\n    }\r\n    public boolean checkQuestionID(String questionID) throws SQLException {\r\n        boolean result = false;\r\n        String sql = \"SELECT * FROM Question WHERE questionID = ?\"; // Câu lệnh SQL truy vấn dữ liệu theo questionID\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, questionID); // Thiết lập giá trị cho tham số\r\n        ResultSet rs = statement.executeQuery(); // Thực hiện câu lệnh và lấy kết quả trả về\r\n        if (rs.next()) { // Kiểm tra xem kết quả có dòng nào hay không\r\n            result = true; // Nếu có, nghĩa là questionID tồn tại\r\n        }\r\n        return result; // Trả về giá trị boolean\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/sql/DBConnect.java b/src/main/java/com/example/baitaplonoop/sql/DBConnect.java
--- a/src/main/java/com/example/baitaplonoop/sql/DBConnect.java	(revision 17a5e6c9ca3c0d58ab513e00afda87fbb9502c3a)
+++ b/src/main/java/com/example/baitaplonoop/sql/DBConnect.java	(date 1685778082684)
@@ -1,19 +1,18 @@
 package com.example.baitaplonoop.sql;
 
 import java.sql.*;
-import java.util.ArrayList;
 import java.util.logging.Level;
 import java.util.logging.Logger;
-import com.example.baitaplonoop.model.Choice;
+
 public class DBConnect {
     public Connection con;
     public DBConnect() {
         try {
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
-            String url = "jdbc:sqlserver://DAT\\MSSQLSERVER01:1433;databaseName=Exam_Management2;"
+            String url = "jdbc:sqlserver://LAPTOP-5RN02RRR\\SQLEXPRESS:1433;databaseName=Exam_Management2;"
                     + "encrypt=true;trustServerCertificate=true;sslProtocol=TLSv1.2";
             String username = "sa";
-            String password = "123";
+            String password = "123123";
             con = DriverManager.getConnection(url, username, password);
         } catch (ClassNotFoundException | SQLException ex) {
             Logger.getLogger(DBConnect.class.getName()).log(Level.SEVERE, null, ex);
@@ -200,6 +199,14 @@
         rowInserted = statement.executeUpdate();
         return rowInserted;
     }
+    public void updateQuiz(boolean a, String quizName) throws  SQLException{
+        boolean result =false;
+        String sql="update Quiz set shuffle = ? where quizName = N'"+quizName+"'";
+        PreparedStatement statement;
+        statement=con.prepareStatement(sql);
+        statement.setString(1,Boolean.toString(a));
+        result = statement.execute();
+    }
     public boolean checkQuestionID(String questionID) throws SQLException {
         boolean result = false;
         String sql = "SELECT * FROM Question WHERE questionID = ?"; // Câu lệnh SQL truy vấn dữ liệu theo questionID
Index: src/main/java/com/example/baitaplonoop/controller/GUI63Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\nimport com.example.baitaplonoop.sql.DBConnect;\r\nimport com.example.baitaplonoop.util.*;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Pair;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class GUI63Controller implements Initializable {\r\n    public Button addSelectedQuestionToQuiz_btn;\r\n    @FXML\r\n    private Button createQuestionButton;\r\n    @FXML\r\n    private ToolBar toolBar;\r\n\r\n    @FXML\r\n    private ToggleButton exportButton;\r\n    @FXML\r\n    private ToggleButton importButton;\r\n    @FXML\r\n    private ToggleButton questionsButton;\r\n    @FXML\r\n    private ToggleButton categoriesButton;\r\n    @FXML\r\n    private AnchorPane gui2_1;\r\n    @FXML\r\n    private TableView<QuestionCheckBoxInTable> table;\r\n\r\n    @FXML\r\n    private TableColumn<QuestionCheckBoxInTable, String> question;\r\n\r\n    @FXML\r\n    private TableColumn<QuestionCheckBoxInTable, CheckBox> action;\r\n    private ObservableList<QuestionCheckBoxInTable> questionsList =FXCollections.observableArrayList();\r\n    private ObservableList<Pair<String,String>> choiceQuestion=FXCollections.observableArrayList();\r\n    @FXML\r\n    private Label Default;\r\n    @FXML\r\n    private TreeView<String> category;\r\n    @FXML\r\n    private CheckBox gui2_1CheckBox;\r\n\r\n    DBConnect db = new DBConnect();\r\n\r\n    //create click event for treeView\r\n    private void showQuestionInCategory() {\r\n        category.setOnKeyPressed(keyEvent -> {\r\n            if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                questionsList.clear();\r\n                table.setItems(questionsList);\r\n                TreeItem<String> item = category.getSelectionModel().getSelectedItem();\r\n                if (gui2_1CheckBox.isSelected())\r\n                    insertQuestionInto.insertQuestionIntoTableViewWithSubcategoryInNewQuiz(item, questionsList);\r\n                else insertQuestionInto.insertQuestionIntoTableViewWithoutSubcategoryInNewQuiz(item, questionsList);\r\n                category.setVisible(false);\r\n                Default.setText(FindCategoryInfo.findCategoryName(item.getValue()));\r\n                question.setCellValueFactory(new PropertyValueFactory<QuestionCheckBoxInTable, String>(\"questionText\"));\r\n                action.setCellValueFactory(new PropertyValueFactory<QuestionCheckBoxInTable, CheckBox>(\"checkBox\"));\r\n                table.setItems(questionsList);\r\n                table.setVisible(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resourceBundle) {\r\n        category.setVisible(false);\r\n        table.setVisible(false);\r\n        Default.setOnMouseClicked(mouseEvent -> {\r\n            Default.setText(\"Default\");\r\n\r\n            TreeItem<String> root = new TreeItem<>(\"For IT\");\r\n            try {\r\n                insertCategoryIntoTreeView.insertCategory(\"select * from dbo.Category where parentID is NULL\", root);\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            category.setRoot(root);\r\n            category.setVisible(true);\r\n        });\r\n        gui2_1CheckBox.setSelected(false);\r\n        showQuestionInCategory();\r\n        gui2_1CheckBox.setOnAction(event -> {\r\n            showQuestionInCategory();\r\n        });\r\n        gui2_1.setOnMouseClicked(mouseEvent -> {\r\n            if (category.isVisible() && IsMouseOnLabel.isMouseOnLabel(Default, mouseEvent) == false)\r\n                category.setVisible(false);\r\n        });\r\n        addSelectedQuestionToQuiz_btn.setOnMouseClicked(addSelectedQuestionToQuizEvent -> {\r\n            System.out.println(insertQuestionInto.insertQuesionToQuiz());\r\n        });\r\n        addSelectedQuestionToQuiz_btn.setOnAction(event -> {\r\n            for(QuestionCheckBoxInTable a: questionsList){\r\n                if(a.getCheckBox().isSelected()){\r\n                    choiceQuestion.add(new Pair<>(a.getQuestionID(),a.getQuestionText()));\r\n                }\r\n            }\r\n            Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/GUI62.fxml\"));\r\n            try {\r\n                Parent gui62 = loader.load();\r\n                Scene scene = new Scene(gui62);\r\n                GUI62Controller gui62Controller=loader.getController();\r\n                gui62Controller.setChosenQuestions(choiceQuestion);\r\n                stage.setScene(scene);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/GUI63Controller.java b/src/main/java/com/example/baitaplonoop/controller/GUI63Controller.java
--- a/src/main/java/com/example/baitaplonoop/controller/GUI63Controller.java	(revision 17a5e6c9ca3c0d58ab513e00afda87fbb9502c3a)
+++ b/src/main/java/com/example/baitaplonoop/controller/GUI63Controller.java	(date 1685779727943)
@@ -1,6 +1,5 @@
 package com.example.baitaplonoop.controller;
 
-import com.example.baitaplonoop.sql.DBConnect;
 import com.example.baitaplonoop.util.*;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
@@ -16,7 +15,6 @@
 import javafx.scene.layout.AnchorPane;
 import javafx.stage.Stage;
 import javafx.util.Pair;
-
 import java.io.IOException;
 import java.net.URL;
 import java.util.ResourceBundle;
@@ -24,39 +22,21 @@
 public class GUI63Controller implements Initializable {
     public Button addSelectedQuestionToQuiz_btn;
     @FXML
-    private Button createQuestionButton;
-    @FXML
-    private ToolBar toolBar;
-
-    @FXML
-    private ToggleButton exportButton;
-    @FXML
-    private ToggleButton importButton;
-    @FXML
-    private ToggleButton questionsButton;
-    @FXML
-    private ToggleButton categoriesButton;
-    @FXML
-    private AnchorPane gui2_1;
+    private AnchorPane gui6_3;
     @FXML
     private TableView<QuestionCheckBoxInTable> table;
-
     @FXML
     private TableColumn<QuestionCheckBoxInTable, String> question;
-
     @FXML
     private TableColumn<QuestionCheckBoxInTable, CheckBox> action;
-    private ObservableList<QuestionCheckBoxInTable> questionsList =FXCollections.observableArrayList();
-    private ObservableList<Pair<String,String>> choiceQuestion=FXCollections.observableArrayList();
+    private final ObservableList<QuestionCheckBoxInTable> questionsList =FXCollections.observableArrayList();
+    private final ObservableList<Pair<String,String>> choiceQuestion=FXCollections.observableArrayList();
     @FXML
     private Label Default;
     @FXML
     private TreeView<String> category;
     @FXML
-    private CheckBox gui2_1CheckBox;
-
-    DBConnect db = new DBConnect();
-
+    private CheckBox gui6_3CheckBox;
     //create click event for treeView
     private void showQuestionInCategory() {
         category.setOnKeyPressed(keyEvent -> {
@@ -64,19 +44,18 @@
                 questionsList.clear();
                 table.setItems(questionsList);
                 TreeItem<String> item = category.getSelectionModel().getSelectedItem();
-                if (gui2_1CheckBox.isSelected())
+                if (gui6_3CheckBox.isSelected())
                     insertQuestionInto.insertQuestionIntoTableViewWithSubcategoryInNewQuiz(item, questionsList);
                 else insertQuestionInto.insertQuestionIntoTableViewWithoutSubcategoryInNewQuiz(item, questionsList);
                 category.setVisible(false);
                 Default.setText(FindCategoryInfo.findCategoryName(item.getValue()));
-                question.setCellValueFactory(new PropertyValueFactory<QuestionCheckBoxInTable, String>("questionText"));
-                action.setCellValueFactory(new PropertyValueFactory<QuestionCheckBoxInTable, CheckBox>("checkBox"));
+                question.setCellValueFactory(new PropertyValueFactory<>("questionText"));
+                action.setCellValueFactory(new PropertyValueFactory<>("checkBox"));
                 table.setItems(questionsList);
                 table.setVisible(true);
             }
         });
     }
-
     @Override
     public void initialize(URL location, ResourceBundle resourceBundle) {
         category.setVisible(false);
@@ -93,18 +72,14 @@
             category.setRoot(root);
             category.setVisible(true);
         });
-        gui2_1CheckBox.setSelected(false);
+        gui6_3CheckBox.setSelected(false);
         showQuestionInCategory();
-        gui2_1CheckBox.setOnAction(event -> {
-            showQuestionInCategory();
-        });
-        gui2_1.setOnMouseClicked(mouseEvent -> {
-            if (category.isVisible() && IsMouseOnLabel.isMouseOnLabel(Default, mouseEvent) == false)
+        gui6_3CheckBox.setOnAction(event -> showQuestionInCategory());
+        gui6_3.setOnMouseClicked(mouseEvent -> {
+            if (category.isVisible() && IsMouseOnLabel.isMouseOnLabel(Default, mouseEvent))
                 category.setVisible(false);
         });
-        addSelectedQuestionToQuiz_btn.setOnMouseClicked(addSelectedQuestionToQuizEvent -> {
-            System.out.println(insertQuestionInto.insertQuesionToQuiz());
-        });
+        addSelectedQuestionToQuiz_btn.setOnMouseClicked(addSelectedQuestionToQuizEvent -> System.out.println(insertQuestionInto.insertQuesionToQuiz()));
         addSelectedQuestionToQuiz_btn.setOnAction(event -> {
             for(QuestionCheckBoxInTable a: questionsList){
                 if(a.getCheckBox().isSelected()){
@@ -125,4 +100,4 @@
             }
         });
     }
-}
+}
\ No newline at end of file
Index: src/main/resources/com/example/baitaplonoop/GUI62.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.CheckBox?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.ListView?>\r\n<?import javafx.scene.control.TableColumn?>\r\n<?import javafx.scene.control.TableView?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.control.ToggleButton?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<AnchorPane fx:id=\"gui62\" prefHeight=\"767.0\" prefWidth=\"799.0\" xmlns=\"http://javafx.com/javafx/19\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.example.baitaplonoop.controller.GUI62Controller\">\r\n   <children>\r\n      <Label alignment=\"CENTER\" layoutX=\"36.0\" layoutY=\"14.0\" prefHeight=\"44.0\" prefWidth=\"40.0\" text=\"IT\" textAlignment=\"CENTER\" textFill=\"#e80303\">\r\n         <font>\r\n            <Font size=\"31.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label alignment=\"CENTER\" layoutX=\"21.0\" layoutY=\"68.0\" prefHeight=\"21.0\" prefWidth=\"51.0\" text=\"Home\" textFill=\"#dd0707\" />\r\n      <Label layoutX=\"76.0\" layoutY=\"68.0\" text=\"/ My courses\" />\r\n      <Label layoutX=\"171.0\" layoutY=\"68.0\" text=\"/ THI CUÔI KỲ\" textFill=\"#ee0707\" />\r\n      <Label layoutX=\"291.0\" layoutY=\"68.0\" text=\"/ General\" textFill=\"#d70606\" />\r\n      <Label fx:id=\"quizNameLink\" layoutX=\"369.0\" layoutY=\"68.0\" prefHeight=\"21.0\" prefWidth=\"198.0\" />\r\n      <Label fx:id=\"quizName\" alignment=\"CENTER\" layoutX=\"23.0\" layoutY=\"101.0\" prefHeight=\"46.0\" prefWidth=\"482.0\" textFill=\"#e10a0a\">\r\n         <font>\r\n            <Font size=\"31.0\" />\r\n         </font>\r\n      </Label>\r\n      <Button layoutX=\"19.0\" layoutY=\"194.0\" mnemonicParsing=\"false\" text=\"REPAGINATE\" />\r\n      <Label layoutX=\"509.0\" layoutY=\"136.0\" prefHeight=\"21.0\" prefWidth=\"116.0\" text=\"Maximun grade:\" />\r\n      <TextField alignment=\"CENTER\" editable=\"false\" layoutX=\"623.0\" layoutY=\"131.0\" prefHeight=\"31.0\" prefWidth=\"51.0\" text=\"10.00\" />\r\n      <Button fx:id=\"save\" layoutX=\"698.0\" layoutY=\"131.0\" mnemonicParsing=\"false\" text=\"SAVE\" />\r\n      <Label fx:id=\"totalOfMark\" layoutX=\"634.0\" layoutY=\"184.0\" prefHeight=\"21.0\" prefWidth=\"129.0\" text=\"Total of mark: 0.00\" />\r\n      <ListView fx:id=\"listModeAdd\" layoutX=\"555.0\" layoutY=\"296.0\" prefHeight=\"78.0\" prefWidth=\"198.0\" />\r\n      <Label fx:id=\"numberQuestionInTable\" layoutX=\"39.0\" layoutY=\"162.0\" prefHeight=\"21.0\" prefWidth=\"210.0\" text=\"Questions: 0 | This quiz is open\" />\r\n      <Button layoutX=\"24.0\" layoutY=\"249.0\" mnemonicParsing=\"false\" text=\"Button\" />\r\n      <CheckBox layoutX=\"673.0\" layoutY=\"228.0\" mnemonicParsing=\"false\" prefHeight=\"21.0\" prefWidth=\"106.0\" text=\"Shuffle\" />\r\n      <Label fx:id=\"addLabel\" layoutX=\"714.0\" layoutY=\"270.0\" text=\"Add\" />\r\n      <TableView fx:id=\"tableQuestions\" layoutX=\"30.0\" layoutY=\"392.0\" prefHeight=\"283.0\" prefWidth=\"723.0\">\r\n        <columns>\r\n          <TableColumn fx:id=\"MultiQuestionsChoice\" prefWidth=\"31.20001220703125\" sortable=\"false\" />\r\n          <TableColumn fx:id=\"Order\" prefWidth=\"28.000030517578125\" sortable=\"false\" />\r\n            <TableColumn fx:id=\"Setting\" prefWidth=\"34.399993896484375\" sortable=\"false\" />\r\n            <TableColumn fx:id=\"QuestionText\" minWidth=\"6.39996337890625\" prefWidth=\"465.5999755859375\" sortable=\"false\" />\r\n            <TableColumn fx:id=\"PlusIcon\" prefWidth=\"39.20001220703125\" sortable=\"false\" />\r\n            <TableColumn fx:id=\"DeleteIcon\" prefWidth=\"53.60003662109375\" sortable=\"false\" />\r\n            <TableColumn fx:id=\"QuestionMark\" prefWidth=\"75.0\" />\r\n        </columns>\r\n      </TableView>\r\n      <Text layoutX=\"209.0\" layoutY=\"309.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" />\r\n      <ToggleButton fx:id=\"selectMultipleItems\" layoutX=\"127.0\" layoutY=\"194.0\" mnemonicParsing=\"false\" text=\"SELECT MULTIPLEITEMS\" />\r\n      <Button fx:id=\"deleteMultipleItems\" layoutX=\"265.0\" layoutY=\"690.0\" mnemonicParsing=\"false\" prefHeight=\"26.0\" prefWidth=\"307.0\" text=\"DELETE MULTIPLEITEMS\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/example/baitaplonoop/GUI62.fxml b/src/main/resources/com/example/baitaplonoop/GUI62.fxml
--- a/src/main/resources/com/example/baitaplonoop/GUI62.fxml	(revision 17a5e6c9ca3c0d58ab513e00afda87fbb9502c3a)
+++ b/src/main/resources/com/example/baitaplonoop/GUI62.fxml	(date 1685777926970)
@@ -13,45 +13,65 @@
 <?import javafx.scene.text.Text?>
 
 <AnchorPane fx:id="gui62" prefHeight="767.0" prefWidth="799.0" xmlns="http://javafx.com/javafx/19" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.baitaplonoop.controller.GUI62Controller">
-   <children>
-      <Label alignment="CENTER" layoutX="36.0" layoutY="14.0" prefHeight="44.0" prefWidth="40.0" text="IT" textAlignment="CENTER" textFill="#e80303">
-         <font>
-            <Font size="31.0" />
-         </font>
-      </Label>
-      <Label alignment="CENTER" layoutX="21.0" layoutY="68.0" prefHeight="21.0" prefWidth="51.0" text="Home" textFill="#dd0707" />
-      <Label layoutX="76.0" layoutY="68.0" text="/ My courses" />
-      <Label layoutX="171.0" layoutY="68.0" text="/ THI CUÔI KỲ" textFill="#ee0707" />
-      <Label layoutX="291.0" layoutY="68.0" text="/ General" textFill="#d70606" />
-      <Label fx:id="quizNameLink" layoutX="369.0" layoutY="68.0" prefHeight="21.0" prefWidth="198.0" />
-      <Label fx:id="quizName" alignment="CENTER" layoutX="23.0" layoutY="101.0" prefHeight="46.0" prefWidth="482.0" textFill="#e10a0a">
-         <font>
-            <Font size="31.0" />
-         </font>
-      </Label>
-      <Button layoutX="19.0" layoutY="194.0" mnemonicParsing="false" text="REPAGINATE" />
-      <Label layoutX="509.0" layoutY="136.0" prefHeight="21.0" prefWidth="116.0" text="Maximun grade:" />
-      <TextField alignment="CENTER" editable="false" layoutX="623.0" layoutY="131.0" prefHeight="31.0" prefWidth="51.0" text="10.00" />
-      <Button fx:id="save" layoutX="698.0" layoutY="131.0" mnemonicParsing="false" text="SAVE" />
-      <Label fx:id="totalOfMark" layoutX="634.0" layoutY="184.0" prefHeight="21.0" prefWidth="129.0" text="Total of mark: 0.00" />
-      <ListView fx:id="listModeAdd" layoutX="555.0" layoutY="296.0" prefHeight="78.0" prefWidth="198.0" />
-      <Label fx:id="numberQuestionInTable" layoutX="39.0" layoutY="162.0" prefHeight="21.0" prefWidth="210.0" text="Questions: 0 | This quiz is open" />
-      <Button layoutX="24.0" layoutY="249.0" mnemonicParsing="false" text="Button" />
-      <CheckBox layoutX="673.0" layoutY="228.0" mnemonicParsing="false" prefHeight="21.0" prefWidth="106.0" text="Shuffle" />
-      <Label fx:id="addLabel" layoutX="714.0" layoutY="270.0" text="Add" />
-      <TableView fx:id="tableQuestions" layoutX="30.0" layoutY="392.0" prefHeight="283.0" prefWidth="723.0">
-        <columns>
-          <TableColumn fx:id="MultiQuestionsChoice" prefWidth="31.20001220703125" sortable="false" />
-          <TableColumn fx:id="Order" prefWidth="28.000030517578125" sortable="false" />
-            <TableColumn fx:id="Setting" prefWidth="34.399993896484375" sortable="false" />
-            <TableColumn fx:id="QuestionText" minWidth="6.39996337890625" prefWidth="465.5999755859375" sortable="false" />
-            <TableColumn fx:id="PlusIcon" prefWidth="39.20001220703125" sortable="false" />
-            <TableColumn fx:id="DeleteIcon" prefWidth="53.60003662109375" sortable="false" />
-            <TableColumn fx:id="QuestionMark" prefWidth="75.0" />
-        </columns>
-      </TableView>
-      <Text layoutX="209.0" layoutY="309.0" strokeType="OUTSIDE" strokeWidth="0.0" />
-      <ToggleButton fx:id="selectMultipleItems" layoutX="127.0" layoutY="194.0" mnemonicParsing="false" text="SELECT MULTIPLEITEMS" />
-      <Button fx:id="deleteMultipleItems" layoutX="265.0" layoutY="690.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="307.0" text="DELETE MULTIPLEITEMS" />
-   </children>
+    <children>
+        <Label fx:id="quizNameLink" layoutX="369.0" layoutY="68.0" prefHeight="21.0" prefWidth="198.0" />
+        <Label fx:id="quizName" alignment="CENTER" layoutX="19.0" layoutY="32.0" prefHeight="70.0" prefWidth="762.0" textFill="#e10a0a" AnchorPane.leftAnchor="19.0" AnchorPane.rightAnchor="17.600000000000023" AnchorPane.topAnchor="32.0">
+            <font>
+                <Font size="31.0" />
+            </font>
+        </Label>
+        <Button layoutX="24.0" layoutY="157.0" mnemonicParsing="false" text="REPAGINATE" AnchorPane.leftAnchor="24.0" AnchorPane.topAnchor="157.0">
+            <font>
+                <Font size="17.0" />
+            </font></Button>
+        <Label layoutX="480.0" layoutY="115.0" prefHeight="26.0" prefWidth="130.0" text="Maximun grade" AnchorPane.rightAnchor="188.6" AnchorPane.topAnchor="115.0">
+            <font>
+                <Font size="17.0" />
+            </font></Label>
+        <TextField editable="false" layoutX="604.0" layoutY="110.0" prefHeight="38.0" prefWidth="78.0" text="10.00" AnchorPane.rightAnchor="116.6" AnchorPane.topAnchor="110.0">
+            <font>
+                <Font size="17.0" />
+            </font></TextField>
+        <Button fx:id="save" layoutX="687.0" layoutY="111.0" mnemonicParsing="false" prefHeight="38.0" prefWidth="91.0" text="SAVE" AnchorPane.rightAnchor="20.799999999999997" AnchorPane.topAnchor="111.0">
+            <font>
+                <Font size="17.0" />
+            </font></Button>
+        <Label fx:id="totalOfMark" alignment="CENTER_RIGHT" layoutX="623.0" layoutY="162.0" prefHeight="27.0" prefWidth="155.0" text="Total of mark: 0.00" AnchorPane.rightAnchor="20.80000000000001" AnchorPane.topAnchor="162.0">
+            <font>
+                <Font size="18.0" />
+            </font></Label>
+        <ListView fx:id="listModeAdd" layoutX="554.0" layoutY="280.0" prefHeight="78.0" prefWidth="198.0" AnchorPane.rightAnchor="46.599999999999994" AnchorPane.topAnchor="280.0" />
+        <Label fx:id="numberQuestionInTable" layoutX="24.0" layoutY="109.0" prefHeight="26.0" prefWidth="246.0" text="Questions: 0 | This quiz is open" AnchorPane.leftAnchor="24.0" AnchorPane.topAnchor="109.0">
+            <font>
+                <Font size="17.0" />
+            </font></Label>
+        <CheckBox fx:id="shuffle" layoutX="647.0" layoutY="208.0" mnemonicParsing="false" prefHeight="21.0" prefWidth="106.0" text="Shuffle" AnchorPane.rightAnchor="45.599999999999994" AnchorPane.topAnchor="208.0">
+            <font>
+                <Font size="17.0" />
+            </font></CheckBox>
+        <Label fx:id="addLabel" layoutX="716.0" layoutY="253.0" text="Add" AnchorPane.rightAnchor="49.4" AnchorPane.topAnchor="253.0">
+            <font>
+                <Font size="18.0" />
+            </font></Label>
+        <TableView fx:id="tableQuestions" layoutX="30.0" layoutY="381.0" prefHeight="310.0" prefWidth="723.0" AnchorPane.bottomAnchor="75.60000000000002" AnchorPane.leftAnchor="30.0" AnchorPane.rightAnchor="45.799999999999955" AnchorPane.topAnchor="381.0">
+            <columns>
+                <TableColumn fx:id="MultiQuestionsChoice" prefWidth="31.20001220703125" sortable="false" />
+                <TableColumn fx:id="Order" prefWidth="28.000030517578125" sortable="false" />
+                <TableColumn fx:id="Setting" prefWidth="34.399993896484375" sortable="false" />
+                <TableColumn fx:id="QuestionText" minWidth="6.39996337890625" prefWidth="465.5999755859375" sortable="false" />
+                <TableColumn fx:id="PlusIcon" prefWidth="39.20001220703125" sortable="false" />
+                <TableColumn fx:id="DeleteIcon" prefWidth="53.60003662109375" sortable="false" />
+                <TableColumn fx:id="QuestionMark" prefWidth="75.0" />
+            </columns>
+        </TableView>
+        <Text layoutX="209.0" layoutY="309.0" strokeType="OUTSIDE" strokeWidth="0.0" />
+        <ToggleButton fx:id="selectMultipleItems" layoutX="147.0" layoutY="157.0" mnemonicParsing="false" text="SELECT MULTIPLEITEMS" AnchorPane.leftAnchor="147.0" AnchorPane.topAnchor="157.0">
+            <font>
+                <Font size="17.0" />
+            </font></ToggleButton>
+        <Button fx:id="deleteMultipleItems" layoutX="270.0" layoutY="709.0" maxHeight="26.0" maxWidth="307.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="307.0" text="DELETE MULTIPLEITEMS" AnchorPane.bottomAnchor="21.200000000000003">
+            <font>
+                <Font size="16.0" />
+            </font></Button>
+    </children>
 </AnchorPane>
Index: src/main/resources/com/example/baitaplonoop/GUI65.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.CheckBox?>\r\n<?import javafx.scene.control.ComboBox?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.Pagination?>\r\n<?import javafx.scene.control.ToggleButton?>\r\n<?import javafx.scene.control.TreeView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane fx:id=\"gui6_5\" prefHeight=\"687.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/19\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.example.baitaplonoop.controller.GUI65Controller\">\r\n   <children>\r\n      <Label layoutX=\"3.0\" layoutY=\"2.0\" prefHeight=\"51.0\" prefWidth=\"248.0\" text=\"Add a random question to page 1\" textAlignment=\"CENTER\" textFill=\"#b50e0e\">\r\n         <font>\r\n            <Font size=\"16.0\" />\r\n         </font>\r\n      </Label>\r\n      <Button layoutY=\"53.0\" mnemonicParsing=\"false\" prefHeight=\"31.0\" prefWidth=\"134.0\" text=\"Existing category\" />\r\n      <Button layoutX=\"133.0\" layoutY=\"53.0\" mnemonicParsing=\"false\" prefHeight=\"31.0\" prefWidth=\"90.0\" text=\"New category\" />\r\n      <Label layoutX=\"14.0\" layoutY=\"94.0\" prefHeight=\"40.0\" prefWidth=\"104.0\" text=\"Category\" textAlignment=\"CENTER\" />\r\n      <Label fx:id=\"Default\" layoutX=\"110.0\" layoutY=\"95.0\" prefHeight=\"40.0\" prefWidth=\"104.0\" />\r\n      <TreeView fx:id=\"category\" layoutX=\"94.0\" layoutY=\"104.0\" prefHeight=\"142.0\" prefWidth=\"267.0\" showRoot=\"false\" />\r\n      <Label layoutX=\"17.0\" layoutY=\"283.0\" prefHeight=\"58.0\" prefWidth=\"221.0\" text=\"Number of random questions\" />\r\n      <Label layoutX=\"260.0\" layoutY=\"299.0\" prefHeight=\"51.0\" prefWidth=\"68.0\" text=\"label\" />\r\n      <ComboBox fx:id=\"numberOfQuestions\" layoutX=\"245.0\" layoutY=\"312.0\" prefHeight=\"31.0\" prefWidth=\"228.0\" />\r\n      <CheckBox fx:id=\"gui6_5CheckBox\" layoutX=\"95.0\" layoutY=\"154.0\" mnemonicParsing=\"false\" prefHeight=\"21.0\" prefWidth=\"318.0\" text=\"Include questions form subcategories too\" />\r\n      <Label layoutX=\"31.0\" layoutY=\"339.0\" prefHeight=\"40.0\" prefWidth=\"205.0\" text=\"Questions matching this filter\" />\r\n      <Pagination fx:id=\"pagination\" layoutX=\"45.0\" layoutY=\"378.0\" prefHeight=\"263.0\" prefWidth=\"502.0\" />\r\n      <ToggleButton fx:id=\"add\" layoutX=\"497.0\" layoutY=\"315.0\" mnemonicParsing=\"false\" prefHeight=\"26.0\" prefWidth=\"90.0\" text=\"Add \" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/example/baitaplonoop/GUI65.fxml b/src/main/resources/com/example/baitaplonoop/GUI65.fxml
--- a/src/main/resources/com/example/baitaplonoop/GUI65.fxml	(revision 17a5e6c9ca3c0d58ab513e00afda87fbb9502c3a)
+++ b/src/main/resources/com/example/baitaplonoop/GUI65.fxml	(date 1685779607120)
@@ -1,6 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
-<?import javafx.scene.control.Button?>
 <?import javafx.scene.control.CheckBox?>
 <?import javafx.scene.control.ComboBox?>
 <?import javafx.scene.control.Label?>
@@ -9,25 +8,42 @@
 <?import javafx.scene.control.TreeView?>
 <?import javafx.scene.layout.AnchorPane?>
 <?import javafx.scene.text.Font?>
+<?import javafx.scene.text.Text?>
 
 <AnchorPane fx:id="gui6_5" prefHeight="687.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/19" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.baitaplonoop.controller.GUI65Controller">
    <children>
-      <Label layoutX="3.0" layoutY="2.0" prefHeight="51.0" prefWidth="248.0" text="Add a random question to page 1" textAlignment="CENTER" textFill="#b50e0e">
+      <Label layoutX="7.0" layoutY="2.0" prefHeight="51.0" prefWidth="586.0" text="Add a random question to page 1" textAlignment="CENTER" textFill="#b50e0e" AnchorPane.leftAnchor="7.0" AnchorPane.rightAnchor="6.600000000000023" AnchorPane.topAnchor="2.0">
          <font>
-            <Font size="16.0" />
+            <Font size="25.0" />
          </font>
       </Label>
-      <Button layoutY="53.0" mnemonicParsing="false" prefHeight="31.0" prefWidth="134.0" text="Existing category" />
-      <Button layoutX="133.0" layoutY="53.0" mnemonicParsing="false" prefHeight="31.0" prefWidth="90.0" text="New category" />
-      <Label layoutX="14.0" layoutY="94.0" prefHeight="40.0" prefWidth="104.0" text="Category" textAlignment="CENTER" />
-      <Label fx:id="Default" layoutX="110.0" layoutY="95.0" prefHeight="40.0" prefWidth="104.0" />
-      <TreeView fx:id="category" layoutX="94.0" layoutY="104.0" prefHeight="142.0" prefWidth="267.0" showRoot="false" />
-      <Label layoutX="17.0" layoutY="283.0" prefHeight="58.0" prefWidth="221.0" text="Number of random questions" />
-      <Label layoutX="260.0" layoutY="299.0" prefHeight="51.0" prefWidth="68.0" text="label" />
-      <ComboBox fx:id="numberOfQuestions" layoutX="245.0" layoutY="312.0" prefHeight="31.0" prefWidth="228.0" />
-      <CheckBox fx:id="gui6_5CheckBox" layoutX="95.0" layoutY="154.0" mnemonicParsing="false" prefHeight="21.0" prefWidth="318.0" text="Include questions form subcategories too" />
-      <Label layoutX="31.0" layoutY="339.0" prefHeight="40.0" prefWidth="205.0" text="Questions matching this filter" />
-      <Pagination fx:id="pagination" layoutX="45.0" layoutY="378.0" prefHeight="263.0" prefWidth="502.0" />
-      <ToggleButton fx:id="add" layoutX="497.0" layoutY="315.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="90.0" text="Add " />
+      <Label layoutX="19.0" layoutY="75.0" prefHeight="40.0" prefWidth="83.0" text="Category" textAlignment="CENTER" AnchorPane.leftAnchor="17.0" AnchorPane.topAnchor="95.0">
+         <font>
+            <Font size="17.0" />
+         </font></Label>
+      <Label fx:id="Default" layoutX="156.0" layoutY="95.0" prefHeight="40.0" prefWidth="267.0" AnchorPane.leftAnchor="156.0" AnchorPane.topAnchor="95.0">
+         <font>
+            <Font size="17.0" />
+         </font></Label>
+      <TreeView fx:id="category" layoutX="156.0" layoutY="135.0" prefHeight="142.0" prefWidth="267.0" showRoot="false" AnchorPane.leftAnchor="156.0" AnchorPane.rightAnchor="176.8" AnchorPane.topAnchor="135.0" />
+      <ComboBox fx:id="numberOfQuestions" layoutX="194.0" layoutY="295.0" prefHeight="31.0" prefWidth="83.0" AnchorPane.leftAnchor="194.0" AnchorPane.topAnchor="295.0" />
+      <CheckBox fx:id="gui6_5CheckBox" layoutX="156.0" layoutY="156.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="318.0" text="Include questions form subcategories too" AnchorPane.leftAnchor="156.0" AnchorPane.topAnchor="156.0">
+         <font>
+            <Font size="15.0" />
+         </font></CheckBox>
+      <Label layoutX="27.0" layoutY="353.0" prefHeight="40.0" prefWidth="232.0" text="Questions matching this filter" AnchorPane.leftAnchor="27.0" AnchorPane.topAnchor="353.0">
+         <font>
+            <Font size="17.0" />
+         </font></Label>
+      <Pagination fx:id="pagination" layoutX="19.0" layoutY="378.0" prefHeight="252.0" prefWidth="560.0" AnchorPane.bottomAnchor="18.0" AnchorPane.leftAnchor="19.0" AnchorPane.rightAnchor="21.0" />
+      <ToggleButton fx:id="add" layoutX="474.0" layoutY="283.0" mnemonicParsing="false" prefHeight="40.0" prefWidth="110.0" text="Add " AnchorPane.rightAnchor="15.599999999999994" AnchorPane.topAnchor="283.0">
+         <font>
+            <Font size="17.0" />
+         </font></ToggleButton>
+      <Text layoutX="27.0" layoutY="307.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Number of random questions" wrappingWidth="146.936767578125" AnchorPane.leftAnchor="27.0" AnchorPane.topAnchor="288.6552734375">
+         <font>
+            <Font size="17.0" />
+         </font>
+      </Text>
    </children>
 </AnchorPane>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e99e4343-1934-4a34-858d-155e3f4e1670\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_13_2023_1_24_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_13_2023_1_24_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI21Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI21Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI21.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI21.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUInew.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUInew.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JavaFXApplication\" />\r\n        <option value=\"JavaFXApplication\" />\r\n        <option value=\"CSS File\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Dat\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OQ6MePDlkzrfbaRYgtTZKnGXV0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Revamp&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\Project\\Java\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\Image\\Question\" />\r\n      <recent name=\"C:\\Users\\HOANGPHUC\\IdeaProjects\\OOP\\src\\main\\java\\com\\example\\baitaplonoop\\model\" />\r\n      <recent name=\"C:\\Users\\HOANGPHUC\\IdeaProjects\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\icon\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\CodeTest\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\Media\" />\r\n      <recent name=\"C:\\Users\\ASUS\\Desktop\\Github\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\icon\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.HelloApplication\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.Main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main (2)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.test\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Application.HelloApplication\" />\r\n      <item itemvalue=\"Application.main (1)\" />\r\n      <item itemvalue=\"Application.main (2)\" />\r\n      <item itemvalue=\"Application.main\" />\r\n      <item itemvalue=\"Application.test\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.test\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.main (2)\" />\r\n        <item itemvalue=\"Application.main (1)\" />\r\n        <item itemvalue=\"Application.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e99e4343-1934-4a34-858d-155e3f4e1670\" name=\"Changes\" comment=\"\" />\r\n      <created>1681480416050</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681480416050</updated>\r\n      <workItem from=\"1683383446033\" duration=\"277000\" />\r\n      <workItem from=\"1683398586586\" duration=\"1980000\" />\r\n      <workItem from=\"1683454805001\" duration=\"5451000\" />\r\n      <workItem from=\"1683468170394\" duration=\"10954000\" />\r\n      <workItem from=\"1683510360130\" duration=\"1484000\" />\r\n      <workItem from=\"1683511926552\" duration=\"1130000\" />\r\n      <workItem from=\"1683516948886\" duration=\"919000\" />\r\n      <workItem from=\"1683518011370\" duration=\"250000\" />\r\n      <workItem from=\"1683518291549\" duration=\"427000\" />\r\n      <workItem from=\"1683521666835\" duration=\"2913000\" />\r\n      <workItem from=\"1683538982523\" duration=\"6486000\" />\r\n      <workItem from=\"1683572165479\" duration=\"10000\" />\r\n      <workItem from=\"1683572410142\" duration=\"970000\" />\r\n      <workItem from=\"1683573395622\" duration=\"3473000\" />\r\n      <workItem from=\"1683577609966\" duration=\"2766000\" />\r\n      <workItem from=\"1683581477159\" duration=\"247000\" />\r\n      <workItem from=\"1683589851139\" duration=\"596000\" />\r\n      <workItem from=\"1685032475231\" duration=\"8436000\" />\r\n      <workItem from=\"1685045584496\" duration=\"515000\" />\r\n      <workItem from=\"1685047082923\" duration=\"24000\" />\r\n      <workItem from=\"1685058425839\" duration=\"653000\" />\r\n      <workItem from=\"1685078072978\" duration=\"1328000\" />\r\n      <workItem from=\"1685084634532\" duration=\"2047000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 17a5e6c9ca3c0d58ab513e00afda87fbb9502c3a)
+++ b/.idea/workspace.xml	(date 1685780240856)
@@ -5,13 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e99e4343-1934-4a34-858d-155e3f4e1670" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_13_2023_1_24_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_13_2023_1_24_PM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI21Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI21Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI63Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI63Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI65Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI65Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/sql/DBConnect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/sql/DBConnect.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI21.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI21.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUInew.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUInew.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI62.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI62.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI63.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI63.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI65.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI65.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: src/main/resources/com/example/baitaplonoop/GUI63.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.CheckBox?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.TableColumn?>\r\n<?import javafx.scene.control.TableView?>\r\n<?import javafx.scene.control.TreeView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane fx:id=\"gui2_1\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"645.0\" prefWidth=\"740.0\" xmlns=\"http://javafx.com/javafx/19\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.example.baitaplonoop.controller.GUI63Controller\">\r\n    <Label layoutX=\"-1.0\" layoutY=\"-1.0\" style=\"-fx-background-color: #00CED1;\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\r\n    <Label layoutX=\"35.0\" layoutY=\"40.0\" prefHeight=\"34.0\" prefWidth=\"410.0\" text=\"Add from the question bank at the end\" textFill=\"#d00b0b\" AnchorPane.leftAnchor=\"35.0\" AnchorPane.rightAnchor=\"295.0\">\r\n        <font>\r\n            <Font size=\"23.0\" />\r\n        </font>\r\n    </Label>\r\n    <Label layoutX=\"32.0\" layoutY=\"74.0\" text=\"Select a category:\">\r\n        <font>\r\n            <Font size=\"17.0\" />\r\n        </font>\r\n    </Label>\r\n    <Label layoutX=\"36.0\" layoutY=\"100.0\" text=\"The default category for questions shared in context\" />\r\n    <CheckBox fx:id=\"gui2_1CheckBox\" layoutX=\"32.0\" layoutY=\"127.0\" mnemonicParsing=\"false\" text=\"Also show questions from subcategories\" />\r\n    <CheckBox layoutX=\"32.0\" layoutY=\"158.0\" mnemonicParsing=\"false\" text=\"Also show old questions\" />\r\n    <TreeView fx:id=\"category\" layoutX=\"343.0\" layoutY=\"78.0\" prefHeight=\"178.0\" prefWidth=\"217.0\" AnchorPane.leftAnchor=\"343.0\" AnchorPane.rightAnchor=\"40.0\" />\r\n    <Label fx:id=\"Default\" layoutX=\"192.0\" layoutY=\"76.0\" prefHeight=\"21.0\" prefWidth=\"120.0\" text=\"Default\" textAlignment=\"CENTER\" />\r\n    <TableView fx:id=\"table\" layoutX=\"36.0\" layoutY=\"271.0\" prefHeight=\"273.0\" prefWidth=\"646.0\">\r\n        <columns>\r\n            <TableColumn fx:id=\"question\" prefWidth=\"569.6000900268555\" text=\"Question\" />\r\n            <TableColumn fx:id=\"action\" prefWidth=\"76.79998779296875\" text=\"Choice\" />\r\n        </columns>\r\n    </TableView>\r\n   <Button fx:id=\"addSelectedQuestionToQuiz_btn\" layoutX=\"46.0\" layoutY=\"572.0\" mnemonicParsing=\"false\" text=\"Add Selected Question to the quiz\" />\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/example/baitaplonoop/GUI63.fxml b/src/main/resources/com/example/baitaplonoop/GUI63.fxml
--- a/src/main/resources/com/example/baitaplonoop/GUI63.fxml	(revision 17a5e6c9ca3c0d58ab513e00afda87fbb9502c3a)
+++ b/src/main/resources/com/example/baitaplonoop/GUI63.fxml	(date 1685779754727)
@@ -9,7 +9,7 @@
 <?import javafx.scene.layout.AnchorPane?>
 <?import javafx.scene.text.Font?>
 
-<AnchorPane fx:id="gui2_1" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="645.0" prefWidth="740.0" xmlns="http://javafx.com/javafx/19" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.baitaplonoop.controller.GUI63Controller">
+<AnchorPane fx:id="gui6_3" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="645.0" prefWidth="740.0" xmlns="http://javafx.com/javafx/19" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.baitaplonoop.controller.GUI63Controller">
     <Label layoutX="-1.0" layoutY="-1.0" style="-fx-background-color: #00CED1;" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
     <Label layoutX="35.0" layoutY="40.0" prefHeight="34.0" prefWidth="410.0" text="Add from the question bank at the end" textFill="#d00b0b" AnchorPane.leftAnchor="35.0" AnchorPane.rightAnchor="295.0">
         <font>
@@ -22,7 +22,7 @@
         </font>
     </Label>
     <Label layoutX="36.0" layoutY="100.0" text="The default category for questions shared in context" />
-    <CheckBox fx:id="gui2_1CheckBox" layoutX="32.0" layoutY="127.0" mnemonicParsing="false" text="Also show questions from subcategories" />
+    <CheckBox fx:id="gui6_3CheckBox" layoutX="32.0" layoutY="127.0" mnemonicParsing="false" text="Also show questions from subcategories" />
     <CheckBox layoutX="32.0" layoutY="158.0" mnemonicParsing="false" text="Also show old questions" />
     <TreeView fx:id="category" layoutX="343.0" layoutY="78.0" prefHeight="178.0" prefWidth="217.0" AnchorPane.leftAnchor="343.0" AnchorPane.rightAnchor="40.0" />
     <Label fx:id="Default" layoutX="192.0" layoutY="76.0" prefHeight="21.0" prefWidth="120.0" text="Default" textAlignment="CENTER" />
