Index: src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\n\r\nimport com.example.baitaplonoop.sql.DBConnect;\r\nimport com.example.baitaplonoop.util.BreadCrumb;\r\nimport com.example.baitaplonoop.util.ChangeScene;\r\nimport com.example.baitaplonoop.util.TableQuestionsOfGui62;\r\nimport de.jensd.fx.glyphs.fontawesome.FontAwesomeIcon;\r\nimport de.jensd.fx.glyphs.fontawesome.FontAwesomeIconView;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.paint.Paint;\r\nimport javafx.scene.text.Text;\r\nimport javafx.util.Pair;\r\nimport java.net.URL;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.Objects;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.*;\r\n\r\npublic class GUI62Controller implements Initializable {\r\n    @FXML\r\n    private CheckBox shuffle;\r\n    @FXML\r\n    private ToggleButton selectMultipleItems;\r\n    @FXML\r\n    private Button deleteMultipleItems;\r\n    @FXML\r\n    private Label addLabel;\r\n    @FXML\r\n    private ListView<Label> listModeAdd;\r\n    private final ObservableList<Label> addMode = FXCollections.observableArrayList();\r\n    private final ObservableList<TableQuestionsOfGui62> chosenQuestions = FXCollections.observableArrayList();\r\n    @FXML\r\n    private TableView<TableQuestionsOfGui62> tableQuestions;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, Label> DeleteIcon;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, CheckBox> MultiQuestionsChoice;\r\n    @FXML\r\n    private Label numberQuestionInTable;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, Text> Order;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, Label> PlusIcon;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, TextField> QuestionMark;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, String> QuestionText;\r\n\r\n    @FXML\r\n    private TableColumn<TableQuestionsOfGui62, Label> Setting;\r\n    @FXML\r\n    private Label totalOfMark;\r\n\r\n    @FXML\r\n    private Label quizName;\r\n    @FXML\r\n    private Button save;\r\n\r\n    private void addQuestionMode() {\r\n        listModeAdd.setVisible(false);\r\n        Label label1 = new Label(\"a new question\");\r\n        Label label2 = new Label(\"from question bank\");\r\n        Label label3 = new Label(\"random a question\");\r\n        addMode.addAll(label1, label2, label3);\r\n        listModeAdd.getItems().addAll(addMode);\r\n    }\r\n    private void numberQuestionAndMarkInTable(){\r\n        String a=\"Question: \"+ chosenQuestions.size() +\"| This quiz is open\";\r\n        numberQuestionInTable.setText(a);\r\n        String b=\"Total of mark: \"+ chosenQuestions.size() +\".00\";\r\n        totalOfMark.setText(b);\r\n    }\r\n    public void setChosenQuestions(ObservableList<Pair<String, String>> randomQuestion) {\r\n        tableQuestions.setVisible(false);\r\n        int stt = 0;\r\n        for (Pair<String, String> a : randomQuestion) {\r\n            stt++;\r\n            TableQuestionsOfGui62 tableQuestionsOfGui62;\r\n\r\n            //Tạo checkbox\r\n            CheckBox multiQuestionsChoice = new CheckBox();\r\n            //Tạo oder\r\n            Text order = new Text();\r\n            order.setText(Integer.toString(stt));\r\n            //Tạo questionText\r\n            String questionText = a.getValue();\r\n            //Tạo questionID\r\n            String questionID = a.getKey();\r\n            //tạo biểu tượng setting\r\n            Label setting = new Label();\r\n            FontAwesomeIconView iconView = new FontAwesomeIconView(FontAwesomeIcon.GEAR);\r\n            iconView.setSize(\"22px\");\r\n            iconView.setFill(Paint.valueOf(\"#000000\"));\r\n            setting.setGraphic(iconView);\r\n            //Tạo biểu tượng plusIcon\r\n            Label plushIcon = new Label();\r\n            FontAwesomeIconView iconView1 = new FontAwesomeIconView(FontAwesomeIcon.SEARCH_PLUS);\r\n            iconView1.setSize(\"22px\");\r\n            iconView1.setFill(Paint.valueOf(\"#000000\"));\r\n            plushIcon.setGraphic(iconView1);\r\n            //tạo biểu tượng deleteIcon\r\n            Label deleteIcon = new Label();\r\n            FontAwesomeIconView iconView2 = new FontAwesomeIconView(FontAwesomeIcon.TRASH);\r\n            iconView2.setSize(\"22px\");\r\n            iconView2.setFill(Paint.valueOf(\"#000000\"));\r\n            deleteIcon.setGraphic(iconView2);\r\n            deleteIcon.setOnMouseClicked(mouseEvent -> {\r\n            });\r\n            //tạo textField questionMark\r\n            TextField questionMark = new TextField(\"1.00\");\r\n            questionMark.setDisable(true);\r\n            tableQuestionsOfGui62 = new TableQuestionsOfGui62(multiQuestionsChoice, order, setting, questionText, questionID, plushIcon, deleteIcon, questionMark);\r\n            chosenQuestions.add(tableQuestionsOfGui62);\r\n        }\r\n        deleteEvent();\r\n        numberQuestionAndMarkInTable();\r\n        tableQuestions.setVisible(true);\r\n    }\r\n\r\n    private void addQuestionIntoTable() {\r\n        tableQuestions.setVisible(false);\r\n        tableQuestions.setTableMenuButtonVisible(false);\r\n        tableQuestions.setStyle(\"-fx-table-cell-border-color: transparent;\");\r\n        MultiQuestionsChoice.setVisible(false);\r\n        MultiQuestionsChoice.setCellValueFactory(new PropertyValueFactory<>(\"multiQuestionsChoice\"));\r\n        Order.setCellValueFactory(new PropertyValueFactory<>(\"order\"));\r\n        Setting.setCellValueFactory(new PropertyValueFactory<>(\"setting\"));\r\n        QuestionText.setCellValueFactory(new PropertyValueFactory<>(\"questionText\"));\r\n        PlusIcon.setCellValueFactory(new PropertyValueFactory<>(\"plusIcon\"));\r\n        DeleteIcon.setCellValueFactory(new PropertyValueFactory<>(\"deleteIcon\"));\r\n        QuestionMark.setCellValueFactory(new PropertyValueFactory<>(\"questionMark\"));\r\n        numberQuestionAndMarkInTable();\r\n        tableQuestions.setItems(chosenQuestions);\r\n    }\r\n    private void deleteEvent(){\r\n        for(TableQuestionsOfGui62 a: chosenQuestions){\r\n            a.getDeleteIcon().setOnMouseClicked(mouseEvent -> {\r\n                chosenQuestions.remove(a);\r\n                int i=0;\r\n                for(TableQuestionsOfGui62 b :chosenQuestions){\r\n                    i++;\r\n                    b.getOrder().setText(Integer.toString(i));\r\n                }\r\n                numberQuestionAndMarkInTable();\r\n            });\r\n        }\r\n    }\r\n    private void setStatementShuffle(String quizName) throws SQLException {\r\n        DBConnect db=new DBConnect();\r\n        ResultSet rs=db.getData(\"select shuffle from Quiz where quizName = N'\"+quizName+\"'\");\r\n        while (rs.next()){\r\n            boolean shuffleStatement=rs.getBoolean(\"shuffle\");\r\n            shuffle.setSelected(shuffleStatement);\r\n        }\r\n    }\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        quizName.setText(\"Editing quiz: \" + quizChosen);\r\n        deleteMultipleItems.setVisible(false);\r\n        tableQuestions.setVisible(false);\r\n        addQuestionIntoTable();\r\n        addQuestionMode();\r\n        try {\r\n            setStatementShuffle(quizChosen);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        addLabel.setOnMouseClicked(mouseEvent -> listModeAdd.setVisible(!listModeAdd.isVisible()));\r\n        listModeAdd.setOnMouseClicked(mouseEvent -> {\r\n            Label label = listModeAdd.getSelectionModel().getSelectedItem();\r\n            if (Objects.equals(label.getText(), \"random a question\")) {\r\n                label.setOnMouseClicked(mouseEvent1 -> {\r\n                    Hyperlink randomquestion_hl=new Hyperlink(\" / \"+\"Add random a question\");\r\n                    randomquestion_hl.setOnMouseClicked(mouseEvent2 -> {\r\n                        BreadCrumb.changeBreadCrumb(breadCrumb,level,randomquestion_hl);\r\n                        ChangeScene.GUI65(this,mouseEvent2);\r\n                    });\r\n                    BreadCrumb.addBreadCrumb(breadCrumb,level,3,randomquestion_hl);\r\n                   ChangeScene.GUI65(this,mouseEvent1);\r\n                });\r\n            }\r\n            if(Objects.equals(label.getText(), \"from question bank\")){\r\n                label.setOnMouseClicked(mouseEvent1 -> {\r\n                    Hyperlink addFromQuestionBank_hl=new Hyperlink(\" / \"+\"Add question from question bank\");\r\n                    addFromQuestionBank_hl.setOnMouseClicked(mouseEvent2 -> {\r\n                        BreadCrumb.changeBreadCrumb(breadCrumb,level,addFromQuestionBank_hl);\r\n                        ChangeScene.GUI63(this,mouseEvent2);\r\n                    });\r\n                    BreadCrumb.addBreadCrumb(breadCrumb,level,3,addFromQuestionBank_hl);\r\n                    ChangeScene.GUI63(this, mouseEvent1);\r\n                });\r\n            }\r\n        });\r\n        selectMultipleItems.setOnAction(event -> {\r\n            if(selectMultipleItems.isSelected()){\r\n                MultiQuestionsChoice.setVisible(true);\r\n                deleteMultipleItems.setVisible(true);\r\n            }\r\n            else {\r\n                MultiQuestionsChoice.setVisible(false);\r\n                deleteMultipleItems.setVisible(false);\r\n            }\r\n        });\r\n        deleteMultipleItems.setOnAction(event -> {\r\n            for(int i=0;i<chosenQuestions.size();i++){\r\n                if(chosenQuestions.get(i).getMultiQuestionsChoice().isSelected()){\r\n                    deleteMultipleItems.setVisible(true);\r\n                    chosenQuestions.remove(chosenQuestions.get(i));\r\n                    i--;\r\n                }\r\n            }\r\n            int i=0;\r\n            for(TableQuestionsOfGui62 b :chosenQuestions){\r\n                i++;\r\n                b.getOrder().setText(Integer.toString(i));\r\n            }\r\n            numberQuestionAndMarkInTable();\r\n        });\r\n        save.setOnMouseClicked(event -> {\r\n            DBConnect db=new DBConnect();\r\n            try {\r\n                db.updateQuiz(shuffle.isSelected(),quizChosen);\r\n            } catch (SQLException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            for (TableQuestionsOfGui62 chosenQuestion : chosenQuestions) {\r\n                String[] addQuestionInQuiz = {chosenQuestion.getQuestionID(), quizChosen, null};\r\n                try {\r\n                    int row = db.InsertQuestionInQuiz(addQuestionInQuiz);\r\n                } catch (SQLException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n             Hyperlink quiz_hf=new Hyperlink(\" / \"+quizChosen);\r\n            quiz_hf.setOnMouseClicked(event1 -> {\r\n                BreadCrumb.changeBreadCrumb(breadCrumb,level,quiz_hf);\r\n                ChangeScene.GUI61PreviewQuiz(this, event1);\r\n            });\r\n            BreadCrumb.addBreadCrumb(breadCrumb,level,1,quiz_hf);\r\n            ChangeScene.GUI61PreviewQuiz(this,event);\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java b/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java
--- a/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java	(date 1688192769813)
@@ -241,6 +241,7 @@
                 String[] addQuestionInQuiz = {chosenQuestion.getQuestionID(), quizChosen, null};
                 try {
                     int row = db.InsertQuestionInQuiz(addQuestionInQuiz);
+                    System.out.println(row);
                 } catch (SQLException e) {
                     throw new RuntimeException(e);
                 }
Index: src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\nimport com.example.baitaplonoop.util.AnchorPaneFinish;\r\nimport com.example.baitaplonoop.util.BreadCrumb;\r\nimport com.example.baitaplonoop.util.ChangeScene;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Bounds;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Hyperlink;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.ScrollPane;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.Font;\r\n\r\nimport java.net.URL;\r\nimport java.text.DecimalFormat;\r\nimport java.time.Duration;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.*;\r\nimport static com.example.baitaplonoop.controller.GUI72Controller.openTime;\r\nimport static com.example.baitaplonoop.controller.GUI73Controller.finishTime;\r\n\r\npublic class GUI74Controller implements Initializable {\r\n    GridPane gridPane=new GridPane();\r\n    @FXML\r\n    private Label lbStart;\r\n    @FXML\r\n    private Label lbState;\r\n    @FXML\r\n    private Label lbCompleted;\r\n    @FXML\r\n    private Label lbTime;\r\n    @FXML\r\n    private ScrollPane questionView_cr;\r\n    @FXML\r\n    private Label lbMarks;\r\n    @FXML\r\n    private Label lbGrade;\r\n    @FXML\r\n    private AnchorPane apQuestion;\r\n    @FXML\r\n    private ScrollPane scrollPane;\r\n    @FXML\r\n    private AnchorPane anchorPane1;\r\n    @FXML\r\n    private FlowPane flowPane2;\r\n    @FXML\r\n    private Hyperlink hlFinish;\r\n    ArrayList<Button> listButton = new ArrayList<>();\r\n    void insertIntoGridPane() {\r\n        scrollPane.setStyle(\"-fx-background-color: transparent; -fx-background-insets: 0; -fx-padding: 0;\");\r\n\r\n        gridPane.setVgap(1);\r\n        gridPane.setHgap(1);\r\n        AnchorPane.setTopAnchor(gridPane, 0.0); // cách top 98 pixel\r\n        AnchorPane.setLeftAnchor(gridPane, 0.0); // cách left 50 pixel\r\n        AnchorPane.setRightAnchor(gridPane, 0.00); // cách right 50 pixel\r\n        anchorPane1.getChildren().add(gridPane);\r\n\r\n    }\r\n\r\n    private void scrollToNode(ScrollPane scrollPane, AnchorPane node) {\r\n        Bounds bounds = node.getBoundsInParent();\r\n        double y = bounds.getMinY();\r\n        double contentHeight = scrollPane.getContent().getBoundsInLocal().getHeight();\r\n        double viewportHeight = scrollPane.getViewportBounds().getHeight();\r\n        double vValue = y / (contentHeight - viewportHeight);\r\n        scrollPane.setVvalue(vValue);\r\n        scrollPane.setHvalue(0.00);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        flowPane2.getChildren().addAll(breadCrumb);\r\n        insertIntoGridPane();\r\n        hlFinish.setOnMouseClicked(event -> {\r\n            Hyperlink quiz_hf=new Hyperlink(\" / \"+quizChosen);\r\n            quiz_hf.setOnMouseClicked(event1 -> {\r\n                BreadCrumb.changeBreadCrumb(breadCrumb,level,quiz_hf);\r\n                ChangeScene.GUI61PreviewQuiz(this, event1);\r\n            });\r\n            BreadCrumb.addBreadCrumb(breadCrumb,level,1,quiz_hf);\r\n            ChangeScene.GUI61PreviewQuiz(this, event);\r\n        });\r\n    }\r\n    public void setUpScene(ArrayList<AnchorPaneFinish> result, double marks, double yourmarks){\r\n        lbStart.setText(openTime.format(DateTimeFormatter.ofPattern(\"EEEE, d MMMM yyyy, h:mm a\")));\r\n        lbCompleted.setText(finishTime.format(DateTimeFormatter.ofPattern(\"EEEE, d MMMM yyyy, h:mm a\")));\r\n        lbState.setText(\"Finished\");\r\n        Duration duration = Duration.between(openTime, finishTime);\r\n        long hours = duration.toHours();\r\n        long mins = duration.toMinutes() % 60;\r\n        long secs = duration.toSeconds() % 60;\r\n        String time = \"\";\r\n        if(hours > 1){\r\n            time += hours + \" hours \";\r\n        }else if(hours > 0){\r\n            time += hours + \" hour \";\r\n        }\r\n        if(mins > 1){\r\n            time += mins + \" mins \";\r\n        }else if(mins > 0 || hours > 0){\r\n            time += mins + \" min \";\r\n        }\r\n        if(secs > 1){\r\n            time += secs + \" secs\";\r\n        }else{\r\n            time += secs + \" sec\";\r\n        }\r\n        lbTime.setText(time);\r\n        DecimalFormat df = new DecimalFormat(\"#.##\");\r\n        lbMarks.setText(df.format(yourmarks) + \"/\" + df.format(marks));\r\n        double grade = yourmarks/marks;\r\n        lbGrade.setText(df.format(grade*10.0) + \" out of 10.00 (\" + (int)Math.round(grade*100) + \"%)\");\r\n        double questionHeight = 0;\r\n        for(int i = 0; i < result.size(); i++){\r\n            ///tao button tuong ung voi cau hoi\r\n            Button button = new Button();\r\n            button.setAlignment(Pos.TOP_CENTER);\r\n            button.setFont(Font.font(15));\r\n            button.setBorder( new Border(new BorderStroke(\r\n                    Color.SILVER,                       // Màu viền\r\n                    BorderStrokeStyle.SOLID,            // Kiểu viền\r\n                    CornerRadii.EMPTY,                  // Độ bo góc\r\n                    new BorderWidths(2)))              // Độ dày\r\n            );\r\n            button.setStyle(\"-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #C0C0C0 30%)\");\r\n            if (i < 9) button.setText(\"0\" + (i + 1));\r\n            else button.setText(String.valueOf(i + 1));\r\n            button.setId(\"question\" + (i + 1));\r\n            listButton.add(button);\r\n            GridPane.setConstraints(button, i % 5, i / 5);\r\n            GridPane.setMargin(button, new Insets(2, 1, 2, 1));\r\n            GridPane.setHgrow(button, Priority.ALWAYS);\r\n            GridPane.setVgrow(button, Priority.ALWAYS); // cho phép button mở rộng theo chiều dọc\r\n            gridPane.getChildren().add(button);\r\n            int finalI = i;\r\n            button.setOnAction(event -> scrollToNode(questionView_cr,result.get(finalI)));\r\n            ///////////////////////////////////Hung\r\n            apQuestion.getChildren().add(result.get(i));\r\n            AnchorPane.setTopAnchor(result.get(i), questionHeight);\r\n            AnchorPane.setLeftAnchor(result.get(i), 0.0);\r\n            AnchorPane.setRightAnchor(result.get(i), 0.0);\r\n            questionHeight += result.get(i).getPrefHeight();\r\n        }\r\n    }\r\n\r\n    public Label getLbStart() {\r\n        return lbStart;\r\n    }\r\n\r\n    public void setLbStart(Label lbStart) {\r\n        this.lbStart = lbStart;\r\n    }\r\n\r\n    public Label getLbState() {\r\n        return lbState;\r\n    }\r\n\r\n    public void setLbState(Label lbState) {\r\n        this.lbState = lbState;\r\n    }\r\n\r\n    public Label getLbCompleted() {\r\n        return lbCompleted;\r\n    }\r\n\r\n    public void setLbCompleted(Label lbCompleted) {\r\n        this.lbCompleted = lbCompleted;\r\n    }\r\n\r\n    public Label getLbTime() {\r\n        return lbTime;\r\n    }\r\n\r\n    public void setLbTime(Label lbTime) {\r\n        this.lbTime = lbTime;\r\n    }\r\n\r\n    public Label getLbMarks() {\r\n        return lbMarks;\r\n    }\r\n\r\n    public void setLbMarks(Label lbMarks) {\r\n        this.lbMarks = lbMarks;\r\n    }\r\n\r\n    public Label getLbGrade() {\r\n        return lbGrade;\r\n    }\r\n\r\n    public void setLbGrade(Label lbGrade) {\r\n        this.lbGrade = lbGrade;\r\n    }\r\n\r\n    public AnchorPane getApQuestion() {\r\n        return apQuestion;\r\n    }\r\n\r\n    public void setApQuestion(AnchorPane apQuestion) {\r\n        this.apQuestion = apQuestion;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java b/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java
--- a/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java	(date 1688193508118)
@@ -152,60 +152,4 @@
             questionHeight += result.get(i).getPrefHeight();
         }
     }
-
-    public Label getLbStart() {
-        return lbStart;
-    }
-
-    public void setLbStart(Label lbStart) {
-        this.lbStart = lbStart;
-    }
-
-    public Label getLbState() {
-        return lbState;
-    }
-
-    public void setLbState(Label lbState) {
-        this.lbState = lbState;
-    }
-
-    public Label getLbCompleted() {
-        return lbCompleted;
-    }
-
-    public void setLbCompleted(Label lbCompleted) {
-        this.lbCompleted = lbCompleted;
-    }
-
-    public Label getLbTime() {
-        return lbTime;
-    }
-
-    public void setLbTime(Label lbTime) {
-        this.lbTime = lbTime;
-    }
-
-    public Label getLbMarks() {
-        return lbMarks;
-    }
-
-    public void setLbMarks(Label lbMarks) {
-        this.lbMarks = lbMarks;
-    }
-
-    public Label getLbGrade() {
-        return lbGrade;
-    }
-
-    public void setLbGrade(Label lbGrade) {
-        this.lbGrade = lbGrade;
-    }
-
-    public AnchorPane getApQuestion() {
-        return apQuestion;
-    }
-
-    public void setApQuestion(AnchorPane apQuestion) {
-        this.apQuestion = apQuestion;
-    }
 }
Index: src/main/java/com/example/baitaplonoop/sql/DBConnect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.sql;\r\n\r\nimport java.sql.*;\r\nimport java.time.LocalDateTime;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class DBConnect {\r\n    public Connection con;\r\n    public DBConnect() {\r\n        try {\r\n            Class.forName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\r\n            String url = \"jdbc:sqlserver://LAPTOP-5RN02RRR\\\\SQLEXPRESS:1433;databaseName=Exam_Management2;\"\r\n                    + \"encrypt=true;trustServerCertificate=true;sslProtocol=TLSv1.2\";\r\n            String username = \"sa\";\r\n            String password = \"123123\";\r\n            con = DriverManager.getConnection(url, username, password);\r\n        } catch (ClassNotFoundException | SQLException ex) {\r\n            Logger.getLogger(DBConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n    public ResultSet getData(String stringSQL) {\r\n        ResultSet rs = null;\r\n        try {\r\n            Statement state = con.createStatement();\r\n            rs = state.executeQuery(stringSQL);\r\n        } catch (SQLException ex) {\r\n            Logger.getLogger(DBConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n        return rs;\r\n    }\r\n    public int InsertQuestion(String[] stringSQL) {\r\n        int rowInserted;\r\n        String sql = \"INSERT INTO Question(categoryID, questionID, questionText, questionMark, questionMedia) values(?,?,?,?,?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setString(2, stringSQL[1]);\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            statement.setString(5, stringSQL[4]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n//    public int InsertQuestion(String[] stringSQL) {\r\n//        int rowInserted = 0;\r\n//        String sql = \"INSERT INTO Question(categoryID, questionID, questionText) values(?,?,?)\";\r\n//        PreparedStatement statement;\r\n//        try {\r\n//            statement = con.prepareStatement(sql);\r\n//            statement.setString(1, stringSQL[0]);\r\n//            statement.setString(2, stringSQL[1]);\r\n//            statement.setString(3, stringSQL[2]);\r\n//            rowInserted = statement.executeUpdate();\r\n//        } catch (SQLException e) {\r\n//            throw new RuntimeException(e);\r\n//        }\r\n//        return rowInserted;\r\n//    }\r\n    public int InsertChoice(String[] stringSQL) {\r\n        int rowInserted = 0;\r\n        String sql = \"INSERT INTO Choice(choiceText, choiceGrade, choiceID, questionID, isSelected, choiceMedia) values(?,?,?,?,?,?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setFloat(2, Float.parseFloat(stringSQL[1]));\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            statement.setString(5, stringSQL[4]);\r\n            statement.setString(6, stringSQL[5]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n    public int InsertQuestionInQuiz(String[] stringSQL) throws SQLException {\r\n        int rowInserted = 0;\r\n        String sql = \"insert into QuestionInQuiz(questionID,quizName,yourMark) values(?,?,?)\";\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, stringSQL[0]);\r\n        statement.setString(2, stringSQL[1]);\r\n        statement.setString(3, stringSQL[2]);\r\n        rowInserted = statement.executeUpdate();\r\n        return rowInserted;\r\n    }\r\n    public String FindCategoryID(String categoryName) throws SQLException {\r\n        String categoryID = null;\r\n        String sql = \"SELECT categoryID FROM Category WHERE categoryName = N'\" + categoryName + \"'\";\r\n        ResultSet result = getData(sql);\r\n        if (result.next()) {\r\n            categoryID = result.getString(\"categoryID\");\r\n        }\r\n        return categoryID;\r\n    }\r\n    public void InsertCategory(String[] stringSQL) {\r\n        int rowInserted = 0;\r\n        String sql = \"INSERT INTO Category(parentID, categoryName, categoryID, categoryinfo) values (?, ?, ?, ?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setString(2, stringSQL[1]);\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n    }\r\n    public int AddNewQuiz(String[] stringSQL) {\r\n        int rowInserted = 0;\r\n        String sql = \"INSERT INTO Quiz(quizName, Descript, openTime, closeTime, timeLimit) values (?, ?, ?, ?, ?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setString(2, stringSQL[1]);\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            statement.setString(5, stringSQL[4]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n    public String[] FindQuestionInfo(String questionID) {\r\n        String[] questionInfo = null;\r\n        String sql = \"SELECT questionText,questionMedia FROM Question WHERE questionID = ?\";\r\n        try (\r\n                PreparedStatement statement = con.prepareStatement(sql);\r\n        ) {\r\n            statement.setString(1, questionID);\r\n            ResultSet rs = statement.executeQuery();\r\n            if (rs.next()) {\r\n                String questionText = rs.getNString(\"questionText\");\r\n                String questionMedia = rs.getString(\"questionMedia\");\r\n                questionInfo = new String[]{questionText, questionMedia};\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return questionInfo;\r\n    }\r\n    public String[] FindChoiceInfo(String choiceID) {\r\n        String[] choiceInfo = null;\r\n        String sql = \"SELECT choiceText, choiceGrade, choiceMedia FROM choice WHERE choiceID = ?\";\r\n        try (\r\n                PreparedStatement statement = con.prepareStatement(sql);\r\n        ) {\r\n            statement.setString(1, choiceID);\r\n            ResultSet rs = statement.executeQuery();\r\n            if (rs.next()) {\r\n                String choiceText = rs.getNString(\"choiceText\");\r\n                Float choiceGrade = rs.getFloat(\"choiceGrade\");\r\n                String choiceMedia = rs.getString(\"choiceMedia\");\r\n                choiceInfo = new String[]{choiceText, String.valueOf(choiceGrade), choiceMedia};\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return choiceInfo;\r\n    }\r\n    public void UpdateQuestion(String[] questionInfo) throws SQLException {\r\n        int rowInserted = 0;\r\n        String sql = \"MERGE Question AS target USING (VALUES (?,?,?,?,?)) \" +\r\n                \"AS source (categoryID, questionID, questionText, questionMark, questionMedia)  \" +\r\n                \"ON target.questionID = source.questionID  \" +\r\n                \"WHEN MATCHED THEN  UPDATE SET questionText = source.questionText,  \" +\r\n                \"categoryID = source.categoryID, questionMedia = source.questionMedia, questionMark = source.questionMark \" +\r\n                \"WHEN NOT MATCHED THEN  INSERT (questionID, questionText, categoryID, questionMark, questionMedia)  \" +\r\n                \"VALUES (source.questionID, source.questionText, source.categoryID,source.questionMark, source.questionMedia);\";\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, questionInfo[0]);\r\n        statement.setString(2, questionInfo[1]);\r\n        statement.setString(3, questionInfo[2]);\r\n        statement.setFloat(4, Float.parseFloat(questionInfo[3]));\r\n        statement.setString(5, questionInfo[4]);\r\n        rowInserted = statement.executeUpdate();\r\n\r\n    }\r\n    public void UpdateChoice(String[] choiceInfo) throws SQLException {\r\n        int rowInserted = 0;\r\n        String sql = \"MERGE Choice AS target USING (VALUES (?,?,?,?,?)) AS source (choiceText, choiceGrade, choiceID, questionID, choiceMedia)  ON target.choiceID = source.choiceID  WHEN MATCHED THEN  UPDATE SET choiceText = source.choiceText,  choiceGrade = source.choiceGrade, choiceID = source.choiceID,questionID = source.questionID, choiceMedia = source.choiceMedia  WHEN NOT MATCHED THEN  INSERT (choiceText, choiceGrade, choiceID, questionID, choiceMedia)  VALUES (source.choiceText, source.choiceGrade, source.choiceID, source.questionID, source.choiceMedia);\";\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, choiceInfo[0]);\r\n        statement.setFloat(2, Float.parseFloat(choiceInfo[1]));\r\n        statement.setString(3, choiceInfo[2]);\r\n        statement.setString(4, choiceInfo[3]);\r\n        statement.setString(5,  choiceInfo[4]);\r\n        rowInserted = statement.executeUpdate();\r\n\r\n    }\r\n    public void updateQuiz(boolean a, String quizName) throws  SQLException{\r\n        boolean result =false;\r\n        String sql=\"update Quiz set shuffle = ? where quizName = N'\"+quizName+\"'\";\r\n        PreparedStatement statement;\r\n        statement=con.prepareStatement(sql);\r\n        statement.setString(1,Boolean.toString(a));\r\n        result = statement.execute();\r\n    }\r\n    public boolean checkQuestionID(String questionID) throws SQLException {\r\n        boolean result = false;\r\n        String sql = \"SELECT * FROM Question WHERE questionID = ?\"; // Câu lệnh SQL truy vấn dữ liệu theo questionID\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, questionID); // Thiết lập giá trị cho tham số\r\n        ResultSet rs = statement.executeQuery(); // Thực hiện câu lệnh và lấy kết quả trả về\r\n        if (rs.next()) { // Kiểm tra xem kết quả có dòng nào hay không\r\n            result = true; // Nếu có, nghĩa là questionID tồn tại\r\n        }\r\n        return result; // Trả về giá trị boolean\r\n    }\r\n    public int updateQuizMark(double mark, String quizChosen){\r\n        int rowUpdated = 0;\r\n        String sql = \"Update Quiz set mark = ? where quizName = N'\" + quizChosen + \"'\";\r\n        try {\r\n            PreparedStatement statement = con.prepareStatement(sql);\r\n            statement.setString(1, String.valueOf(mark));\r\n            rowUpdated = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowUpdated;\r\n    }\r\n    public boolean insertIntoHistory(String quizName, double mark, LocalDateTime dateAttempt){\r\n        boolean rowInserted = false;\r\n        String querry = \"Insert into HistoryAttempt (quizName, mark, dateAttempt) values (?, ?, ?)\";\r\n        try {\r\n            PreparedStatement statement = con.prepareStatement(querry);\r\n            statement.setString(1, quizName);\r\n            statement.setDouble(2, mark);\r\n            statement.setTimestamp(3, Timestamp.valueOf(dateAttempt));\r\n            rowInserted = statement.execute();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/sql/DBConnect.java b/src/main/java/com/example/baitaplonoop/sql/DBConnect.java
--- a/src/main/java/com/example/baitaplonoop/sql/DBConnect.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/sql/DBConnect.java	(date 1688193820867)
@@ -62,7 +62,7 @@
 //        return rowInserted;
 //    }
     public int InsertChoice(String[] stringSQL) {
-        int rowInserted = 0;
+        int rowInserted ;
         String sql = "INSERT INTO Choice(choiceText, choiceGrade, choiceID, questionID, isSelected, choiceMedia) values(?,?,?,?,?,?)";
         PreparedStatement statement;
         try {
@@ -80,7 +80,7 @@
         return rowInserted;
     }
     public int InsertQuestionInQuiz(String[] stringSQL) throws SQLException {
-        int rowInserted = 0;
+        int rowInserted ;
         String sql = "insert into QuestionInQuiz(questionID,quizName,yourMark) values(?,?,?)";
         PreparedStatement statement;
         statement = con.prepareStatement(sql);
@@ -100,7 +100,7 @@
         return categoryID;
     }
     public void InsertCategory(String[] stringSQL) {
-        int rowInserted = 0;
+        int rowInserted;
         String sql = "INSERT INTO Category(parentID, categoryName, categoryID, categoryinfo) values (?, ?, ?, ?)";
         PreparedStatement statement;
         try {
@@ -221,7 +221,7 @@
         }
         return result; // Trả về giá trị boolean
     }
-    public int updateQuizMark(double mark, String quizChosen){
+    public void updateQuizMark(double mark, String quizChosen){
         int rowUpdated = 0;
         String sql = "Update Quiz set mark = ? where quizName = N'" + quizChosen + "'";
         try {
@@ -231,9 +231,8 @@
         } catch (SQLException e) {
             throw new RuntimeException(e);
         }
-        return rowUpdated;
     }
-    public boolean insertIntoHistory(String quizName, double mark, LocalDateTime dateAttempt){
+    public void insertIntoHistory(String quizName, double mark, LocalDateTime dateAttempt){
         boolean rowInserted = false;
         String querry = "Insert into HistoryAttempt (quizName, mark, dateAttempt) values (?, ?, ?)";
         try {
@@ -245,7 +244,6 @@
         } catch (SQLException e) {
             throw new RuntimeException(e);
         }
-        return rowInserted;
     }
 
 }
\ No newline at end of file
Index: src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\nimport com.example.baitaplonoop.sql.DBConnect;\r\nimport com.example.baitaplonoop.util.*;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.input.TransferMode;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.stage.FileChooser;\r\n\r\nimport java.io.File;\r\nimport java.net.URL;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.breadCrumb;\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.level;\r\nimport static com.example.baitaplonoop.util.ImportFile.ErrorLine;\r\nimport static com.example.baitaplonoop.util.ImportFile.numberOfQuestion;\r\n\r\npublic class GUI34Controller implements Initializable {\r\n    @FXML\r\n    Label lbChooseImportCategory;\r\n    @FXML\r\n    TreeView<String> treeViewImport;\r\n    @FXML\r\n    AnchorPane apDropFile;\r\n    @FXML\r\n    Label lbFilePath;\r\n    @FXML\r\n    Button btnImport;\r\n    @FXML\r\n    Button btnChooseAFile;\r\n    @FXML\r\n    Label lbAlert;\r\n    List<File> files;\r\n    DBConnect db = new DBConnect();\r\n\r\n    public void setEvent(){\r\n        lbChooseImportCategory.setOnMouseClicked(mouseEvent -> {\r\n            if(treeViewImport.isVisible()){\r\n                treeViewImport.setVisible(false);\r\n            }\r\n            else {\r\n                try {\r\n                    treeViewImport.setVisible(true);\r\n                    TreeItem<String> root = new TreeItem<>(\"Course IT:\");\r\n                    treeViewImport.setRoot(root);\r\n                    insertCategoryIntoTreeView.insertCategory(\"select * from Category where parentID IS NULL\", root);\r\n                    treeViewImport.getSelectionModel().selectedItemProperty().addListener((observableValue, oldValue, newValue) -> {\r\n                        lbChooseImportCategory.setText(FindCategoryInfo.findCategoryName(newValue.getValue()));\r\n                    });\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n        });\r\n        apDropFile.setOnDragOver(dragEvent -> {\r\n            if (dragEvent.getDragboard().hasFiles()) {\r\n                dragEvent.acceptTransferModes(TransferMode.ANY);\r\n            }\r\n        });\r\n        apDropFile.setOnDragDropped(dragEvent -> {\r\n            files = dragEvent.getDragboard().getFiles();\r\n            File file = files.get(0);\r\n            lbFilePath.setText(file.getName());\r\n        });\r\n        btnImport.setOnMouseClicked(event -> {\r\n            Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n            alert.setTitle(\"Import information\");\r\n            ButtonType btnContinue = new ButtonType(\"Continue\", ButtonBar.ButtonData.YES);\r\n            ButtonType btnBack = new ButtonType(\"Home page\", ButtonBar.ButtonData.NO);\r\n            alert.getButtonTypes().setAll(btnContinue, btnBack);\r\n            String contentText;\r\n            if (files == null || files.size() == 0) {\r\n                contentText = \"There are no files imported\";\r\n                lbAlert.setText(\"There are no files imported\");\r\n                AlertOOP.mustFill(\"Import File\", \" \", contentText);\r\n            } else {\r\n                String path = files.get(0).getName();\r\n                if (path.substring(path.length() - 4, path.length()).equals(\"docx\")) {\r\n                    if (ImportFile.checkFileDOCX(files.get(0))) {\r\n                        lbAlert.setText(\"Correct format\");\r\n                        ResultSet rs = db.getData(\"SELECT * from Category where categoryName = N'\" + lbChooseImportCategory.getText() + \"'\");\r\n                        String categoryID = \"\";\r\n                        try {\r\n                            while (rs.next()) {\r\n                                categoryID = rs.getString(\"categoryID\");\r\n                            }\r\n                        } catch (SQLException e) {\r\n                            throw new RuntimeException(e);\r\n                        }\r\n                        ImportFile.importQuestionFromDocxFile(files.get(0), categoryID);\r\n                        contentText = \"Success: \" + numberOfQuestion + \" question(s) imported\";\r\n                    } else {\r\n                        lbAlert.setText(\"Error at: \" + ErrorLine);\r\n                        contentText = \"Error at: \" + ErrorLine;\r\n                    }\r\n                } else if (path.substring(path.length() - 3, path.length()).equals(\"txt\")) {\r\n                    if (ImportFile.checkFileTXT(files.get(0))) {\r\n                        lbAlert.setText(\"Correct format\");\r\n                        ResultSet rs = db.getData(\"SELECT * from Category where categoryName = N'\" + lbChooseImportCategory.getText() + \"'\");\r\n                        String categoryID = \"\";\r\n                        try {\r\n                            while (rs.next()) {\r\n                                categoryID = rs.getString(\"categoryID\");\r\n                            }\r\n                        } catch (SQLException e) {\r\n                            throw new RuntimeException(e);\r\n                        }\r\n                        ImportFile.importQuestionFromTXTFile(files.get(0), categoryID);\r\n                        contentText = \"Success: \" + numberOfQuestion + \" question(s) imported\";\r\n                    } else {\r\n                        lbAlert.setText(\"Error at: \" + ErrorLine);\r\n                        contentText = \"Error at: \" + ErrorLine;\r\n                    }\r\n                } else {\r\n                    lbAlert.setText(\"Wrong format\");\r\n                    contentText = \"Wrong format\";\r\n                }\r\n                AlertOOP.AddDone(\"Import File\", \" \", contentText);\r\n                breadCrumb.clear();\r\n                level.clear();\r\n                ChangeScene.mainSceneGUI11(this,event);\r\n            }\r\n        });\r\n        btnChooseAFile.setOnAction(event -> {\r\n            FileChooser fc = new FileChooser();\r\n            fc.setTitle(\"Choose a file\");\r\n            FileChooser.ExtensionFilter fileFilter = new FileChooser.ExtensionFilter(\"Files\", \"*.txt\", \"*.docx\");\r\n            fc.getExtensionFilters().add(fileFilter);\r\n            File file = fc.showOpenDialog(null);\r\n            if (files == null) {\r\n                files = new ArrayList<>();\r\n            }\r\n            files.clear();\r\n            if (file != null) {\r\n                files.add(file);\r\n                lbFilePath.setText(file.getName());\r\n            }\r\n        });\r\n    }\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        treeViewImport.setVisible(false);\r\n        setEvent();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java b/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java
--- a/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java	(date 1688192769822)
@@ -51,9 +51,7 @@
                     TreeItem<String> root = new TreeItem<>("Course IT:");
                     treeViewImport.setRoot(root);
                     insertCategoryIntoTreeView.insertCategory("select * from Category where parentID IS NULL", root);
-                    treeViewImport.getSelectionModel().selectedItemProperty().addListener((observableValue, oldValue, newValue) -> {
-                        lbChooseImportCategory.setText(FindCategoryInfo.findCategoryName(newValue.getValue()));
-                    });
+                    treeViewImport.getSelectionModel().selectedItemProperty().addListener((observableValue, oldValue, newValue) -> lbChooseImportCategory.setText(FindCategoryInfo.findCategoryName(newValue.getValue())));
                 } catch (Exception e) {
                     throw new RuntimeException(e);
                 }
@@ -82,7 +80,7 @@
                 AlertOOP.mustFill("Import File", " ", contentText);
             } else {
                 String path = files.get(0).getName();
-                if (path.substring(path.length() - 4, path.length()).equals("docx")) {
+                if (path.endsWith("docx")) {
                     if (ImportFile.checkFileDOCX(files.get(0))) {
                         lbAlert.setText("Correct format");
                         ResultSet rs = db.getData("SELECT * from Category where categoryName = N'" + lbChooseImportCategory.getText() + "'");
@@ -100,7 +98,7 @@
                         lbAlert.setText("Error at: " + ErrorLine);
                         contentText = "Error at: " + ErrorLine;
                     }
-                } else if (path.substring(path.length() - 3, path.length()).equals("txt")) {
+                } else if (path.endsWith("txt")) {
                     if (ImportFile.checkFileTXT(files.get(0))) {
                         lbAlert.setText("Correct format");
                         ResultSet rs = db.getData("SELECT * from Category where categoryName = N'" + lbChooseImportCategory.getText() + "'");
Index: src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\nimport com.example.baitaplonoop.sql.DBConnect;\r\nimport com.example.baitaplonoop.util.AnchorPaneFinish;\r\nimport com.example.baitaplonoop.util.AnchorPaneGUI7;\r\nimport com.example.baitaplonoop.util.BreadCrumb;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.beans.value.ChangeListener;\r\nimport javafx.beans.value.ObservableValue;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.control.Hyperlink;\r\nimport javafx.scene.control.Label;\r\nimport javafx.geometry.Bounds;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.*;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\nimport javafx.scene.text.Font;\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.*;\r\n\r\npublic class GUI73Controller implements Initializable {\r\n    @FXML\r\n    private ScrollPane scrollPane;\r\n    @FXML\r\n    private Label timerLabel;\r\n    private String quizName;\r\n    public AnchorPane QuestionOverview_ap;\r\n    @FXML\r\n    private AnchorPane apQuestion;\r\n    @FXML\r\n    private AnchorPane anchorPane1;\r\n    private final GridPane gridPane = new GridPane();\r\n    @FXML\r\n    private ScrollPane questionView_cr;\r\n    DBConnect db = new DBConnect();\r\n    private Timeline timeline;\r\n    private int seconds = 0;\r\n    @FXML\r\n    Hyperlink hlFinish;\r\n    @FXML\r\n    FlowPane flowPane1;\r\n    public static LocalDateTime finishTime;\r\n    ArrayList<AnchorPaneGUI7> listQuestion = new ArrayList<>();\r\n    ArrayList<AnchorPaneFinish> result = new ArrayList<>();\r\n    ArrayList<Button> listButton = new ArrayList<>();\r\n\r\n    private void updateTimerLabel() {\r\n        int hours = seconds / 3600;\r\n        int minutes = (seconds % 3600) / 60;\r\n        int secs = seconds % 60;\r\n\r\n        String formattedTime = String.format(\"%02d:%02d:%02d\", hours, minutes, secs);\r\n        timerLabel.setText(\"Time left \" + formattedTime);\r\n    }\r\n\r\n    private void stopTimer() {\r\n        timeline.stop();\r\n    }\r\n\r\n    private void timerAction(int a) {\r\n        seconds = a * 60;\r\n        String hours;\r\n        if (a / 60 < 10) hours = \"0\" + Integer.toString(a / 60);\r\n        else hours = Integer.toString(a / 60);\r\n        String minutes;\r\n        if (a % 60 < 10) minutes = \"0\" + Integer.toString(a % 60);\r\n        else minutes = Integer.toString(a % 60);\r\n        timerLabel.setText(\"Time left \" + hours + \":\" + minutes + \":00\");\r\n        timeline = new Timeline(\r\n                new KeyFrame(Duration.seconds(1), event -> {\r\n                    seconds--;\r\n                    updateTimerLabel();\r\n                    if (seconds == 0) {\r\n                        stopTimer();\r\n                    }\r\n                })\r\n        );\r\n        timeline.setCycleCount(Timeline.INDEFINITE);\r\n        timeline.play();\r\n    }\r\n\r\n    void insertIntoGridPane() {\r\n        scrollPane.setStyle(\"-fx-background-color: transparent; -fx-background-insets: 0; -fx-padding: 0;\");\r\n\r\n        gridPane.setVgap(1);\r\n        gridPane.setHgap(1);\r\n        AnchorPane.setTopAnchor(gridPane, 0.0); // cách top 98 pixel\r\n        AnchorPane.setLeftAnchor(gridPane, 0.0); // cách left 50 pixel\r\n        AnchorPane.setRightAnchor(gridPane, 0.00); // cách right 50 pixel\r\n        anchorPane1.getChildren().add(gridPane);\r\n\r\n    }\r\n\r\n    private void scrollToNode(ScrollPane scrollPane, AnchorPane node) {\r\n        Bounds bounds = node.getBoundsInParent();\r\n        double y = bounds.getMinY();\r\n        double contentHeight = scrollPane.getContent().getBoundsInLocal().getHeight();\r\n        double viewportHeight = scrollPane.getViewportBounds().getHeight();\r\n        double vValue = y / (contentHeight - viewportHeight);\r\n        scrollPane.setVvalue(vValue);\r\n        scrollPane.setHvalue(0.00);\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        flowPane1.getChildren().addAll(breadCrumb);\r\n        insertIntoGridPane();\r\n        ResultSet rs = db.getData(\"Select questionID from QuestionInQuiz where quizName = N'\" + quizChosen + \"'\");\r\n        int i = 0;\r\n        double questionHeight = 0.0;\r\n        try {\r\n            while (rs.next()) {\r\n                AnchorPaneGUI7 question = new AnchorPaneGUI7(i + 1, rs.getString(\"questionID\"));\r\n                ///tao button tuong ung voi cau hoi\r\n                Button button = new Button();\r\n                button.setAlignment(Pos.TOP_CENTER);\r\n                button.setFont(Font.font(15));\r\n                button.setBorder( new Border(new BorderStroke(\r\n                        Color.SILVER,                       // Màu viền\r\n                        BorderStrokeStyle.SOLID,            // Kiểu viền\r\n                        CornerRadii.EMPTY,                  // Độ bo góc\r\n                        new BorderWidths(2)))              // Độ dày\r\n);\r\n                button.setStyle(\"-fx-background-color: linear-gradient(to bottom, #FFFFFF 100%, #C0C0C0 00%)\");\r\n                if (0 <= i && i < 9) button.setText(\"0\" + String.valueOf(i + 1));\r\n                else button.setText(String.valueOf(i + 1));\r\n                button.setId(\"question\" + String.valueOf(i + 1));\r\n                listButton.add(button);\r\n                GridPane.setConstraints(button, i % 5, i / 5);\r\n                GridPane.setMargin(button, new Insets(2, 1, 2, 1));\r\n                GridPane.setHgrow(button, Priority.ALWAYS);\r\n                GridPane.setVgrow(button, Priority.ALWAYS); // cho phép button mở rộng theo chiều dọc\r\n                gridPane.getChildren().add(button);\r\n                ///////////////////////////////////Hung\r\n                apQuestion.getChildren().add(question);\r\n                listQuestion.add(question);\r\n\r\n                AnchorPane.setRightAnchor(question, 0.0);\r\n                AnchorPane.setLeftAnchor(question, 0.0);\r\n                AnchorPane.setTopAnchor(question, questionHeight);\r\n                button.setOnAction(event -> {\r\n                    scrollToNode(questionView_cr, question);\r\n                });\r\n                questionHeight += 10.0;\r\n                questionHeight += question.getPrefHeight();\r\n                if(question.getNotNullChoice() <= 1) {\r\n                    question.group.selectedToggleProperty().addListener(new ChangeListener<Toggle>() {\r\n                        @Override\r\n                        public void changed(ObservableValue<? extends Toggle> observableValue, Toggle toggle, Toggle t1) {\r\n                            question.questionStatus.setText(\"Answered\");\r\n                            listButton.get(question.position-1).setStyle(\"-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #C0C0C0 30%)\");\r\n                        }\r\n                    });\r\n                }else{\r\n                    for(int j = 0; j < question.listCheckBox.size(); j++){\r\n                        question.listCheckBox.get(j).selectedProperty().addListener(new ChangeListener<Boolean>() {\r\n                            @Override\r\n                            public void changed(ObservableValue<? extends Boolean> observableValue, Boolean aBoolean, Boolean t1) {\r\n                                if(t1){\r\n                                    question.boxChecked ++;\r\n                                    question.questionStatus.setText(\"Answered\");\r\n                                    listButton.get(question.position-1).setStyle(\"-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #C0C0C0 30%)\");\r\n                                }else{\r\n                                    question.boxChecked--;\r\n                                    if(question.boxChecked == 0){\r\n                                        question.questionStatus.setText(\"Not yet answered\");\r\n                                        listButton.get(question.position-1).setStyle(\"-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #FFFFFF 30%)\");\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n            quizName = quizChosen;\r\n            LocalDateTime localDateTime = LocalDateTime.now();\r\n            ResultSet rs1 = db.getData(\"select * from dbo.Quiz where quizName = N'\" + quizName + \"'\");\r\n            LocalDateTime openTime;\r\n            LocalDateTime closeTime;\r\n\r\n            try {\r\n                if (rs1.next()) {\r\n                    openTime = rs1.getTimestamp(\"openTime\").toLocalDateTime();\r\n                    closeTime = rs1.getTimestamp(\"closeTime\").toLocalDateTime();\r\n                    if (localDateTime.isAfter(openTime) && localDateTime.isBefore(closeTime)) {\r\n                        timerAction(rs1.getInt(\"timeLimit\"));\r\n                    }\r\n                }\r\n            } catch (SQLException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            hlFinish.setOnMouseClicked(mouseEvent -> {\r\n                stopTimer();\r\n                finishTime = LocalDateTime.now();\r\n                double marks = 0;\r\n                for(int k = 0; k < listQuestion.size(); k++){\r\n                    double questionMark = 0;\r\n                    if(listQuestion.get(k).getNotNullChoice() <= 1){\r\n                        String correctAnswer = \"\";\r\n                        for(int j = 0; j < listQuestion.get(k).listRadioButton.size(); j++){\r\n                            if(listQuestion.get(k).listRadioButton.get(j).isSelected()){\r\n                                questionMark += listQuestion.get(k).question.getQuestionMark() * listQuestion.get(k).listChoice.get(j).getChoiceGrade();\r\n                            }\r\n                            if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() == 1){\r\n                                correctAnswer = String.valueOf((char) (j+65));\r\n                            }\r\n                        }\r\n                        marks += questionMark;\r\n                        if(questionMark == 0){\r\n                            result.add(new AnchorPaneFinish(listQuestion.get(k), \"The correct answer is: \" + correctAnswer));\r\n                        }else{\r\n                            result.add(new AnchorPaneFinish(listQuestion.get(k), \"Correct!\"));\r\n                        }\r\n                    }else{\r\n                        String correctAnswer = \"\";\r\n                        boolean isHaveMark = true;\r\n                        for(int j = 0; j < listQuestion.get(k).listCheckBox.size(); j++){\r\n                            if(listQuestion.get(k).listCheckBox.get(j).isSelected()){\r\n                                if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() == 0){\r\n                                    isHaveMark = false;\r\n                                }\r\n                                questionMark += listQuestion.get(k).question.getQuestionMark() * listQuestion.get(k).listChoice.get(j).getChoiceGrade();\r\n                            }\r\n                            if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() > 0){\r\n                                correctAnswer += String.valueOf((char) (j+65)) + \" \";\r\n                            }\r\n                        }\r\n                        if(isHaveMark == false){\r\n                            questionMark = 0;\r\n                        }\r\n                        marks += questionMark;\r\n                        if(questionMark == 1){\r\n                            result.add(new AnchorPaneFinish(listQuestion.get(k), \"Correct!\"));\r\n                        }else{\r\n                            result.add(new AnchorPaneFinish(listQuestion.get(k), \"The correct answer is: \" + correctAnswer));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                try {\r\n                    int rowUpdated = db.updateQuizMark(marks, quizChosen);\r\n                    boolean rowInserted = db.insertIntoHistory(quizChosen, marks, finishTime);\r\n\r\n                    Hyperlink result_hl=new Hyperlink(\" / \"+\"Preview Result\");\r\n                    BreadCrumb.changeBreadCrumb(breadCrumb,level,result_hl);\r\n                    BreadCrumb.addBreadCrumb(breadCrumb,level,3,result_hl);\r\n                    Stage stage = (Stage) ((Node) mouseEvent.getSource()).getScene().getWindow();\r\n                    double currentWidth = stage.getScene().getWidth();\r\n                    double currentHeight = stage.getScene().getHeight();\r\n                    FXMLLoader loader = new FXMLLoader();\r\n                    loader.setLocation(this.getClass().getResource(\"/com/example/baitaplonoop/GUI74.fxml\"));\r\n                    Parent parent = loader.load();\r\n                    Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n                    GUI74Controller controller = loader.getController();\r\n                    controller.setUpScene(result, (double) listQuestion.size(), marks);\r\n                    stage.setScene(scene);\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            });\r\n            timerLabel.textProperty().addListener((observableValue, s, t1) -> {\r\n                if(t1.equals(\"Time left 00:00:00\")){\r\n                    stopTimer();\r\n                    finishTime = LocalDateTime.now();\r\n                    double marks = 0;\r\n                    for(int k = 0; k < listQuestion.size(); k++){\r\n                        double questionMark = 0;\r\n                        if(listQuestion.get(k).getNotNullChoice() <= 1){\r\n                            String correctAnswer = \"\";\r\n                            for(int j = 0; j < listQuestion.get(k).listRadioButton.size(); j++){\r\n                                if(listQuestion.get(k).listRadioButton.get(j).isSelected()){\r\n                                    questionMark += listQuestion.get(k).question.getQuestionMark() * listQuestion.get(k).listChoice.get(j).getChoiceGrade();\r\n                                }\r\n                                if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() == 1){\r\n                                    correctAnswer = String.valueOf((char) (j+65));\r\n                                }\r\n                            }\r\n                            marks += questionMark;\r\n                            if(questionMark == 0){\r\n                                result.add(new AnchorPaneFinish(listQuestion.get(k), \"The correct answer is: \" + correctAnswer));\r\n                            }else{\r\n                                result.add(new AnchorPaneFinish(listQuestion.get(k), \"Correct!\"));\r\n                            }\r\n                        }else{\r\n                            String correctAnswer = \"\";\r\n                            boolean isHaveMark = true;\r\n                            for(int j = 0; j < listQuestion.get(k).listCheckBox.size(); j++){\r\n                                if(listQuestion.get(k).listCheckBox.get(j).isSelected()){\r\n                                    if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() == 0){\r\n                                        isHaveMark = false;\r\n                                    }\r\n                                    questionMark += listQuestion.get(k).question.getQuestionMark() * listQuestion.get(k).listChoice.get(j).getChoiceGrade();\r\n                                }\r\n                                if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() > 0){\r\n                                    correctAnswer += String.valueOf((char) (j+65)) + \" \";\r\n                                }\r\n                            }\r\n                            if(isHaveMark == false){\r\n                                questionMark = 0;\r\n                            }\r\n                            marks += questionMark;\r\n                            if(questionMark == 1){\r\n                                result.add(new AnchorPaneFinish(listQuestion.get(k), \"Correct!\"));\r\n                            }else{\r\n                                result.add(new AnchorPaneFinish(listQuestion.get(k), \"The correct answer is: \" + correctAnswer));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    try {\r\n                        int rowUpdated = db.updateQuizMark(marks, quizChosen);\r\n                        boolean rowInserted = db.insertIntoHistory(quizChosen, marks, finishTime);\r\n                        Hyperlink result_hl=new Hyperlink(\" / \"+\"Preview Result\");\r\n                        BreadCrumb.changeBreadCrumb(breadCrumb,level,result_hl);\r\n                        BreadCrumb.addBreadCrumb(breadCrumb,level,3,result_hl);\r\n                        Stage stage = (Stage) timerLabel.getScene().getWindow();\r\n                        double currentWidth = stage.getScene().getWidth();\r\n                        double currentHeight = stage.getScene().getHeight();\r\n                        FXMLLoader loader = new FXMLLoader();\r\n                        loader.setLocation(this.getClass().getResource(\"/com/example/baitaplonoop/GUI74.fxml\"));\r\n                        Parent parent = loader.load();\r\n                        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n                        GUI74Controller controller = loader.getController();\r\n                        controller.setUpScene(result, (double) listQuestion.size(), marks);\r\n                        stage.setScene(scene);\r\n                    } catch (IOException e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n                }\r\n            });\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java b/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java
--- a/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java	(date 1688193508099)
@@ -6,8 +6,6 @@
 import com.example.baitaplonoop.util.BreadCrumb;
 import javafx.animation.KeyFrame;
 import javafx.animation.Timeline;
-import javafx.beans.value.ChangeListener;
-import javafx.beans.value.ObservableValue;
 import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
 import javafx.fxml.Initializable;
@@ -40,7 +38,6 @@
     private ScrollPane scrollPane;
     @FXML
     private Label timerLabel;
-    private String quizName;
     public AnchorPane QuestionOverview_ap;
     @FXML
     private AnchorPane apQuestion;
@@ -77,10 +74,10 @@
     private void timerAction(int a) {
         seconds = a * 60;
         String hours;
-        if (a / 60 < 10) hours = "0" + Integer.toString(a / 60);
+        if (a / 60 < 10) hours = "0" + a / 60;
         else hours = Integer.toString(a / 60);
         String minutes;
-        if (a % 60 < 10) minutes = "0" + Integer.toString(a % 60);
+        if (a % 60 < 10) minutes = "0" + a % 60;
         else minutes = Integer.toString(a % 60);
         timerLabel.setText("Time left " + hours + ":" + minutes + ":00");
         timeline = new Timeline(
@@ -139,9 +136,9 @@
                         new BorderWidths(2)))              // Độ dày
 );
                 button.setStyle("-fx-background-color: linear-gradient(to bottom, #FFFFFF 100%, #C0C0C0 00%)");
-                if (0 <= i && i < 9) button.setText("0" + String.valueOf(i + 1));
+                if (0 <= i && i < 9) button.setText("0" + (i + 1));
                 else button.setText(String.valueOf(i + 1));
-                button.setId("question" + String.valueOf(i + 1));
+                button.setId("question" + (i + 1));
                 listButton.add(button);
                 GridPane.setConstraints(button, i % 5, i / 5);
                 GridPane.setMargin(button, new Insets(2, 1, 2, 1));
@@ -155,34 +152,26 @@
                 AnchorPane.setRightAnchor(question, 0.0);
                 AnchorPane.setLeftAnchor(question, 0.0);
                 AnchorPane.setTopAnchor(question, questionHeight);
-                button.setOnAction(event -> {
-                    scrollToNode(questionView_cr, question);
-                });
+                button.setOnAction(event -> scrollToNode(questionView_cr, question));
                 questionHeight += 10.0;
                 questionHeight += question.getPrefHeight();
                 if(question.getNotNullChoice() <= 1) {
-                    question.group.selectedToggleProperty().addListener(new ChangeListener<Toggle>() {
-                        @Override
-                        public void changed(ObservableValue<? extends Toggle> observableValue, Toggle toggle, Toggle t1) {
-                            question.questionStatus.setText("Answered");
-                            listButton.get(question.position-1).setStyle("-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #C0C0C0 30%)");
-                        }
+                    question.group.selectedToggleProperty().addListener((observableValue, toggle, t1) -> {
+                        question.questionStatus.setText("Answered");
+                        listButton.get(question.position-1).setStyle("-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #C0C0C0 30%)");
                     });
                 }else{
                     for(int j = 0; j < question.listCheckBox.size(); j++){
-                        question.listCheckBox.get(j).selectedProperty().addListener(new ChangeListener<Boolean>() {
-                            @Override
-                            public void changed(ObservableValue<? extends Boolean> observableValue, Boolean aBoolean, Boolean t1) {
-                                if(t1){
-                                    question.boxChecked ++;
-                                    question.questionStatus.setText("Answered");
-                                    listButton.get(question.position-1).setStyle("-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #C0C0C0 30%)");
-                                }else{
-                                    question.boxChecked--;
-                                    if(question.boxChecked == 0){
-                                        question.questionStatus.setText("Not yet answered");
-                                        listButton.get(question.position-1).setStyle("-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #FFFFFF 30%)");
-                                    }
+                        question.listCheckBox.get(j).selectedProperty().addListener((observableValue, aBoolean, t1) -> {
+                            if(t1){
+                                question.boxChecked ++;
+                                question.questionStatus.setText("Answered");
+                                listButton.get(question.position-1).setStyle("-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #C0C0C0 30%)");
+                            }else{
+                                question.boxChecked--;
+                                if(question.boxChecked == 0){
+                                    question.questionStatus.setText("Not yet answered");
+                                    listButton.get(question.position-1).setStyle("-fx-background-color: linear-gradient(to bottom, #FFFFFF 70%, #FFFFFF 30%)");
                                 }
                             }
                         });
@@ -190,7 +179,7 @@
                 }
                 i++;
             }
-            quizName = quizChosen;
+            String quizName = quizChosen;
             LocalDateTime localDateTime = LocalDateTime.now();
             ResultSet rs1 = db.getData("select * from dbo.Quiz where quizName = N'" + quizName + "'");
             LocalDateTime openTime;
@@ -211,53 +200,53 @@
                 stopTimer();
                 finishTime = LocalDateTime.now();
                 double marks = 0;
-                for(int k = 0; k < listQuestion.size(); k++){
+                for (AnchorPaneGUI7 anchorPaneGUI7 : listQuestion) {
                     double questionMark = 0;
-                    if(listQuestion.get(k).getNotNullChoice() <= 1){
+                    if (anchorPaneGUI7.getNotNullChoice() <= 1) {
                         String correctAnswer = "";
-                        for(int j = 0; j < listQuestion.get(k).listRadioButton.size(); j++){
-                            if(listQuestion.get(k).listRadioButton.get(j).isSelected()){
-                                questionMark += listQuestion.get(k).question.getQuestionMark() * listQuestion.get(k).listChoice.get(j).getChoiceGrade();
+                        for (int j = 0; j < anchorPaneGUI7.listRadioButton.size(); j++) {
+                            if (anchorPaneGUI7.listRadioButton.get(j).isSelected()) {
+                                questionMark += anchorPaneGUI7.question.getQuestionMark() * anchorPaneGUI7.listChoice.get(j).getChoiceGrade();
                             }
-                            if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() == 1){
-                                correctAnswer = String.valueOf((char) (j+65));
+                            if (anchorPaneGUI7.listChoice.get(j).getChoiceGrade() == 1) {
+                                correctAnswer = String.valueOf((char) (j + 65));
                             }
                         }
                         marks += questionMark;
-                        if(questionMark == 0){
-                            result.add(new AnchorPaneFinish(listQuestion.get(k), "The correct answer is: " + correctAnswer));
-                        }else{
-                            result.add(new AnchorPaneFinish(listQuestion.get(k), "Correct!"));
+                        if (questionMark == 0) {
+                            result.add(new AnchorPaneFinish(anchorPaneGUI7, "The correct answer is: " + correctAnswer));
+                        } else {
+                            result.add(new AnchorPaneFinish(anchorPaneGUI7, "Correct!"));
                         }
-                    }else{
-                        String correctAnswer = "";
+                    } else {
+                        StringBuilder correctAnswer = new StringBuilder();
                         boolean isHaveMark = true;
-                        for(int j = 0; j < listQuestion.get(k).listCheckBox.size(); j++){
-                            if(listQuestion.get(k).listCheckBox.get(j).isSelected()){
-                                if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() == 0){
+                        for (int j = 0; j < anchorPaneGUI7.listCheckBox.size(); j++) {
+                            if (anchorPaneGUI7.listCheckBox.get(j).isSelected()) {
+                                if (anchorPaneGUI7.listChoice.get(j).getChoiceGrade() == 0) {
                                     isHaveMark = false;
                                 }
-                                questionMark += listQuestion.get(k).question.getQuestionMark() * listQuestion.get(k).listChoice.get(j).getChoiceGrade();
+                                questionMark += anchorPaneGUI7.question.getQuestionMark() * anchorPaneGUI7.listChoice.get(j).getChoiceGrade();
                             }
-                            if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() > 0){
-                                correctAnswer += String.valueOf((char) (j+65)) + " ";
+                            if (anchorPaneGUI7.listChoice.get(j).getChoiceGrade() > 0) {
+                                correctAnswer.append((char) (j + 65)).append(" ");
                             }
                         }
-                        if(isHaveMark == false){
+                        if (!isHaveMark) {
                             questionMark = 0;
                         }
                         marks += questionMark;
-                        if(questionMark == 1){
-                            result.add(new AnchorPaneFinish(listQuestion.get(k), "Correct!"));
-                        }else{
-                            result.add(new AnchorPaneFinish(listQuestion.get(k), "The correct answer is: " + correctAnswer));
+                        if (questionMark == 1) {
+                            result.add(new AnchorPaneFinish(anchorPaneGUI7, "Correct!"));
+                        } else {
+                            result.add(new AnchorPaneFinish(anchorPaneGUI7, "The correct answer is: " + correctAnswer));
                         }
                     }
                 }
 
                 try {
-                    int rowUpdated = db.updateQuizMark(marks, quizChosen);
-                    boolean rowInserted = db.insertIntoHistory(quizChosen, marks, finishTime);
+                    db.updateQuizMark(marks, quizChosen);
+                    db.insertIntoHistory(quizChosen, marks, finishTime);
 
                     Hyperlink result_hl=new Hyperlink(" / "+"Preview Result");
                     BreadCrumb.changeBreadCrumb(breadCrumb,level,result_hl);
@@ -270,7 +259,7 @@
                     Parent parent = loader.load();
                     Scene scene = new Scene(parent, currentWidth, currentHeight);
                     GUI74Controller controller = loader.getController();
-                    controller.setUpScene(result, (double) listQuestion.size(), marks);
+                    controller.setUpScene(result, listQuestion.size(), marks);
                     stage.setScene(scene);
                 } catch (IOException e) {
                     throw new RuntimeException(e);
@@ -281,53 +270,53 @@
                     stopTimer();
                     finishTime = LocalDateTime.now();
                     double marks = 0;
-                    for(int k = 0; k < listQuestion.size(); k++){
+                    for (AnchorPaneGUI7 anchorPaneGUI7 : listQuestion) {
                         double questionMark = 0;
-                        if(listQuestion.get(k).getNotNullChoice() <= 1){
+                        if (anchorPaneGUI7.getNotNullChoice() <= 1) {
                             String correctAnswer = "";
-                            for(int j = 0; j < listQuestion.get(k).listRadioButton.size(); j++){
-                                if(listQuestion.get(k).listRadioButton.get(j).isSelected()){
-                                    questionMark += listQuestion.get(k).question.getQuestionMark() * listQuestion.get(k).listChoice.get(j).getChoiceGrade();
+                            for (int j = 0; j < anchorPaneGUI7.listRadioButton.size(); j++) {
+                                if (anchorPaneGUI7.listRadioButton.get(j).isSelected()) {
+                                    questionMark += anchorPaneGUI7.question.getQuestionMark() * anchorPaneGUI7.listChoice.get(j).getChoiceGrade();
                                 }
-                                if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() == 1){
-                                    correctAnswer = String.valueOf((char) (j+65));
+                                if (anchorPaneGUI7.listChoice.get(j).getChoiceGrade() == 1) {
+                                    correctAnswer = String.valueOf((char) (j + 65));
                                 }
                             }
                             marks += questionMark;
-                            if(questionMark == 0){
-                                result.add(new AnchorPaneFinish(listQuestion.get(k), "The correct answer is: " + correctAnswer));
-                            }else{
-                                result.add(new AnchorPaneFinish(listQuestion.get(k), "Correct!"));
+                            if (questionMark == 0) {
+                                result.add(new AnchorPaneFinish(anchorPaneGUI7, "The correct answer is: " + correctAnswer));
+                            } else {
+                                result.add(new AnchorPaneFinish(anchorPaneGUI7, "Correct!"));
                             }
-                        }else{
-                            String correctAnswer = "";
+                        } else {
+                            StringBuilder correctAnswer = new StringBuilder();
                             boolean isHaveMark = true;
-                            for(int j = 0; j < listQuestion.get(k).listCheckBox.size(); j++){
-                                if(listQuestion.get(k).listCheckBox.get(j).isSelected()){
-                                    if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() == 0){
+                            for (int j = 0; j < anchorPaneGUI7.listCheckBox.size(); j++) {
+                                if (anchorPaneGUI7.listCheckBox.get(j).isSelected()) {
+                                    if (anchorPaneGUI7.listChoice.get(j).getChoiceGrade() == 0) {
                                         isHaveMark = false;
                                     }
-                                    questionMark += listQuestion.get(k).question.getQuestionMark() * listQuestion.get(k).listChoice.get(j).getChoiceGrade();
+                                    questionMark += anchorPaneGUI7.question.getQuestionMark() * anchorPaneGUI7.listChoice.get(j).getChoiceGrade();
                                 }
-                                if(listQuestion.get(k).listChoice.get(j).getChoiceGrade() > 0){
-                                    correctAnswer += String.valueOf((char) (j+65)) + " ";
+                                if (anchorPaneGUI7.listChoice.get(j).getChoiceGrade() > 0) {
+                                    correctAnswer.append((char) (j + 65)).append(" ");
                                 }
                             }
-                            if(isHaveMark == false){
+                            if (!isHaveMark) {
                                 questionMark = 0;
                             }
                             marks += questionMark;
-                            if(questionMark == 1){
-                                result.add(new AnchorPaneFinish(listQuestion.get(k), "Correct!"));
-                            }else{
-                                result.add(new AnchorPaneFinish(listQuestion.get(k), "The correct answer is: " + correctAnswer));
+                            if (questionMark == 1) {
+                                result.add(new AnchorPaneFinish(anchorPaneGUI7, "Correct!"));
+                            } else {
+                                result.add(new AnchorPaneFinish(anchorPaneGUI7, "The correct answer is: " + correctAnswer));
                             }
                         }
                     }
 
                     try {
-                        int rowUpdated = db.updateQuizMark(marks, quizChosen);
-                        boolean rowInserted = db.insertIntoHistory(quizChosen, marks, finishTime);
+                        db.updateQuizMark(marks, quizChosen);
+                        db.insertIntoHistory(quizChosen, marks, finishTime);
                         Hyperlink result_hl=new Hyperlink(" / "+"Preview Result");
                         BreadCrumb.changeBreadCrumb(breadCrumb,level,result_hl);
                         BreadCrumb.addBreadCrumb(breadCrumb,level,3,result_hl);
@@ -339,7 +328,7 @@
                         Parent parent = loader.load();
                         Scene scene = new Scene(parent, currentWidth, currentHeight);
                         GUI74Controller controller = loader.getController();
-                        controller.setUpScene(result, (double) listQuestion.size(), marks);
+                        controller.setUpScene(result, listQuestion.size(), marks);
                         stage.setScene(scene);
                     } catch (IOException e) {
                         throw new RuntimeException(e);
Index: src/main/java/com/example/baitaplonoop/util/AnchorPaneGUI7.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.util;\r\n\r\n\r\nimport com.example.baitaplonoop.model.Choice;\r\nimport com.example.baitaplonoop.model.Question;\r\nimport com.example.baitaplonoop.sql.DBConnect;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.media.MediaView;\r\nimport javafx.scene.paint.Paint;\r\nimport javafx.scene.text.Text;\r\nimport javafx.scene.text.TextAlignment;\r\n\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\nimport static com.example.baitaplonoop.controller.GUI61Controller.isShuffle;\r\n\r\npublic class AnchorPaneGUI7 extends AnchorPane {\r\n    private AnchorPane questionPos;\r\n    private AnchorPane questionContent;\r\n    private Label questionNumber = new Label();\r\n    public Label questionStatus = new Label();\r\n    private Label questionMark = new Label(\"Mark out of 1.00\");\r\n    private Label questionFlag = new Label(\"Flag question\");\r\n    public ToggleGroup group = new ToggleGroup();\r\n    public ArrayList<RadioButton> listRadioButton = new ArrayList<>();\r\n    public ArrayList<CheckBox> listCheckBox = new ArrayList<>();\r\n    private Text questionText = new Text();\r\n    public Question question;\r\n    public ArrayList<Choice> listChoice = new ArrayList<>();\r\n    DBConnect db = new DBConnect();\r\n    private int notNullChoice = 0;\r\n    public int boxChecked = 0;\r\n    public int position;\r\n\r\n    public AnchorPaneGUI7(int position, String questionID) {\r\n        this.position = position;\r\n        setUpQuestionPos(position);\r\n\r\n        this.setPrefWidth(1000);\r\n        this.setPrefHeight(setUpQuestionContent(questionID));\r\n\r\n        this.getChildren().addAll(questionPos, questionContent);\r\n        AnchorPane.setTopAnchor(questionPos, 0.0);\r\n        AnchorPane.setLeftAnchor(questionPos, 0.0);\r\n        AnchorPane.setTopAnchor(questionContent, 0.0);\r\n        AnchorPane.setRightAnchor(questionContent, 5.0);\r\n        AnchorPane.setLeftAnchor(questionContent, 135.0);\r\n        AnchorPane.setBottomAnchor(questionContent, 10.0);\r\n    }\r\n\r\n    public void setUpQuestionPos(int position){\r\n        this.questionPos = new AnchorPane();\r\n        this.questionPos.setStyle(\"-fx-background-color: #FFFFFF\");\r\n        this.questionPos.setMinSize(130, 200);\r\n        this.questionNumber.setText(\"Question \" + position);\r\n        this.questionNumber.setTextFill(Paint.valueOf(\"#ea2d2d\"));\r\n        this.questionStatus.setText(\"Not yet answered\");\r\n        this.questionPos.getChildren().addAll(questionNumber, questionStatus, questionMark, questionFlag);\r\n        AnchorPane.setTopAnchor(questionNumber, 14.0);\r\n        AnchorPane.setLeftAnchor(questionNumber, 14.0);\r\n        AnchorPane.setTopAnchor(questionStatus, 64.0);\r\n        AnchorPane.setLeftAnchor(questionStatus, 14.0);\r\n        AnchorPane.setTopAnchor(questionMark, 114.0);\r\n        AnchorPane.setLeftAnchor(questionMark, 14.0);\r\n        AnchorPane.setTopAnchor(questionFlag, 164.0);\r\n        AnchorPane.setLeftAnchor(questionFlag, 14.0);\r\n    }\r\n    public double setUpQuestionContent(String questionID){\r\n        this.questionContent = new AnchorPane();\r\n        this.questionContent.setStyle(\"-fx-background-color: #F0FFFF\");\r\n        this.questionContent.setMinSize(850,240);\r\n        ResultSet rs = db.getData(\"Select * from Question where questionID = '\" + questionID + \"'\");\r\n        double choiceHeight = 0;\r\n        try {\r\n            if(rs.next()){\r\n                question = new Question(rs.getString(\"categoryID\"), rs.getString(\"questionID\"), rs.getString(\"questionText\"), rs.getString(\"questionMedia\"), Double.valueOf(rs.getString(\"questionMark\")));\r\n                this.questionText.setWrappingWidth(900);\r\n                this.questionText.setText(questionID + \": \" + rs.getString(\"questionText\"));\r\n                this.questionText.setTextAlignment(TextAlignment.JUSTIFY);\r\n                this.questionContent.getChildren().add(questionText);\r\n                AnchorPane.setTopAnchor(questionText, 14.0);\r\n                AnchorPane.setLeftAnchor(questionText, 14.0);\r\n                choiceHeight += questionText.getLayoutBounds().getHeight() + 14.0;\r\n                if(question.getQuestionMedia() != null){\r\n                    if(question.getQuestionMedia().substring(question.getQuestionMedia().length() - 3, question.getQuestionMedia().length()).equals(\"png\")){\r\n                        Image image = new Image(\"file:\" + question.getQuestionMedia());\r\n                        ImageView imageView = new ImageView();\r\n                        imageView.setImage(image);\r\n                        imageView.setFitWidth(450);\r\n                        imageView.setFitHeight(300);\r\n                        imageView.setPreserveRatio(true);\r\n                        this.questionContent.getChildren().add(imageView);\r\n                        choiceHeight += 14.0;\r\n                        AnchorPane.setTopAnchor(imageView, choiceHeight);\r\n                        AnchorPane.setLeftAnchor(imageView, 30.0);\r\n                        choiceHeight += 300;\r\n                    } else if (question.getQuestionMedia().substring(question.getQuestionMedia().length() - 3, question.getQuestionMedia().length()).equals(\"mp4\")) {\r\n                        MediaView mediaViewVideo = new MediaView();\r\n                        Path pathVideo = Paths.get(question.getQuestionMedia()).toAbsolutePath();\r\n                        Media media = new Media(pathVideo.toUri().toString());\r\n                        MediaPlayer mediaPlayer = new MediaPlayer(media);\r\n                        mediaViewVideo.setMediaPlayer(mediaPlayer);\r\n                        mediaViewVideo.setFitWidth(450);\r\n                        mediaViewVideo.setFitHeight(300);\r\n                        mediaViewVideo.setPreserveRatio(true);\r\n                        this.questionContent.getChildren().add(mediaViewVideo);\r\n                        choiceHeight += 14.0;\r\n                        AnchorPane.setTopAnchor(mediaViewVideo, choiceHeight);\r\n                        AnchorPane.setLeftAnchor(mediaViewVideo, 30.0);\r\n                        choiceHeight += 314;\r\n                        Button play = new Button(\"Play\");\r\n                        Button pause = new Button(\"Pause\");\r\n                        this.questionContent.getChildren().add(play);\r\n                        this.questionContent.getChildren().add(pause);\r\n                        play.setOnAction(e -> mediaPlayer.play());\r\n                        pause.setOnAction(e -> mediaPlayer.pause());\r\n                        AnchorPane.setTopAnchor(play, choiceHeight);\r\n                        AnchorPane.setLeftAnchor(play, 30.0);\r\n                        AnchorPane.setTopAnchor(pause, choiceHeight);\r\n                        AnchorPane.setLeftAnchor(pause, 100.0);\r\n                        choiceHeight += 40.0;\r\n                        Slider timeSlider = new Slider();\r\n                        mediaPlayer.currentTimeProperty().addListener((obs, oldTime, newTime) -> {\r\n                            if (!timeSlider.isValueChanging()) {\r\n                                timeSlider.setValue(newTime.toSeconds() / mediaPlayer.getTotalDuration().toSeconds() * 100);\r\n                            }\r\n                        });\r\n                        timeSlider.valueProperty().addListener((obs, oldValue, newValue) -> {\r\n                            if (timeSlider.isValueChanging()) {\r\n                                mediaPlayer.seek(mediaPlayer.getTotalDuration().multiply(newValue.doubleValue() / 100));\r\n                            }\r\n                        });\r\n                        this.questionContent.getChildren().add(timeSlider);\r\n                        AnchorPane.setTopAnchor(timeSlider, choiceHeight);\r\n                        AnchorPane.setLeftAnchor(timeSlider, 30.0);\r\n                        choiceHeight += 20.0;\r\n                    } else if (question.getQuestionMedia().substring(question.getQuestionMedia().length() - 3, question.getQuestionMedia().length()).equals(\"gif\")) {\r\n                        Image image = new Image(\"file:\" + question.getQuestionMedia());\r\n                        ImageView imageView = new ImageView();\r\n                        imageView.setImage(image);\r\n                        imageView.setFitWidth(450);\r\n                        imageView.setFitHeight(300);\r\n                        imageView.setPreserveRatio(true);\r\n                        this.questionContent.getChildren().add(imageView);\r\n                        choiceHeight += 14.0;\r\n                        AnchorPane.setTopAnchor(imageView, choiceHeight);\r\n                        AnchorPane.setLeftAnchor(imageView, 30.0);\r\n                        choiceHeight += 300;\r\n                    }\r\n                }\r\n                ResultSet rs1 = db.getData(\"Select * from Choice where questionID = '\" + questionID + \"'\");\r\n\r\n                while (rs1.next()){\r\n                    if(rs1.getString(\"choiceGrade\") == \"0\"){\r\n                        listChoice.add(new Choice(rs1.getString(\"choiceText\"), 0, rs1.getString(\"choiceID\"), rs1.getString(\"questionID\"), false, rs1.getString(\"choiceMedia\")));\r\n                    }else{\r\n                        notNullChoice ++;\r\n                        listChoice.add(new Choice(rs1.getString(\"choiceText\"), Double.valueOf(rs1.getString(\"choiceGrade\")), rs1.getString(\"choiceID\"), rs1.getString(\"questionID\"), false, rs1.getString(\"choiceMedia\")));\r\n                    }\r\n                }\r\n                if(isShuffle){\r\n                    Collections.shuffle(listChoice);\r\n                }\r\n                char c = 'A';\r\n                if(notNullChoice <= 1) {\r\n                    for (int i = 0; i < listChoice.size(); i++) {\r\n                        RadioButton radioButton = new RadioButton(String.valueOf(c) + \". \" + listChoice.get(i).getChoiceText());\r\n                        radioButton.setMaxWidth(485);\r\n                        radioButton.setWrapText(true);\r\n                        radioButton.setAlignment(Pos.TOP_CENTER);\r\n                        radioButton.setTextAlignment(TextAlignment.JUSTIFY);\r\n                        listRadioButton.add(radioButton);\r\n                        choiceHeight += 10.0;\r\n                        radioButton.setToggleGroup(group);\r\n                        this.questionContent.getChildren().add(radioButton);\r\n                        AnchorPane.setTopAnchor(radioButton, choiceHeight);\r\n                        AnchorPane.setLeftAnchor(radioButton, 30.0);\r\n                        Text text = new Text(radioButton.getText());\r\n                        text.setFont(radioButton.getFont());\r\n                        text.setWrappingWidth(465);\r\n                        choiceHeight += text.getLayoutBounds().getHeight();\r\n                        c++;\r\n                        if(listChoice.get(i).getChoiceMedia() != null){\r\n                            if(listChoice.get(i).getChoiceMedia().substring(listChoice.get(i).getChoiceMedia().length() - 3, listChoice.get(i).getChoiceMedia().length()).equals(\"png\")){\r\n                                Image image = new Image(\"file:\" + listChoice.get(i).getChoiceMedia());\r\n                                ImageView imageView = new ImageView();\r\n                                imageView.setImage(image);\r\n                                imageView.setFitWidth(450); // Thiết lập chiều rộng mới là 200\r\n                                imageView.setFitHeight(300); // Thiết lập chiều cao mới là 150\r\n                                imageView.setPreserveRatio(true); // Duy trì tỷ lệ khung hình ban đầu\r\n                                this.questionContent.getChildren().add(imageView);\r\n                                choiceHeight += 14.0;\r\n                                AnchorPane.setTopAnchor(imageView, choiceHeight);\r\n                                AnchorPane.setLeftAnchor(imageView, 30.0);\r\n                                choiceHeight += 300;\r\n                            }\r\n                        }\r\n                    }\r\n//                    AnchorPane.setBottomAnchor(listRadioButton.get(listRadioButton.size()-1), 10.0);\r\n                }\r\n                else {\r\n                    for (int i = 0; i < listChoice.size(); i++) {\r\n                        CheckBox checkBox = new CheckBox(String.valueOf(c) + \". \" + listChoice.get(i).getChoiceText());\r\n                        checkBox.setMaxWidth(485);\r\n                        checkBox.setWrapText(true);\r\n                        checkBox.setAlignment(Pos.TOP_CENTER);\r\n                        checkBox.setTextAlignment(TextAlignment.JUSTIFY);\r\n                        listCheckBox.add(checkBox);\r\n                        choiceHeight += 10.0;\r\n                        this.questionContent.getChildren().add(checkBox);\r\n                        AnchorPane.setTopAnchor(checkBox, choiceHeight);\r\n                        AnchorPane.setLeftAnchor(checkBox, 30.0);\r\n                        Text text = new Text(checkBox.getText());\r\n                        text.setFont(checkBox.getFont());\r\n                        text.setWrappingWidth(465);\r\n                        choiceHeight += text.getLayoutBounds().getHeight();\r\n                        c++;\r\n                        if(listChoice.get(i).getChoiceMedia() != null){\r\n                            if(listChoice.get(i).getChoiceMedia().substring(listChoice.get(i).getChoiceMedia().length() - 3, listChoice.get(i).getChoiceMedia().length()).equals(\"png\")){\r\n                                Image image = new Image(\"file:\" + listChoice.get(i).getChoiceMedia());\r\n                                ImageView imageView = new ImageView();\r\n                                imageView.setImage(image);\r\n                                imageView.setFitWidth(450); // Thiết lập chiều rộng mới là 200\r\n                                imageView.setFitHeight(300); // Thiết lập chiều cao mới là 150\r\n                                imageView.setPreserveRatio(true); // Duy trì tỷ lệ khung hình ban đầu\r\n                                this.questionContent.getChildren().add(imageView);\r\n                                choiceHeight += 14.0;\r\n                                AnchorPane.setTopAnchor(imageView, choiceHeight);\r\n                                AnchorPane.setLeftAnchor(imageView, 30.0);\r\n                                choiceHeight += 300;\r\n                            }\r\n                        }\r\n                    }\r\n//                    AnchorPane.setBottomAnchor(listCheckBox.get(listCheckBox.size()-1), 10.0);\r\n                }\r\n                choiceHeight += 20.0;\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return choiceHeight > this.questionContent.getMinHeight() ? choiceHeight : (this.questionContent.getMinHeight() + 10.0);\r\n    }\r\n\r\n    public int getNotNullChoice() {\r\n        return notNullChoice;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/util/AnchorPaneGUI7.java b/src/main/java/com/example/baitaplonoop/util/AnchorPaneGUI7.java
--- a/src/main/java/com/example/baitaplonoop/util/AnchorPaneGUI7.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/util/AnchorPaneGUI7.java	(date 1688188340803)
@@ -162,7 +162,7 @@
                 ResultSet rs1 = db.getData("Select * from Choice where questionID = '" + questionID + "'");
 
                 while (rs1.next()){
-                    if(rs1.getString("choiceGrade") == "0"){
+                    if(Float.parseFloat(rs1.getString("choiceGrade")) == 0){
                         listChoice.add(new Choice(rs1.getString("choiceText"), 0, rs1.getString("choiceID"), rs1.getString("questionID"), false, rs1.getString("choiceMedia")));
                     }else{
                         notNullChoice ++;
Index: src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\nimport com.example.baitaplonoop.util.BreadCrumb;\r\nimport com.example.baitaplonoop.util.ExportFilePDF;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.time.LocalDateTime;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.breadCrumb;\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.level;\r\nimport static com.example.baitaplonoop.controller.GUI61Controller.*;\r\n\r\npublic class GUI72Controller implements Initializable {\r\n    @FXML\r\n    Label lbWarning;\r\n    @FXML\r\n    Button btnStart;\r\n    @FXML\r\n    Button btnCancel;\r\n    @FXML\r\n    Button btnExport;\r\n    public static LocalDateTime openTime;\r\n\r\n    void setUpScene(){\r\n        lbWarning.setText(\"Your attempt will have a time limit of \" + timeLimit + \" mins. When you start, the timer will begin to count down and cannot be paused. You must finish your attempt before it expires. Are you sure to start quiz now?\");\r\n    }\r\n    void setEvent(){\r\n        btnCancel.setOnAction(event -> {\r\n            Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n            stage.close();\r\n        });\r\n        btnExport.setOnAction(event -> {\r\n            ExportFilePDF.exportPDFFile();\r\n            Stage stage = new Stage();\r\n            FXMLLoader fxmlLoader = new FXMLLoader();\r\n            fxmlLoader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/SetPasswordForPDFFile.fxml\"));\r\n            try {\r\n                Parent parent = fxmlLoader.load();\r\n                Scene scene = new Scene(parent);\r\n                stage.setScene(scene);\r\n                stage.show();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        btnStart.setOnAction(event -> {\r\n            Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n            stage.close();\r\n            if(isOpenable) {\r\n                openTime = LocalDateTime.now();\r\n                Hyperlink openQuiz_hl=new Hyperlink(\" / \"+\"Preview\");\r\n                BreadCrumb.addBreadCrumb(breadCrumb,level,3,openQuiz_hl);\r\n                Stage oldstage = (Stage) ((Node) StartEvent.getSource()).getScene().getWindow();\r\n                double currentWidth = oldstage.getScene().getWidth();\r\n                double currentHeight = oldstage.getScene().getHeight();\r\n                FXMLLoader fxmlLoader = new FXMLLoader();\r\n                fxmlLoader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/GUI73.fxml\"));\r\n                Parent parent = null;\r\n                try {\r\n                    parent = fxmlLoader.load();\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n                oldstage.setScene(scene);\r\n            }else{\r\n                Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n                alert.setHeaderText(\"Warning\");\r\n                alert.setContentText(\"This quiz isn't available\");\r\n                alert.show();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        setUpScene();\r\n        setEvent();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java b/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java
--- a/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java	(date 1688192769826)
@@ -65,7 +65,7 @@
                 double currentHeight = oldstage.getScene().getHeight();
                 FXMLLoader fxmlLoader = new FXMLLoader();
                 fxmlLoader.setLocation(getClass().getResource("/com/example/baitaplonoop/GUI73.fxml"));
-                Parent parent = null;
+                Parent parent;
                 try {
                     parent = fxmlLoader.load();
                 } catch (IOException e) {
Index: src/main/java/com/example/baitaplonoop/util/ChangeScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.util;\r\n\r\nimport com.example.baitaplonoop.controller.GUI11Controller;\r\nimport com.example.baitaplonoop.controller.GUI32Controller;\r\nimport com.example.baitaplonoop.controller.GUI62Controller;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.Tab;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Pair;\r\n\r\nimport java.io.IOException;\r\n\r\nimport static com.example.baitaplonoop.controller.GUI11PopUpController.currentHeight;\r\nimport static com.example.baitaplonoop.controller.GUI11PopUpController.currentWidth;\r\n\r\npublic class ChangeScene {\r\n\r\n    public static void GUI32AddQuestion(Initializable controller, ActionEvent event, String categoryName, String questionID, String questionText, String questionMedia, String choiceText1, String choiceGrade1, String choiceMedia1, String choiceText2, String choiceGrade2, String choiceMedia2, String choiceText3, String choiceGrade3, String choiceMedia3, String choiceText4, String choiceGrade4, String choiceMedia4, String choiceText5, String choiceGrade5, String choiceMedia5, String choiceText6, String choiceGrade6, String choiceMedia6){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        AnchorPane gui32AddQuestion = gui11Controller.addQuestion_ap;\r\n        AnchorPane editQuestion_ap = (AnchorPane) gui32AddQuestion.lookup(\"#addQuestion_ap\");\r\n        FXMLLoader loader2 = new FXMLLoader(ChangeScene.class.getResource(\"/com/example/baitaplonoop/GUI32AddQuestion.fxml\"));\r\n        Parent root2;\r\n        try {\r\n            root2 = loader2.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        GUI32Controller controller32 = loader2.getController();\r\n        controller32.editingQuestionChoice(categoryName, questionID, questionText, questionMedia, choiceText1, choiceGrade1, choiceMedia1, choiceText2, choiceGrade2, choiceMedia2, choiceText3, choiceGrade3, choiceMedia3, choiceText4, choiceGrade4, choiceMedia4, choiceText5, choiceGrade5, choiceMedia5, choiceText6, choiceGrade6, choiceMedia6);\r\n        gui11Controller.addQuestion_ap.setVisible(true);\r\n        editQuestion_ap.getChildren().setAll(root2);\r\n        stage.setScene(scene);\r\n    }\r\n\r\n    public static void showGUI32(String string) {\r\n        try {\r\n            // Tạo một đối tượng GUI32Controller\r\n            GUI32Controller gui32Controller = new GUI32Controller();\r\n            // Tạo một FXMLLoader cho GUI11.fxml\r\n            FXMLLoader loader = new FXMLLoader(ChangeScene.class.getResource(\"GUInew.fxml\"));\r\n            // Đặt controllerFactory cho loader để trả về gui32Controller khi cần\r\n            loader.setControllerFactory(c -> {\r\n                if (c == GUI32Controller.class) {\r\n                    return gui32Controller;\r\n                } else {\r\n                    // Cố gắng tạo một controller mặc định cho các class khác\r\n                    try {\r\n                        return c.newInstance();\r\n                    } catch (Exception e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n                }\r\n            });\r\n            // Load GUI11.fxml và lấy root node là anchorpane gui11\r\n            AnchorPane gui11 = loader.load();\r\n            // Lấy controller của GUI11.fxml là GUI11Controller\r\n            GUI11Controller gui11Controller = loader.getController();\r\n            gui11Controller.tabPane.setVisible(true);\r\n\r\n            // Gọi phương thức setText của it_lb để thay đổi nội dung của label\r\n            //gui32Controller.it_lb.setText(string);\r\n            gui32Controller.questionLabel_lb.setText(string);\r\n            // Tạo một scene mới với root node là gui11\r\n            Scene scene = new Scene(gui11);\r\n            // Tạo một stage mới và đặt scene cho nó\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            // Hiển thị stage lên\r\n            //stage.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void changeSceneUsingMouseEvent(Initializable controller, String path, MouseEvent event){\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent);\r\n        stage.setScene(scene);\r\n    }\r\n    public static void changeSceneUsingActionEvent(Initializable controller, String path, ActionEvent event){\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent = null;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent);\r\n        stage.setScene(scene);\r\n    }\r\n    public static void GUI21ListQuestion(Initializable controller, ActionEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        gui11Controller.tabPane.setVisible(true);\r\n        Tab tab = gui11Controller.questionTab_tp;\r\n        gui11Controller.tabPane.getSelectionModel().select(tab);\r\n        stage.setScene(scene);\r\n    }\r\n    public static void GUI33AddCategory(Initializable controller, MouseEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        gui11Controller.tabPane.setVisible(true);\r\n        Tab tab = gui11Controller.categoryTab_tp;\r\n        gui11Controller.tabPane.getSelectionModel().select(tab);\r\n        stage.setScene(scene);\r\n        System.out.println(scene.getHeight());\r\n        stage.setFullScreen(stage.isFullScreen());\r\n    }\r\n    public static void GUI34ImportFileQuestion(Initializable controller, ActionEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        gui11Controller.tabPane.setVisible(true);\r\n        Tab tab = gui11Controller.importTab_tp;\r\n        gui11Controller.tabPane.getSelectionModel().select(tab);\r\n        stage.setScene(scene);\r\n    }\r\n\r\n    public static void GUI35AddQuiz(Initializable controller, ActionEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        gui11Controller.addQuiz_ap.setVisible(true);\r\n        stage.setScene(scene);\r\n    }\r\n    public static void  mainSceneGUI11(Initializable controller, MouseEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent = null;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        stage.setScene(scene);\r\n    }\r\n    public static void GUI32AddQuestion(Initializable controller, ActionEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        gui11Controller.addQuestion_ap.setVisible(true);\r\n        stage.setScene(scene);\r\n    }\r\n    public static void GUI61PreviewQuiz(Initializable controller, MouseEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        gui11Controller.GUI61_ap.setVisible(true);\r\n        stage.setScene(scene);\r\n    }\r\n    public static void GUI62ShowQuestionChosen(Initializable controller, MouseEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        gui11Controller.GUI62_ap.setVisible(true);\r\n        stage.setScene(scene);\r\n    }\r\n\r\n    public static void GUI63(Initializable controller, MouseEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        gui11Controller.GUI63_ap.setVisible(true);\r\n        stage.setScene(scene);\r\n    }\r\n    public static void GUI65(Initializable controller, MouseEvent event){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        gui11Controller.GUI65_ap.setVisible(true);\r\n        stage.setScene(scene);\r\n    }\r\n\r\n    public static void GUI62(Initializable controller, ActionEvent event, ObservableList<Pair<String,String>> choiceQuestion){\r\n        String path = \"/com/example/baitaplonoop/GUInew.fxml\";\r\n        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        currentWidth = stage.getScene().getWidth();\r\n        currentHeight = stage.getScene().getHeight();\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        fxmlLoader.setLocation(controller.getClass().getResource(path));\r\n        Parent parent;\r\n        try {\r\n            parent = fxmlLoader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n        GUI11Controller gui11Controller = fxmlLoader.getController();\r\n        AnchorPane gui62 = gui11Controller.GUI62_ap;\r\n        FXMLLoader loader2 = new FXMLLoader(ChangeScene.class.getResource(\"/com/example/baitaplonoop/GUI62.fxml\"));\r\n        Parent root2 = null;\r\n        try {\r\n            root2 = loader2.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        GUI62Controller controller62 = loader2.getController();\r\n        controller62.setChosenQuestions(choiceQuestion);\r\n        gui11Controller.GUI62_ap.setVisible(true);\r\n        gui11Controller.GUI62_ap.getChildren().setAll(root2);\r\n        stage.setScene(scene);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/util/ChangeScene.java b/src/main/java/com/example/baitaplonoop/util/ChangeScene.java
--- a/src/main/java/com/example/baitaplonoop/util/ChangeScene.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/util/ChangeScene.java	(date 1688193319142)
@@ -10,7 +10,6 @@
 import javafx.scene.Node;
 import javafx.scene.Parent;
 import javafx.scene.Scene;
-import javafx.scene.control.Label;
 import javafx.scene.control.Tab;
 import javafx.scene.input.MouseEvent;
 import javafx.scene.layout.AnchorPane;
@@ -27,6 +26,8 @@
     public static void GUI32AddQuestion(Initializable controller, ActionEvent event, String categoryName, String questionID, String questionText, String questionMedia, String choiceText1, String choiceGrade1, String choiceMedia1, String choiceText2, String choiceGrade2, String choiceMedia2, String choiceText3, String choiceGrade3, String choiceMedia3, String choiceText4, String choiceGrade4, String choiceMedia4, String choiceText5, String choiceGrade5, String choiceMedia5, String choiceText6, String choiceGrade6, String choiceMedia6){
         String path = "/com/example/baitaplonoop/GUInew.fxml";
         Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
+        currentWidth = stage.getScene().getWidth();
+        currentHeight = stage.getScene().getHeight();
         FXMLLoader fxmlLoader = new FXMLLoader();
         fxmlLoader.setLocation(controller.getClass().getResource(path));
         Parent parent;
@@ -35,7 +36,7 @@
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
-        Scene scene = new Scene(parent);
+        Scene scene = new Scene(parent, currentWidth, currentHeight);
         GUI11Controller gui11Controller = fxmlLoader.getController();
         AnchorPane gui32AddQuestion = gui11Controller.addQuestion_ap;
         AnchorPane editQuestion_ap = (AnchorPane) gui32AddQuestion.lookup("#addQuestion_ap");
@@ -52,73 +53,6 @@
         editQuestion_ap.getChildren().setAll(root2);
         stage.setScene(scene);
     }
-
-    public static void showGUI32(String string) {
-        try {
-            // Tạo một đối tượng GUI32Controller
-            GUI32Controller gui32Controller = new GUI32Controller();
-            // Tạo một FXMLLoader cho GUI11.fxml
-            FXMLLoader loader = new FXMLLoader(ChangeScene.class.getResource("GUInew.fxml"));
-            // Đặt controllerFactory cho loader để trả về gui32Controller khi cần
-            loader.setControllerFactory(c -> {
-                if (c == GUI32Controller.class) {
-                    return gui32Controller;
-                } else {
-                    // Cố gắng tạo một controller mặc định cho các class khác
-                    try {
-                        return c.newInstance();
-                    } catch (Exception e) {
-                        throw new RuntimeException(e);
-                    }
-                }
-            });
-            // Load GUI11.fxml và lấy root node là anchorpane gui11
-            AnchorPane gui11 = loader.load();
-            // Lấy controller của GUI11.fxml là GUI11Controller
-            GUI11Controller gui11Controller = loader.getController();
-            gui11Controller.tabPane.setVisible(true);
-
-            // Gọi phương thức setText của it_lb để thay đổi nội dung của label
-            //gui32Controller.it_lb.setText(string);
-            gui32Controller.questionLabel_lb.setText(string);
-            // Tạo một scene mới với root node là gui11
-            Scene scene = new Scene(gui11);
-            // Tạo một stage mới và đặt scene cho nó
-            Stage stage = new Stage();
-            stage.setScene(scene);
-            // Hiển thị stage lên
-            //stage.show();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-
-    public static void changeSceneUsingMouseEvent(Initializable controller, String path, MouseEvent event){
-        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
-        FXMLLoader fxmlLoader = new FXMLLoader();
-        fxmlLoader.setLocation(controller.getClass().getResource(path));
-        Parent parent;
-        try {
-            parent = fxmlLoader.load();
-        } catch (IOException e) {
-            throw new RuntimeException(e);
-        }
-        Scene scene = new Scene(parent);
-        stage.setScene(scene);
-    }
-    public static void changeSceneUsingActionEvent(Initializable controller, String path, ActionEvent event){
-        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
-        FXMLLoader fxmlLoader = new FXMLLoader();
-        fxmlLoader.setLocation(controller.getClass().getResource(path));
-        Parent parent = null;
-        try {
-            parent = fxmlLoader.load();
-        } catch (IOException e) {
-            throw new RuntimeException(e);
-        }
-        Scene scene = new Scene(parent);
-        stage.setScene(scene);
-    }
     public static void GUI21ListQuestion(Initializable controller, ActionEvent event){
         String path = "/com/example/baitaplonoop/GUInew.fxml";
         Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
@@ -208,14 +142,13 @@
         currentHeight = stage.getScene().getHeight();
         FXMLLoader fxmlLoader = new FXMLLoader();
         fxmlLoader.setLocation(controller.getClass().getResource(path));
-        Parent parent = null;
+        Parent parent;
         try {
             parent = fxmlLoader.load();
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
         Scene scene = new Scene(parent, currentWidth, currentHeight);
-        GUI11Controller gui11Controller = fxmlLoader.getController();
         stage.setScene(scene);
     }
     public static void GUI32AddQuestion(Initializable controller, ActionEvent event){
@@ -325,9 +258,8 @@
         }
         Scene scene = new Scene(parent, currentWidth, currentHeight);
         GUI11Controller gui11Controller = fxmlLoader.getController();
-        AnchorPane gui62 = gui11Controller.GUI62_ap;
         FXMLLoader loader2 = new FXMLLoader(ChangeScene.class.getResource("/com/example/baitaplonoop/GUI62.fxml"));
-        Parent root2 = null;
+        Parent root2;
         try {
             root2 = loader2.load();
         } catch (IOException e) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e99e4343-1934-4a34-858d-155e3f4e1670\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/AnchorPaneGUI7.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/AnchorPaneGUI7.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ImportFile.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ImportFile.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/Design/Style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/Design/Style.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI33AddCategory.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI33AddCategory.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI35AddingQuiz.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI35AddingQuiz.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUInew.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUInew.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JavaFXApplication\" />\r\n        <option value=\"JavaFXApplication\" />\r\n        <option value=\"CSS File\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Dat\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OQ6MePDlkzrfbaRYgtTZKnGXV0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Revamp&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\Project\\Java\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\Image\\Question\" />\r\n      <recent name=\"C:\\Users\\HOANGPHUC\\IdeaProjects\\OOP\\src\\main\\java\\com\\example\\baitaplonoop\\model\" />\r\n      <recent name=\"C:\\Users\\HOANGPHUC\\IdeaProjects\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\icon\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\CodeTest\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\Media\" />\r\n      <recent name=\"C:\\Users\\ASUS\\Desktop\\Github\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\icon\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.HelloApplication\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.Main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main (2)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.test\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Application.HelloApplication\" />\r\n      <item itemvalue=\"Application.main (1)\" />\r\n      <item itemvalue=\"Application.main (2)\" />\r\n      <item itemvalue=\"Application.main\" />\r\n      <item itemvalue=\"Application.test\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.test\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.main (2)\" />\r\n        <item itemvalue=\"Application.main (1)\" />\r\n        <item itemvalue=\"Application.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e99e4343-1934-4a34-858d-155e3f4e1670\" name=\"Changes\" comment=\"\" />\r\n      <created>1681480416050</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681480416050</updated>\r\n      <workItem from=\"1683383446033\" duration=\"277000\" />\r\n      <workItem from=\"1683398586586\" duration=\"1980000\" />\r\n      <workItem from=\"1683454805001\" duration=\"5451000\" />\r\n      <workItem from=\"1683468170394\" duration=\"10954000\" />\r\n      <workItem from=\"1683510360130\" duration=\"1484000\" />\r\n      <workItem from=\"1683511926552\" duration=\"1130000\" />\r\n      <workItem from=\"1683516948886\" duration=\"919000\" />\r\n      <workItem from=\"1683518011370\" duration=\"250000\" />\r\n      <workItem from=\"1683518291549\" duration=\"427000\" />\r\n      <workItem from=\"1683521666835\" duration=\"2913000\" />\r\n      <workItem from=\"1683538982523\" duration=\"6486000\" />\r\n      <workItem from=\"1683572165479\" duration=\"10000\" />\r\n      <workItem from=\"1683572410142\" duration=\"970000\" />\r\n      <workItem from=\"1683573395622\" duration=\"3473000\" />\r\n      <workItem from=\"1683577609966\" duration=\"2766000\" />\r\n      <workItem from=\"1683581477159\" duration=\"247000\" />\r\n      <workItem from=\"1683589851139\" duration=\"596000\" />\r\n      <workItem from=\"1685032475231\" duration=\"8436000\" />\r\n      <workItem from=\"1685045584496\" duration=\"515000\" />\r\n      <workItem from=\"1685047082923\" duration=\"24000\" />\r\n      <workItem from=\"1685058425839\" duration=\"653000\" />\r\n      <workItem from=\"1685078072978\" duration=\"1328000\" />\r\n      <workItem from=\"1685084634532\" duration=\"2047000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/.idea/workspace.xml	(date 1688193821067)
@@ -6,14 +6,17 @@
   <component name="ChangeListManager">
     <list default="true" id="e99e4343-1934-4a34-858d-155e3f4e1670" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/model/Category.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/model/Category.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/sql/DBConnect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/sql/DBConnect.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/AnchorPaneGUI7.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/AnchorPaneGUI7.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ImportFile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ImportFile.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/Design/Style.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/Design/Style.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI33AddCategory.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI33AddCategory.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI35AddingQuiz.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI35AddingQuiz.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUInew.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUInew.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\nimport com.itextpdf.text.DocumentException;\r\nimport com.itextpdf.text.pdf.PdfReader;\r\nimport com.itextpdf.text.pdf.PdfStamper;\r\nimport com.itextpdf.text.pdf.PdfWriter;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.PasswordField;\r\nimport javafx.stage.Stage;\r\n\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.nio.file.Files;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.quizChosen;\r\n\r\n\r\npublic class SetPasswordForPDFFile implements Initializable {\r\n    @FXML\r\n    PasswordField txtPassword;\r\n    @FXML\r\n    PasswordField txtRepeat;\r\n    @FXML\r\n    Button btnOK;\r\n    @FXML\r\n    Button btnCancel;\r\n    @FXML\r\n    Label lbAlert;\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        btnOK.setOnAction(event -> {\r\n            if(txtPassword.getText().trim().equals(\"\") || txtRepeat.getText().trim().equals(\"\")){\r\n                lbAlert.setText(\"You must fill all the fields\");\r\n            }else if(!txtPassword.getText().equals(txtRepeat.getText())){\r\n                lbAlert.setText(\"Repeat your password again!\");\r\n                txtRepeat.setText(\"\");\r\n            }else{\r\n                String hardPassword = txtPassword.getText();\r\n                byte[] hardPasswordByte = hardPassword.getBytes();\r\n\r\n                PdfReader reader = null;\r\n                try {\r\n                    File file = new File(\"./src/main/resources/com/example/baitaplonoop/pdf/\" + quizChosen + \".pdf\");\r\n                    byte[] bytes = Files.readAllBytes(file.toPath());\r\n                    reader = new PdfReader(bytes);\r\n                    PdfStamper stamp = new PdfStamper(reader, new FileOutputStream(file));\r\n                    stamp.setEncryption(hardPasswordByte, null, PdfWriter.ALLOW_COPY, PdfWriter.ENCRYPTION_AES_256);\r\n                    stamp.close();\r\n                    reader.close();\r\n                    Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n                    stage.close();\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                } catch (DocumentException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n\r\n            }\r\n        });\r\n        btnCancel.setOnAction(event -> {\r\n            Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n            stage.close();\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java b/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java
--- a/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java	(date 1688193820877)
@@ -47,7 +47,7 @@
                 String hardPassword = txtPassword.getText();
                 byte[] hardPasswordByte = hardPassword.getBytes();
 
-                PdfReader reader = null;
+                PdfReader reader;
                 try {
                     File file = new File("./src/main/resources/com/example/baitaplonoop/pdf/" + quizChosen + ".pdf");
                     byte[] bytes = Files.readAllBytes(file.toPath());
@@ -58,9 +58,7 @@
                     reader.close();
                     Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
                     stage.close();
-                } catch (IOException e) {
-                    throw new RuntimeException(e);
-                } catch (DocumentException e) {
+                } catch (IOException | DocumentException e) {
                     throw new RuntimeException(e);
                 }
 
Index: src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.controller;\r\n\r\nimport com.example.baitaplonoop.util.BreadCrumb;\r\nimport com.example.baitaplonoop.util.ChangeScene;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Hyperlink;\r\nimport javafx.scene.control.Tab;\r\nimport javafx.stage.Stage;\r\nimport org.apache.poi.hssf.record.cf.ColorGradientFormatting;\r\n\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static com.example.baitaplonoop.Main.currentHeight;\r\nimport static com.example.baitaplonoop.Main.currentWidth;\r\nimport static com.example.baitaplonoop.controller.GUI11Controller.*;\r\n\r\n\r\npublic class GUI11PopUpController implements Initializable{\r\n    @FXML\r\n    private Hyperlink hlQuestion;\r\n    @FXML\r\n    private Hyperlink hlCategory;\r\n    @FXML\r\n    private Hyperlink hlImport;\r\n    public static double currentWidth;\r\n    public static double currentHeight;\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        hlQuestion.setOnMouseClicked(mouseEvent -> {\r\n            Hyperlink question_hf=new Hyperlink(\" / \"+hlQuestion.getText());\r\n            question_hf.setOnAction(e -> {\r\n                BreadCrumb.changeBreadCrumb(breadCrumb,level,question_hf);\r\n                ChangeScene.GUI21ListQuestion(this,e);\r\n\r\n            });\r\n            BreadCrumb.addBreadCrumb(breadCrumb,level,1,question_hf);\r\n            Stage stage = (Stage) ((Node) mouseEvent.getSource()).getScene().getWindow();\r\n            stage.close();\r\n            Stage oldstage = (Stage) ((Node) settingEvent.getSource()).getScene().getWindow();\r\n            currentWidth = oldstage.getScene().getWidth();\r\n            currentHeight = oldstage.getScene().getHeight();\r\n            FXMLLoader fxmlLoader = new FXMLLoader();\r\n            fxmlLoader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/GUInew.fxml\"));\r\n            Parent parent;\r\n            try {\r\n                parent = fxmlLoader.load();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n            GUI11Controller gui11Controller = fxmlLoader.getController();\r\n            gui11Controller.tabPane.setVisible(true);\r\n            Tab tab = gui11Controller.questionTab_tp;\r\n            gui11Controller.tabPane.getSelectionModel().select(tab);\r\n            oldstage.setScene(scene);\r\n        });\r\n        hlCategory.setOnMouseClicked(mouseEvent -> {\r\n            Hyperlink category_hl=new Hyperlink(\" / \"+hlCategory.getText());\r\n            category_hl.setOnMouseClicked(mouseEvent1 -> {\r\n                ChangeScene.GUI33AddCategory(this,mouseEvent1);\r\n                BreadCrumb.changeBreadCrumb(breadCrumb,level,category_hl);\r\n            });\r\n            BreadCrumb.addBreadCrumb(breadCrumb,level,1,category_hl);\r\n\r\n            Stage stage = (Stage) ((Node) mouseEvent.getSource()).getScene().getWindow();\r\n            stage.close();\r\n            Stage oldstage = (Stage) ((Node) settingEvent.getSource()).getScene().getWindow();\r\n            currentWidth = oldstage.getScene().getWidth();\r\n            currentHeight = oldstage.getScene().getHeight();\r\n            FXMLLoader fxmlLoader = new FXMLLoader();\r\n            fxmlLoader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/GUInew.fxml\"));\r\n            Parent parent;\r\n            try {\r\n                parent = fxmlLoader.load();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n            GUI11Controller gui11Controller = fxmlLoader.getController();\r\n            gui11Controller.tabPane.setVisible(true);\r\n            Tab tab = gui11Controller.categoryTab_tp;\r\n            gui11Controller.tabPane.getSelectionModel().select(tab);\r\n            oldstage.setScene(scene);\r\n        });\r\n        hlImport.setOnMouseClicked(mouseEvent -> {\r\n            Hyperlink import_hf=new Hyperlink(\" / \"+hlImport.getText());\r\n            import_hf.setOnAction(e -> {\r\n                ChangeScene.GUI34ImportFileQuestion(this,e);\r\n                BreadCrumb.changeBreadCrumb(breadCrumb,level,import_hf);\r\n            });\r\n            BreadCrumb.addBreadCrumb(breadCrumb,level,1,import_hf);\r\n            Stage stage = (Stage) ((Node) mouseEvent.getSource()).getScene().getWindow();\r\n            stage.close();\r\n            Stage oldstage = (Stage) ((Node) settingEvent.getSource()).getScene().getWindow();\r\n            currentWidth = oldstage.getScene().getWidth();\r\n            currentHeight = oldstage.getScene().getHeight();\r\n            FXMLLoader fxmlLoader = new FXMLLoader();\r\n            fxmlLoader.setLocation(getClass().getResource(\"/com/example/baitaplonoop/GUInew.fxml\"));\r\n            Parent parent;\r\n            try {\r\n                parent = fxmlLoader.load();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            Scene scene = new Scene(parent, currentWidth, currentHeight);\r\n            GUI11Controller gui11Controller = fxmlLoader.getController();\r\n            gui11Controller.tabPane.setVisible(true);\r\n            Tab tab = gui11Controller.importTab_tp;\r\n            gui11Controller.tabPane.getSelectionModel().select(tab);\r\n            oldstage.setScene(scene);\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java b/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java
--- a/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java	(date 1688192769824)
@@ -11,15 +11,9 @@
 import javafx.scene.control.Hyperlink;
 import javafx.scene.control.Tab;
 import javafx.stage.Stage;
-import org.apache.poi.hssf.record.cf.ColorGradientFormatting;
-
-
 import java.io.IOException;
 import java.net.URL;
 import java.util.ResourceBundle;
-
-import static com.example.baitaplonoop.Main.currentHeight;
-import static com.example.baitaplonoop.Main.currentWidth;
 import static com.example.baitaplonoop.controller.GUI11Controller.*;
 
 
Index: src/main/java/com/example/baitaplonoop/model/Category.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.model;\r\n\r\npublic class Category {\r\n    private String parentID;\r\n    private String categoryName;\r\n    private String categoryID;\r\n    private String categoryInfo;\r\n\r\n    public Category() {\r\n    }\r\n\r\n    public Category(String parentID, String categoryName, String categoryID, String categoryInfo) {\r\n        this.parentID = parentID;\r\n        this.categoryName = categoryName;\r\n        this.categoryID = categoryID;\r\n        this.categoryInfo = categoryInfo;\r\n    }\r\n\r\n    public String getParentID() {\r\n        return parentID;\r\n    }\r\n\r\n    public void setParentID(String parentID) {\r\n        this.parentID = parentID;\r\n    }\r\n\r\n    public String getCategoryName() {\r\n        return categoryName;\r\n    }\r\n\r\n    public void setCategoryName(String categoryName) {\r\n        this.categoryName = categoryName;\r\n    }\r\n\r\n    public String getCategoryID() {\r\n        return categoryID;\r\n    }\r\n\r\n    public void setCategoryID(String categoryID) {\r\n        this.categoryID = categoryID;\r\n    }\r\n\r\n    public String getCategoryInfo() {\r\n        return categoryInfo;\r\n    }\r\n\r\n    public void setCategoryInfo(String categoryInfo) {\r\n        this.categoryInfo = categoryInfo;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/model/Category.java b/src/main/java/com/example/baitaplonoop/model/Category.java
--- a/src/main/java/com/example/baitaplonoop/model/Category.java	(revision 107fd6e6400be16c65830d77d261215e745f3b8c)
+++ b/src/main/java/com/example/baitaplonoop/model/Category.java	(date 1688193820884)
@@ -2,18 +2,14 @@
 
 public class Category {
     private String parentID;
-    private String categoryName;
     private String categoryID;
-    private String categoryInfo;
 
     public Category() {
     }
 
-    public Category(String parentID, String categoryName, String categoryID, String categoryInfo) {
+    public Category(String parentID, String categoryID) {
         this.parentID = parentID;
-        this.categoryName = categoryName;
         this.categoryID = categoryID;
-        this.categoryInfo = categoryInfo;
     }
 
     public String getParentID() {
@@ -23,15 +19,6 @@
     public void setParentID(String parentID) {
         this.parentID = parentID;
     }
-
-    public String getCategoryName() {
-        return categoryName;
-    }
-
-    public void setCategoryName(String categoryName) {
-        this.categoryName = categoryName;
-    }
-
     public String getCategoryID() {
         return categoryID;
     }
@@ -39,12 +26,4 @@
     public void setCategoryID(String categoryID) {
         this.categoryID = categoryID;
     }
-
-    public String getCategoryInfo() {
-        return categoryInfo;
-    }
-
-    public void setCategoryInfo(String categoryInfo) {
-        this.categoryInfo = categoryInfo;
-    }
 }
