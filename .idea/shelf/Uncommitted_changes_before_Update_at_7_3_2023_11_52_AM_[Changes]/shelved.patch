Index: src/main/java/com/example/baitaplonoop/util/CustomMedia.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.util;\r\n\r\nimport javafx.embed.swing.SwingFXUtils;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Slider;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.media.MediaView;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.util.Duration;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.net.URI;\r\nimport java.net.URISyntaxException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.nio.file.StandardCopyOption;\r\n\r\n// Can set the flag mediaPath in the GUI32 when edit ( not done)\r\npublic class CustomMedia {\r\n    public static String gifPathQuestion;\r\n\r\n    // Load Media in Database when input is String in path (useful in load media in Question Text)\r\n    public static void loadFile(String path, ImageView imageViewImage, ImageView imageViewGif, MediaView mediaViewVideo, AnchorPane mediaVideo_ap, Button playVideo, Button pause_btn, Slider timeSlider) {\r\n        if (path == null || path.isEmpty()) return;\r\n        int dotIndex = path.lastIndexOf(\".\");\r\n        if (dotIndex == -1) return;\r\n        String extension = path.substring(dotIndex);\r\n        if (extension.equalsIgnoreCase(\".png\")) {\r\n            Image image = new Image(\"file:\" + path);\r\n            imageViewImage.setImage(image);\r\n            imageViewImage.setVisible(true);\r\n            imageViewGif.setVisible(false);\r\n            mediaViewVideo.setVisible(false);\r\n        } else if (extension.equalsIgnoreCase(\".gif\")) {\r\n            Image gif = new Image(\"file:\" + path);\r\n            imageViewGif.setImage(gif);\r\n            imageViewGif.setVisible(true);\r\n            imageViewImage.setVisible(false);\r\n            mediaViewVideo.setVisible(false);\r\n        } else if (extension.equalsIgnoreCase(\".mp4\")) {\r\n            Path pathVideo = Paths.get(path);\r\n            pathVideo = pathVideo.toAbsolutePath();\r\n            Media media = new Media(pathVideo.toUri().toString());\r\n            MediaPlayer mediaPlayer = new MediaPlayer(media);\r\n            mediaViewVideo.setMediaPlayer(mediaPlayer);\r\n            mediaVideo_ap.setVisible(true);\r\n            imageViewImage.setVisible(false);\r\n            imageViewGif.setVisible(false);\r\n            setVideoPlay(mediaPlayer, timeSlider);\r\n            playVideo.setOnAction(e -> mediaPlayer.play());\r\n            pause_btn.setOnAction(e -> mediaPlayer.pause());\r\n        }\r\n    }\r\n\r\n    public static void setVideoPlay(MediaPlayer mediaPlayer, Slider timeSlider) {\r\n        mediaPlayer.currentTimeProperty().addListener((obs, oldTime, newTime) -> {\r\n            if (!timeSlider.isValueChanging()) {\r\n                timeSlider.setValue(newTime.toSeconds() / mediaPlayer.getTotalDuration().toSeconds() * 100);\r\n            }\r\n        });\r\n        timeSlider.valueProperty().addListener((obs, oldValue, newValue) -> {\r\n            if (timeSlider.isValueChanging()) {\r\n                mediaPlayer.seek(mediaPlayer.getTotalDuration().multiply(newValue.doubleValue() / 100));\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void loadImage(String path, ImageView imageView) {\r\n        if (path == null || path.isEmpty()) {\r\n            return;\r\n        }\r\n        try {\r\n            Image image = new Image(new FileInputStream(path));\r\n            imageView.setImage(image);\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void AddImageToImageView(ImageView imageView) {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.getExtensionFilters().addAll(\r\n                new FileChooser.ExtensionFilter(\"JPG files (*.jpg)\", \"*.jpg\"),\r\n                new FileChooser.ExtensionFilter(\"PNG files (*.png)\", \"*.png\")\r\n        );\r\n        File file = fileChooser.showOpenDialog(null);\r\n        if (file != null) {\r\n            String url1 = file.toURI().toString();\r\n            gifPathQuestion = url1;\r\n            Image image = new Image(url1);\r\n            imageView.setImage(image);\r\n        }\r\n    }\r\n\r\n    public static boolean CheckDuration(MediaView mediaView) {\r\n        MediaPlayer mediaPlayer = mediaView.getMediaPlayer();\r\n        Duration duration = mediaPlayer.getTotalDuration();\r\n        double seconds = duration.toSeconds();\r\n        //System.out.println(seconds);\r\n        return 1 <= seconds & seconds <= 10;\r\n    } // Check Duration Video in Question between 1s and 10s\r\n\r\n    public static String saveImage(ImageView imageView, String pathImage, String imageID) {\r\n        String questionMediaPath = null;\r\n        try {\r\n            File target = new File(pathImage + File.separator + imageID + \".png\");\r\n            BufferedImage toWrite = SwingFXUtils.fromFXImage(imageView.getImage(), null);\r\n            ImageIO.write(toWrite, \"png\", target);\r\n            questionMediaPath = pathImage + File.separator + imageID + \".png\";\r\n        } catch (Exception x) {\r\n            System.err.println(\"Failed to save image\");\r\n            x.printStackTrace();\r\n        }\r\n        return questionMediaPath;\r\n    }\r\n\r\n\r\n    public static String saveVideo(MediaView mediaView, String pathVideo, String questionID) {\r\n        String questionVideoPath = null;\r\n        if (CustomMedia.CheckDuration(mediaView)) {\r\n            try {\r\n                MediaPlayer mediaPlayer = mediaView.getMediaPlayer();\r\n                Media media = mediaPlayer.getMedia();\r\n                String source = media.getSource();\r\n                File sourceFile = new File(new URI(source));\r\n                File targetFile = new File(pathVideo + File.separator + questionID + \".mp4\");\r\n                Files.copy(sourceFile.toPath(), targetFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\r\n                questionVideoPath = pathVideo + File.separator + questionID + \".mp4\";\r\n            } catch (Exception e) {\r\n                System.err.println(\"Failed to save video\");\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        return questionVideoPath;\r\n    }\r\n\r\n    public static void AddGifToImageView(ImageView imageView) {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter(\"JPG files (*.gif)\", \"*.gif\"));\r\n        File file = fileChooser.showOpenDialog(null);\r\n        if (file != null) {\r\n            String url1 = file.toURI().toString();\r\n            Image image = new Image(url1);\r\n            imageView.setImage(image);\r\n            gifPathQuestion = url1;\r\n        }\r\n    }\r\n\r\n    public static String saveGif(String path1, String path2, String name) {\r\n//        File inputFile;\r\n//        try {\r\n//            inputFile = new File(new URI(path1));\r\n//        } catch (URISyntaxException e) {\r\n//            throw new RuntimeException(e);\r\n//        }\r\n//        File outputFile = new File(path2 + File.separator + name + \".gif\");\r\n//        System.out.println(path2 + File.separator + name + \".gif\");\r\n//        try {\r\n//            BufferedImage image = ImageIO.read(inputFile);\r\n//            ImageIO.write(image, \"gif\", outputFile);\r\n//        } catch (IOException e) {\r\n//            e.printStackTrace();\r\n//        }\r\n        copyFile(path1, path2 + File.separator + name + \".gif\");\r\n        return path2 + File.separator + name + \".gif\";\r\n    }\r\n\r\n    public static void copyFile(String path1, String path2) {\r\n\r\n        URI uri1 = null;\r\n        try {\r\n            uri1 = new URI(path1);\r\n        } catch (URISyntaxException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n        String projectPath = System.getProperty(\"user.dir\");\r\n        Path destPath = Paths.get(projectPath,path2);\r\n        try {\r\n            Files.copy(Path.of(uri1),destPath,StandardCopyOption.REPLACE_EXISTING);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/util/CustomMedia.java b/src/main/java/com/example/baitaplonoop/util/CustomMedia.java
--- a/src/main/java/com/example/baitaplonoop/util/CustomMedia.java	(revision ef6c0dc08bcf501aec970f54975b7604aee914e7)
+++ b/src/main/java/com/example/baitaplonoop/util/CustomMedia.java	(date 1688359179424)
@@ -103,11 +103,13 @@
     }
 
     public static boolean CheckDuration(MediaView mediaView) {
-        MediaPlayer mediaPlayer = mediaView.getMediaPlayer();
-        Duration duration = mediaPlayer.getTotalDuration();
-        double seconds = duration.toSeconds();
-        //System.out.println(seconds);
-        return 1 <= seconds & seconds <= 10;
+        if (mediaView.getMediaPlayer() != null) {
+            MediaPlayer mediaPlayer = mediaView.getMediaPlayer();
+            Duration duration = mediaPlayer.getTotalDuration();
+            double seconds = duration.toSeconds();
+            //System.out.println(seconds);
+            return 1 <= seconds & seconds <= 10;
+        } else return true;
     } // Check Duration Video in Question between 1s and 10s
 
     public static String saveImage(ImageView imageView, String pathImage, String imageID) {
@@ -157,20 +159,6 @@
     }
 
     public static String saveGif(String path1, String path2, String name) {
-//        File inputFile;
-//        try {
-//            inputFile = new File(new URI(path1));
-//        } catch (URISyntaxException e) {
-//            throw new RuntimeException(e);
-//        }
-//        File outputFile = new File(path2 + File.separator + name + ".gif");
-//        System.out.println(path2 + File.separator + name + ".gif");
-//        try {
-//            BufferedImage image = ImageIO.read(inputFile);
-//            ImageIO.write(image, "gif", outputFile);
-//        } catch (IOException e) {
-//            e.printStackTrace();
-//        }
         copyFile(path1, path2 + File.separator + name + ".gif");
         return path2 + File.separator + name + ".gif";
     }
@@ -185,9 +173,9 @@
         }
 
         String projectPath = System.getProperty("user.dir");
-        Path destPath = Paths.get(projectPath,path2);
+        Path destPath = Paths.get(projectPath, path2);
         try {
-            Files.copy(Path.of(uri1),destPath,StandardCopyOption.REPLACE_EXISTING);
+            Files.copy(Path.of(uri1), destPath, StandardCopyOption.REPLACE_EXISTING);
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e99e4343-1934-4a34-858d-155e3f4e1670\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI32Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI32Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI33Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI33Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/model/Category.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/model/Category.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/sql/DBConnect.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/sql/DBConnect.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/CustomMedia.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/CustomMedia.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI21.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI21.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI33AddCategory.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI33AddCategory.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI61.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI61.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/pdf/lập trình hướng đối tượng.pdf\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/pdf/lập trình hướng đối tượng.pdf\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JavaFXApplication\" />\r\n        <option value=\"JavaFXApplication\" />\r\n        <option value=\"CSS File\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Dat\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OQ6MePDlkzrfbaRYgtTZKnGXV0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Revamp&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\Project\\Java\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\Image\\Question\" />\r\n      <recent name=\"C:\\Users\\HOANGPHUC\\IdeaProjects\\OOP\\src\\main\\java\\com\\example\\baitaplonoop\\model\" />\r\n      <recent name=\"C:\\Users\\HOANGPHUC\\IdeaProjects\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\icon\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\CodeTest\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\Media\" />\r\n      <recent name=\"C:\\Users\\ASUS\\Desktop\\Github\\OOP\\src\\main\\resources\\com\\example\\baitaplonoop\\icon\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.HelloApplication\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.Main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main (2)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.main\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.baitaplonoop.test\" />\r\n      <module name=\"BaiTapLonOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.baitaplonoop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Application.HelloApplication\" />\r\n      <item itemvalue=\"Application.main (1)\" />\r\n      <item itemvalue=\"Application.main (2)\" />\r\n      <item itemvalue=\"Application.main\" />\r\n      <item itemvalue=\"Application.test\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.test\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.main (2)\" />\r\n        <item itemvalue=\"Application.main (1)\" />\r\n        <item itemvalue=\"Application.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e99e4343-1934-4a34-858d-155e3f4e1670\" name=\"Changes\" comment=\"\" />\r\n      <created>1681480416050</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681480416050</updated>\r\n      <workItem from=\"1683383446033\" duration=\"277000\" />\r\n      <workItem from=\"1683398586586\" duration=\"1980000\" />\r\n      <workItem from=\"1683454805001\" duration=\"5451000\" />\r\n      <workItem from=\"1683468170394\" duration=\"10954000\" />\r\n      <workItem from=\"1683510360130\" duration=\"1484000\" />\r\n      <workItem from=\"1683511926552\" duration=\"1130000\" />\r\n      <workItem from=\"1683516948886\" duration=\"919000\" />\r\n      <workItem from=\"1683518011370\" duration=\"250000\" />\r\n      <workItem from=\"1683518291549\" duration=\"427000\" />\r\n      <workItem from=\"1683521666835\" duration=\"2913000\" />\r\n      <workItem from=\"1683538982523\" duration=\"6486000\" />\r\n      <workItem from=\"1683572165479\" duration=\"10000\" />\r\n      <workItem from=\"1683572410142\" duration=\"970000\" />\r\n      <workItem from=\"1683573395622\" duration=\"3473000\" />\r\n      <workItem from=\"1683577609966\" duration=\"2766000\" />\r\n      <workItem from=\"1683581477159\" duration=\"247000\" />\r\n      <workItem from=\"1683589851139\" duration=\"596000\" />\r\n      <workItem from=\"1685032475231\" duration=\"8436000\" />\r\n      <workItem from=\"1685045584496\" duration=\"515000\" />\r\n      <workItem from=\"1685047082923\" duration=\"24000\" />\r\n      <workItem from=\"1685058425839\" duration=\"653000\" />\r\n      <workItem from=\"1685078072978\" duration=\"1328000\" />\r\n      <workItem from=\"1685084634532\" duration=\"2047000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ef6c0dc08bcf501aec970f54975b7604aee914e7)
+++ b/.idea/workspace.xml	(date 1688356887869)
@@ -5,24 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e99e4343-1934-4a34-858d-155e3f4e1670" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_13_2023_1_24_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_13_2023_1_24_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_5_2023_2_26_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_5_2023_2_26_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_13_2023_5_54_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_13_2023_5_54_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2023_1_29_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2023_1_29_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_9_2023_2_43_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_9_2023_2_43_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_7_1_2023_3_47_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_7_1_2023_3_47_PM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI11PopUpController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI32Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI32Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI33Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI33Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI34Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI62Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI72Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI73Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/GUI74Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/controller/SetPasswordForPDFFile.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/model/Category.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/model/Category.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/sql/DBConnect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/sql/DBConnect.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/ChangeScene.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/CustomMedia.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/baitaplonoop/util/CustomMedia.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI21.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI21.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI33AddCategory.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI33AddCategory.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI61.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/GUI61.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/pdf/lập trình hướng đối tượng.pdf" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/baitaplonoop/pdf/lập trình hướng đối tượng.pdf" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: src/main/java/com/example/baitaplonoop/sql/DBConnect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.baitaplonoop.sql;\r\n\r\nimport java.sql.*;\r\nimport java.time.LocalDateTime;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class DBConnect {\r\n    public Connection con;\r\n    public DBConnect() {\r\n        try {\r\n            Class.forName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\r\n            String url = \"jdbc:sqlserver://LAPTOP-5RN02RRR\\\\SQLEXPRESS:1433;databaseName=Exam_Management2;\"\r\n                    + \"encrypt=true;trustServerCertificate=true;sslProtocol=TLSv1.2\";\r\n            String username = \"sa\";\r\n            String password = \"123123\";\r\n            con = DriverManager.getConnection(url, username, password);\r\n        } catch (ClassNotFoundException | SQLException ex) {\r\n            Logger.getLogger(DBConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n    public ResultSet getData(String stringSQL) {\r\n        ResultSet rs = null;\r\n        try {\r\n            Statement state = con.createStatement();\r\n            rs = state.executeQuery(stringSQL);\r\n        } catch (SQLException ex) {\r\n            Logger.getLogger(DBConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n        return rs;\r\n    }\r\n    public int InsertQuestion(String[] stringSQL) {\r\n        int rowInserted;\r\n        String sql = \"INSERT INTO Question(categoryID, questionID, questionText, questionMark, questionMedia) values(?,?,?,?,?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setString(2, stringSQL[1]);\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            statement.setString(5, stringSQL[4]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n//    public int InsertQuestion(String[] stringSQL) {\r\n//        int rowInserted = 0;\r\n//        String sql = \"INSERT INTO Question(categoryID, questionID, questionText) values(?,?,?)\";\r\n//        PreparedStatement statement;\r\n//        try {\r\n//            statement = con.prepareStatement(sql);\r\n//            statement.setString(1, stringSQL[0]);\r\n//            statement.setString(2, stringSQL[1]);\r\n//            statement.setString(3, stringSQL[2]);\r\n//            rowInserted = statement.executeUpdate();\r\n//        } catch (SQLException e) {\r\n//            throw new RuntimeException(e);\r\n//        }\r\n//        return rowInserted;\r\n//    }\r\n    public int InsertChoice(String[] stringSQL) {\r\n        int rowInserted ;\r\n        String sql = \"INSERT INTO Choice(choiceText, choiceGrade, choiceID, questionID, isSelected, choiceMedia) values(?,?,?,?,?,?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setFloat(2, Float.parseFloat(stringSQL[1]));\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            statement.setString(5, stringSQL[4]);\r\n            statement.setString(6, stringSQL[5]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n    public int InsertQuestionInQuiz(String[] stringSQL) throws SQLException {\r\n        int rowInserted ;\r\n        String sql = \"insert into QuestionInQuiz(questionID,quizName,yourMark) values(?,?,?)\";\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, stringSQL[0]);\r\n        statement.setString(2, stringSQL[1]);\r\n        statement.setString(3, stringSQL[2]);\r\n        rowInserted = statement.executeUpdate();\r\n        return rowInserted;\r\n    }\r\n    public String FindCategoryID(String categoryName) throws SQLException {\r\n        String categoryID = null;\r\n        String sql = \"SELECT categoryID FROM Category WHERE categoryName = N'\" + categoryName + \"'\";\r\n        ResultSet result = getData(sql);\r\n        if (result.next()) {\r\n            categoryID = result.getString(\"categoryID\");\r\n        }\r\n        return categoryID;\r\n    }\r\n    public void InsertCategory(String[] stringSQL) {\r\n        int rowInserted;\r\n        String sql = \"INSERT INTO Category(parentID, categoryName, categoryID, categoryinfo) values (?, ?, ?, ?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setString(2, stringSQL[1]);\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n    }\r\n    public int AddNewQuiz(String[] stringSQL) {\r\n        int rowInserted = 0;\r\n        String sql = \"INSERT INTO Quiz(quizName, Descript, openTime, closeTime, timeLimit) values (?, ?, ?, ?, ?)\";\r\n        PreparedStatement statement;\r\n        try {\r\n            statement = con.prepareStatement(sql);\r\n            statement.setString(1, stringSQL[0]);\r\n            statement.setString(2, stringSQL[1]);\r\n            statement.setString(3, stringSQL[2]);\r\n            statement.setString(4, stringSQL[3]);\r\n            statement.setString(5, stringSQL[4]);\r\n            rowInserted = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return rowInserted;\r\n    }\r\n    public String[] FindQuestionInfo(String questionID) {\r\n        String[] questionInfo = null;\r\n        String sql = \"SELECT questionText,questionMedia FROM Question WHERE questionID = ?\";\r\n        try (\r\n                PreparedStatement statement = con.prepareStatement(sql);\r\n        ) {\r\n            statement.setString(1, questionID);\r\n            ResultSet rs = statement.executeQuery();\r\n            if (rs.next()) {\r\n                String questionText = rs.getNString(\"questionText\");\r\n                String questionMedia = rs.getString(\"questionMedia\");\r\n                questionInfo = new String[]{questionText, questionMedia};\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return questionInfo;\r\n    }\r\n    public String[] FindChoiceInfo(String choiceID) {\r\n        String[] choiceInfo = null;\r\n        String sql = \"SELECT choiceText, choiceGrade, choiceMedia FROM choice WHERE choiceID = ?\";\r\n        try (\r\n                PreparedStatement statement = con.prepareStatement(sql);\r\n        ) {\r\n            statement.setString(1, choiceID);\r\n            ResultSet rs = statement.executeQuery();\r\n            if (rs.next()) {\r\n                String choiceText = rs.getNString(\"choiceText\");\r\n                Float choiceGrade = rs.getFloat(\"choiceGrade\");\r\n                String choiceMedia = rs.getString(\"choiceMedia\");\r\n                choiceInfo = new String[]{choiceText, String.valueOf(choiceGrade), choiceMedia};\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return choiceInfo;\r\n    }\r\n    public void UpdateQuestion(String[] questionInfo) throws SQLException {\r\n        int rowInserted = 0;\r\n        String sql = \"MERGE Question AS target USING (VALUES (?,?,?,?,?)) \" +\r\n                \"AS source (categoryID, questionID, questionText, questionMark, questionMedia)  \" +\r\n                \"ON target.questionID = source.questionID  \" +\r\n                \"WHEN MATCHED THEN  UPDATE SET questionText = source.questionText,  \" +\r\n                \"categoryID = source.categoryID, questionMedia = source.questionMedia, questionMark = source.questionMark \" +\r\n                \"WHEN NOT MATCHED THEN  INSERT (questionID, questionText, categoryID, questionMark, questionMedia)  \" +\r\n                \"VALUES (source.questionID, source.questionText, source.categoryID,source.questionMark, source.questionMedia);\";\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, questionInfo[0]);\r\n        statement.setString(2, questionInfo[1]);\r\n        statement.setString(3, questionInfo[2]);\r\n        statement.setFloat(4, Float.parseFloat(questionInfo[3]));\r\n        statement.setString(5, questionInfo[4]);\r\n        rowInserted = statement.executeUpdate();\r\n\r\n    }\r\n    public void UpdateChoice(String[] choiceInfo) throws SQLException {\r\n        int rowInserted = 0;\r\n        String sql = \"MERGE Choice AS target USING (VALUES (?,?,?,?,?)) AS source (choiceText, choiceGrade, choiceID, questionID, choiceMedia)  ON target.choiceID = source.choiceID  WHEN MATCHED THEN  UPDATE SET choiceText = source.choiceText,  choiceGrade = source.choiceGrade, choiceID = source.choiceID,questionID = source.questionID, choiceMedia = source.choiceMedia  WHEN NOT MATCHED THEN  INSERT (choiceText, choiceGrade, choiceID, questionID, choiceMedia)  VALUES (source.choiceText, source.choiceGrade, source.choiceID, source.questionID, source.choiceMedia);\";\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, choiceInfo[0]);\r\n        statement.setFloat(2, Float.parseFloat(choiceInfo[1]));\r\n        statement.setString(3, choiceInfo[2]);\r\n        statement.setString(4, choiceInfo[3]);\r\n        statement.setString(5,  choiceInfo[4]);\r\n        rowInserted = statement.executeUpdate();\r\n\r\n    }\r\n    public void updateQuiz(boolean a, String quizName) throws  SQLException{\r\n        boolean result =false;\r\n        String sql=\"update Quiz set shuffle = ? where quizName = N'\"+quizName+\"'\";\r\n        PreparedStatement statement;\r\n        statement=con.prepareStatement(sql);\r\n        statement.setString(1,Boolean.toString(a));\r\n        result = statement.execute();\r\n    }\r\n    public boolean checkQuestionID(String questionID) throws SQLException {\r\n        boolean result = false;\r\n        String sql = \"SELECT * FROM Question WHERE questionID = ?\"; // Câu lệnh SQL truy vấn dữ liệu theo questionID\r\n        PreparedStatement statement;\r\n        statement = con.prepareStatement(sql);\r\n        statement.setString(1, questionID); // Thiết lập giá trị cho tham số\r\n        ResultSet rs = statement.executeQuery(); // Thực hiện câu lệnh và lấy kết quả trả về\r\n        if (rs.next()) { // Kiểm tra xem kết quả có dòng nào hay không\r\n            result = true; // Nếu có, nghĩa là questionID tồn tại\r\n        }\r\n        return result; // Trả về giá trị boolean\r\n    }\r\n    public void updateQuizMark(double mark, String quizChosen){\r\n        int rowUpdated = 0;\r\n        String sql = \"Update Quiz set mark = ? where quizName = N'\" + quizChosen + \"'\";\r\n        try {\r\n            PreparedStatement statement = con.prepareStatement(sql);\r\n            statement.setString(1, String.valueOf(mark));\r\n            rowUpdated = statement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public void insertIntoHistory(String quizName, double mark, LocalDateTime dateAttempt){\r\n        boolean rowInserted = false;\r\n        String querry = \"Insert into HistoryAttempt (quizName, mark, dateAttempt) values (?, ?, ?)\";\r\n        try {\r\n            PreparedStatement statement = con.prepareStatement(querry);\r\n            statement.setString(1, quizName);\r\n            statement.setDouble(2, mark);\r\n            statement.setTimestamp(3, Timestamp.valueOf(dateAttempt));\r\n            rowInserted = statement.execute();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/baitaplonoop/sql/DBConnect.java b/src/main/java/com/example/baitaplonoop/sql/DBConnect.java
--- a/src/main/java/com/example/baitaplonoop/sql/DBConnect.java	(revision ef6c0dc08bcf501aec970f54975b7604aee914e7)
+++ b/src/main/java/com/example/baitaplonoop/sql/DBConnect.java	(date 1688355850086)
@@ -10,10 +10,10 @@
     public DBConnect() {
         try {
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
-            String url = "jdbc:sqlserver://LAPTOP-5RN02RRR\\SQLEXPRESS:1433;databaseName=Exam_Management2;"
+            String url = "jdbc:sqlserver://Dat\\MSSQLSERVER01:1433;databaseName=Exam_Management2;"
                     + "encrypt=true;trustServerCertificate=true;sslProtocol=TLSv1.2";
             String username = "sa";
-            String password = "123123";
+            String password = "123";
             con = DriverManager.getConnection(url, username, password);
         } catch (ClassNotFoundException | SQLException ex) {
             Logger.getLogger(DBConnect.class.getName()).log(Level.SEVERE, null, ex);
